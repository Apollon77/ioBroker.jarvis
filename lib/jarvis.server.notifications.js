const crypto=require("crypto");module.exports={loadNotifications(){return new Promise((e,s)=>{this.adapter.getState("notifications",(i,t)=>{try{this.notifications=t&&t.val&&JSON.parse(t.val)||[];e()}catch(i){this.adapter.log.error("Error initially loading notifications: "+i.message);s(i.message)}})})},handleNotification(i,t){if(i&&i.endsWith(".addNotification")&&t&&t.val){this.adapter.setState("addNotification","",true);this.addNotification(t.val)}else if(i&&i.endsWith(".notifications")){try{this.notifications=JSON.parse(t?t.val:"[]")}catch(i){this.adapter.log.warn(i.message)}}},addNotification(i){try{const a=i.indexOf("{")>-1&&i.indexOf("}")>-1?JSON.parse(i):{title:i};a.message=a.message?a.message.replace(/(\r\n|\r|\n)/g,"<br />"):undefined;a.id=crypto.randomUUID();a.ts=a.ts||Date.now();if(a.devices){a.devices=Array.isArray(a.devices)?a.devices:a.devices.indexOf(",")>-1?a.devices.split(","):[a.devices]}if(a.display){a.display=Array.isArray(a.display)?a.display:a.display.indexOf(",")>-1?a.display.split(","):[a.display]}if(a.state!=="delete"){const e=this.settings.maxNotifications||500;this.notifications.push(a);this.adapter.setState("notifications",JSON.stringify(this.notifications.slice(-(e+1))),true)}const t=a.devices||Object.keys(this.clients);t.forEach(e=>{const s=this.clients[e];this.adapter.getState("clients."+s.ns+".connected",(i,t)=>{if(!i&&t&&t.val===true){this.adapter.log.debug("Client with ID "+e+" online. Notification delivered.");this.send({clientId:e},"notification",a)}else{s.unreadNotifications.push(a);this.adapter.log.debug("Client with ID "+e+" not online, thus saving notification for later ("+s.unreadNotifications.length+" saved).")}})})}catch(i){this.adapter.log.error("Error adding notification: "+i.message)}}};