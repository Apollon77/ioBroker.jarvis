const _fs=require("fs");const _got=require("got");const _os=require("os");const _path=require("path");const _schedule=require("node-schedule");const _semver=require("semver");const _uuid=require("uuid").v4;const{getDayOfYear}=require("date-fns");const Encryption=require("./encryption");class ioWebSocketClient{constructor(e,t,s,i,r){this._adapter=e;this._options=t;this._parentMessage=r;this._adapter.log.debug("Websocket-Handler for client initialized");this._client=s;this._socket=i;this._isAlive=Date.now();this._adapter.setObject("clients."+this._client.ns,{type:"device",common:{name:this._client.ip},native:{}},()=>this.updateStates());this.emit("_client","client",this._client);this.emit("_version","version",this._adapter.version);this._socket.on("ping",()=>this.heartbeat());const a={};this._socket.on("message",e=>{try{const{messageId:t,index:s,length:i,chunk:r}=e;a[t]=a[t]||{};a[t][s]=r;if(Object.keys(a[t]).length===i){const n=Object.values(a[t]).join("");this.handleMessage(n);delete a[t]}}catch(e){this.error();this._adapter.log.warn("Warning listing for messages from clients: "+e.message)}});this._socket.on("disconnect",e=>this.disconnect(e));this._subscribeStates={};this._subscribeOthers={};this._subscribeHistory={};this._adapter.on("stateChange",(e,t)=>this.handleStateChange(e,t));this._adapter.on("log",e=>this.handleLogChange(e));this.scheduler=_schedule.scheduleJob("0 * * * * *",s=>{if(this._isAlive&&this._isAlive<Date.now()-30*1e3){this.disconnect("Client timeout")}for(const i in this._subscribeHistory){const{messageId:r,stateId:n,options:e}=this._subscribeHistory[i];let t=false;if(e.timeRefresh){const a=Math.floor(e.timeRefresh/(24*60));const o=Math.floor(e.timeRefresh%(24*60)/60);const h=e.timeRefresh%60;t=(a===0||a&&getDayOfYear(s)%a===0)&&(o===0||o&&s.getHours()%o===0)&&(h===0||h&&s.getMinutes()%h===0)}else if(e.timeReviewUnit==="seconds"||e.timeReviewUnit==="minutes"){t=true}else if(e.timeReviewUnit==="hours"){t=s.getMinutes()%15===0}else if(e.timeReviewUnit==="days"){t=s.getHours()%6===0&&s.getMinutes()===0}else if(e.timeReviewUnit==="weeks"){t=s.getHours()===0&&s.getMinutes()===0}else if(e.timeReviewUnit==="months"){t=s.getDay()===0&&s.getHours()===0&&s.getMinutes()===0}if(t){this._adapter.log.debug("Refresh history of state "+n+"...");this.getHistory(r,i,n,e)}}})}disconnect(e){this._isAlive=0;this._adapter.log.debug("Client with IP "+(this._client?this._client.ip:"(unknown)")+" disconnecting: "+e);this._adapter.setState("clients."+this._client.ns+".connected",false,true);this.scheduler.cancel();this._parentMessage({clientId:this._client.id,event:"disconnect"})}updateStates(){const o={connected:{name:"Indicates client connection",role:"indicator.connected",type:"boolean",value:true},ip:{name:"Client IP",role:"info.ip",type:"string",value:this._client.ip},id:{name:"Client ID",role:"text",type:"string",value:this._client.id},userAgent:{name:"Client User Agent",role:"text",type:"string",value:this._client.userAgent},userPlatform:{name:"Client Platform Information",role:"text",type:"json",value:this._client.userPlatform},userBrowser:{name:"Client Browser",role:"text",type:"string",value:this._client.userBrowser},lastSeen:{name:"Client Last Seen",role:"value.time",type:"number",value:Date.now()}};Object.keys(o).forEach(e=>{const s="clients."+this._client.ns+"."+e;const{role:t,type:i,value:r,initial:n,subscribe:a}=o[e];this._adapter.setObjectNotExists(s,{type:"state",common:{role:t,type:i},native:{}},(e,t)=>{if(t&&n||r!==undefined){this._adapter.setState(s,typeof r==="object"?JSON.stringify(r,null,3):r,true)}})});const e="clients."+this._client.ns+".setTabId";this._adapter.setObjectNotExists(e,{type:"state",common:{role:"text",type:"string",write:true},native:{}},()=>{});this._parentMessage({...this._client,event:"clients"})}heartbeat(){this._socket.emit("pong");this._isAlive=Date.now();this.updateStates()}handleLogChange(e){this.emit("_log","log",e)}handleStateChange(e,t){if(e&&e.indexOf("."+this._client.ns+".")!==-1&&e.endsWith(".setTabId")&&t&&t.val&&t.ack!==true){this.emit("_setTabId","setTabId",t.val)}else if(this._subscribeStates[e]){this.emit(e,"stateChange",t?{state:{...t,stateId:e,id:e}}:{err:new Error("State with ID "+e+" is not a valid state ["+JSON.stringify(t)+"] (in handleStateChange)")})}}handleMessage(i){try{const r=JSON.parse(i);let{messageId:e,command:t,params:s=[]}=r;s=Array.isArray(s)?s:[s];t&&this[t](e,...s)}catch(e){this._adapter.log.warn("Warning handling message: "+e.message+" (see debug-log for details)");this._adapter.log.debug(i)}}emit(s,i,e={},r="message"){this._adapter.log.silly("Send message with ID "+s);if(e.err){e.err={name:e.err.name||e.err,message:e.err.message,stack:e.err.stack}}else if(e.err===null){e.err="_isNull"}const t=JSON.stringify(e).match(/.{1,100000}/g);const n=t.length;t.forEach((e,t)=>{this._socket.emit(r,{messageId:s,action:i,index:t,length:n,chunk:e})})}log(e,t,s){const i=s.map(e=>{return typeof e==="object"?JSON.stringify(e):e});this._adapter.log[t||"info"](i.join(", "));this.emit(e,"log")}getLogs(s,e=null){if(!e){const r=new Date;e=r.getFullYear()+"-"+("0"+(r.getMonth()+1)).substr(-2)+"-"+("0"+r.getDate()).substr(-2)}const t=this._adapter.systemConfig.log.transport.file1;const i=_path.resolve(this._adapter.systemConfig.dataDir+"../"+t.filename+"."+e+""+t.fileext);_fs.readFile(i,"utf-8",(e,t)=>{if(e){this.emit(s,"getLogs",{err:e});return}const o=t.substr(0,4);t=t.split("\n"+o);t=t.map((t,e)=>{t=e?o+t:t;const s=t.indexOf(": ")+2;const i=t.substr(s).indexOf("host")===-1?t.substr(s,t.indexOf(" (")-s):t.substr(s,t.indexOf(" ",s)-s);const r=new Date(t.substr(0,23)).getTime();const n=["silly","debug","info","warn","error"].find(e=>t.indexOf(e)!==-1);const a=t.substr(s).replace(/(?:\r\n|\r|\n)/g," ");return{from:i,ts:r,severity:n,message:a}});t=t.reverse();this.emit(s,"getLogs",{err:null,logs:t})})}getConfig(e){this.emit(e,"getConfig",{config:this._adapter.config})}readFile(s,e){e=_path.resolve(e.replace("{dirname}",__dirname));_fs.readFile(e,"utf-8",(e,t)=>{this.emit(s,"readFile",{err:e,data:t})})}sign(e,...t){this.emit(e,"sign",Encryption.sign(...t))}verify(e,...t){this.emit(e,"verify",Encryption.verify(...t))}encrypt(e,...t){this.emit(e,"encrypt",Encryption.encrypt(...t))}decrypt(e,...t){this.emit(e,"decrypt",Encryption.decrypt(...t))}request(t,s){try{if(s._encrypt&&s.body.data){s.body.data=encrypt(s.body.data,"KutTGsNQ8HCX$hrT9Ua5beRSs2BLVeQq");delete s._encrypt}if(s.json===true&&s.body){s.json=s.body;delete s.body}_got(s).then(e=>{this.emit(t,"request",{_options:s,data:e.body||""})}).catch(e=>{this.emit(t,"request",{err:e});this._adapter.log.warn("Warning requesting data from "+s.url+": "+e.message)})}catch(e){this.emit(t,"request",{err:e});this._adapter.log.warn("Warning requesting data from "+s.url+": "+e.message)}}verifyLogin(t,e,s){this._adapter.checkPassword(e,s,e=>{this.emit(t,"verifyLogin",{login:e})})}setAdapter(s,i,r,e){i="system.adapter."+i;this._adapter.getForeignObject(i,(e,t)=>{if(e||!t){this.emit(s,"setAdapter",{err:e});return}t.common.enabled=r;this._adapter.setForeignObject(i,t,e=>{this._parentMessage("getAdapterInstances");this.emit(s,"setAdapter",{err:e})})})}setScript(e,t,s,i){this.setState(e,"javascript.0.scriptEnabled."+t,s,i,()=>{this.getSpecial(_uuid(),"ScriptStatuses",{forceUpdate:true})})}setState(t,s,i,r,n=null){if(i&&(i._jarvis||["widgets"].some(e=>s.replace("jarivs."+this._adapter.instance).endsWith("."+e)))){const e=i._jarvis;i=i.val;if(_semver.lt(e,this._adapter.version)){const a="Version of jarvis does not match for setting state "+s+" ("+this._adapter.version+" vs. "+e+")!";this._adapter.log.warn(a);this.emit(t,"setState",{err:a});return}}this._adapter.setForeignState(s,i,r||false,{user:this._options.user},e=>{this.emit(t,"setState",{err:e,stateId:s,value:i,ack:r});n&&n()})}getSpecial(e,t,s){this._parentMessage({messageId:e,clientId:this._client.id,event:"get"+t,options:s})}subscribeSpecial(t,e,s){this._subscribeOthers[e]=this._subscribeOthers[e]||[];if(!this._subscribeOthers[e].some(e=>e.messageId===t)){this._subscribeOthers[e].push({messageId:t,options:s})}this.getSpecial(t,e,s)}setObject(t,e,s){this._adapter.setForeignObject(e,s,e=>{this.emit(t,"setObject",{err:e})})}getObject(s,i){this._adapter.getForeignObject(i,(e,t)=>{e=e||t===null&&"Object empty";t=t===null?null:{...t||{},id:i};this.emit(s,"getObject",{err:e,object:t})})}getObjects(t,i){let s=[];["device","channel","state"].forEach(e=>{s.push(new Promise(s=>{this._adapter.getForeignObjects(i||"*",e,(e,t)=>s({err:e,objects:t}))}))});let r=null;let n={};Promise.all(s).then(e=>{e.forEach(e=>{r=r||e.err;n={...n,...e.objects}});Object.keys(n).forEach(e=>{delete n[e].acl;const t=e.substr(0,e.indexOf(".",e.indexOf(".")+1));if(t&&!n[t]){n[t]={_id:t,type:"adapter"}}if(e.indexOf("system.adapter")>-1||e.indexOf("system.host")>-1||e.indexOf(".")===-1){delete n[e]}});this.emit(t,"getObjects",{err:r,objects:n})})}getObjectView(s,e,t,i,r){this._adapter.getObjectView(e,t,i,(e,t)=>{this.emit(s,"getObjectView",{err:e,objects:t&&t.rows||[]})})}subscribeState(e,s){this._subscribeStates[s]=true;this._adapter.getForeignState(s,{user:this._options.user},(e,t)=>{if(!e&&!t){e=new Error(s+" is not a valid state (in subscribeState)")}t=!t?null:{...t,id:s};this.handleStateChange(s,t)})}getState(s,i){this._adapter.getForeignState(i,{user:this._options.user},(e,t)=>{if(!e&&!t){e=new Error(i+" is not a valid state (in getState)")}t=!t?null:{...t,id:i};this.emit(s,"getState",{err:e,state:t})})}getStates(s,e){this._adapter.getForeignStates(e,{user:this._options.user},(e,t)=>{this.emit(s,"getStates",{err:e,states:t})})}unsubscribe(e,t,s,i){this._adapter.log.debug("unsubscribe ("+i+"): "+s+" | "+t);if(t==="history"&&s&&this._subscribeHistory[s]){delete this._subscribeHistory[s];this.emit(e,"unsubscribe",{subscriptionKey:s,type:t,stateId:i,err:null})}else{delete this._subscribeStates[i];this.emit(e,"unsubscribe",{subscriptionKey:s,stateId:i,err:"Not found"})}}subscribeHistory(e,t,s,i){this._adapter.log.debug("subscribeHistory ("+s+"): "+t+" | "+JSON.stringify(i));if(!this._subscribeHistory[t]){i.action="subscribeHistory";this._subscribeHistory[t]={subscriptionKey:t,messageId:e,stateId:s,options:{...i}};this.getHistory(e,t,s,{...i,force:true})}else{this.emit(e,"subscribeHistory",{subscriptionKey:t,err:null,hash:this._subscribeHistory[t].hash,history:this._subscribeHistory[t].history})}}getHistory(i,r,n,a={}){this._adapter.log.debug((a.action||"getHistory")+" ("+n+"): "+r+" | "+JSON.stringify(a));const s=a.instance||"history.0";Promise.allSettled([this._adapter.getForeignStateAsync("system.adapter."+s+".alive"),this._adapter.getForeignStateAsync("system.adapter."+s+".connected")]).then(e=>{const t=!e.some(e=>e.status!=="fulfilled"||(!e.value||e.value&&e.value.val!==true));if(!t){throw new Error(s+" not reachable")}return t}).then(()=>{this._adapter.getHistory(n,{...a,start:a.start||Date.now()-a.review,end:a.end||Date.now()},(e,t)=>{if(!e&&t){const s=t.length;if(this._subscribeHistory[r]&&(a.force===true||s!==this._subscribeHistory[r].hash)){this._adapter.log.debug((a.action||"getHistory")+" ("+n+"): Update");this._subscribeHistory[r].history=t;this._subscribeHistory[r].hash=s;this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:e,hash:s,history:t})}else{this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:e,hash:s,history:null,noUpdate:true})}}else{this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:e,hash:null,history:null})}})}).catch(e=>{this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:e,hash:null,history:null})})}getTime(e){this.emit(e,"getTime",(new Date).getTime())}getSystemInformation(e){this.emit(e,"getSystemInformation",{hostname:_os.hostname(),architecture:_os.arch(),platform:_os.platform(),release:_os.release()})}}module.exports=ioWebSocketClient;