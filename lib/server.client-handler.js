const _fs=require("fs");const _got=require("got");const _os=require("os");const _path=require("path");const _uuid=require("uuid").v4;const Encryption=require("./encryption");class ioWebSocketClient{constructor(t,e,s,i,r){this._adapter=t;this._options=e;this._parentMessage=r;this._adapter.log.debug("Websocket-Handler for client initialized");this._client=s;this._socket=i;this._isAlive=Date.now();this._adapter.setObject("clients."+this._client.ns,{type:"device",common:{name:this._client.ip},native:{}},()=>this.updateStates());this.emit("_client","client",this._client);this.emit("_version","version",this._adapter.version);this._socket.on("ping",()=>this.heartbeat());const a={};this._socket.on("message",t=>{try{const{messageId:e,index:s,length:i,chunk:r}=t;a[e]=a[e]||{};a[e][s]=r;if(Object.keys(a[e]).length===i){const n=Object.values(a[e]).join("");this.handleMessage(n);delete a[e]}}catch(t){this.error();this._adapter.log.warn(t.message||t)}});this._socket.on("disconnect",t=>this.disconnect(t));this._subscribeStates={};this._subscribeOthers={};this._subscribeHistory={};this._adapter.on("stateChange",(t,e)=>this.handleStateChange(t,e));this._adapter.on("log",t=>this.handleLogChange(t));this.intervalClientTimeout=setInterval(()=>{if(this._isAlive&&this._isAlive<Date.now()-30*1e3){this.disconnect("Client timeout")}},60*1e3);this.intervalHistoryRefresh=setInterval(()=>{this._adapter.log.debug("Refresh history of states...");for(const e in this._subscribeHistory){const{messageId:s,stateId:i,options:t}=this._subscribeHistory[e];this.getHistory(s,e,i,t)}},2*60*1e3)}disconnect(t){this._isAlive=0;this._adapter.log.debug("Client with IP "+(this._client?this._client.ip:"(unknown)")+" disconnecting: "+t);this._adapter.setState("clients."+this._client.ns+".connected",false,true);clearInterval(this.intervalClientTimeout);clearInterval(this.intervalHistoryRefresh);this._parentMessage({clientId:this._client.id,event:"disconnect"})}updateStates(){const o={connected:{name:"Indicates client connection",role:"indicator.connected",type:"boolean",value:true},ip:{name:"Client IP",role:"info.ip",type:"string",value:this._client.ip},id:{name:"Client ID",role:"text",type:"string",value:this._client.id},userAgent:{name:"Client User Agent",role:"text",type:"string",value:this._client.userAgent},userPlatform:{name:"Client Platform Information",role:"text",type:"json",value:this._client.userPlatform},userBrowser:{name:"Client Browser",role:"text",type:"string",value:this._client.userBrowser},lastSeen:{name:"Client Last Seen",role:"value.time",type:"number",value:Date.now()}};Object.keys(o).forEach(t=>{const s="clients."+this._client.ns+"."+t;const{role:e,type:i,value:r,initial:n,subscribe:a}=o[t];this._adapter.setObjectNotExists(s,{type:"state",common:{role:e,type:i},native:{}},(t,e)=>{if(e&&n||r!==undefined){this._adapter.setState(s,typeof r==="object"?JSON.stringify(r,null,3):r,true)}})});const t="clients."+this._client.ns+".setTabId";this._adapter.setObjectNotExists(t,{type:"state",common:{role:"text",type:"string",write:true},native:{}},()=>{});this._parentMessage({...this._client,event:"clients"})}heartbeat(){this._socket.emit("pong");this._isAlive=Date.now();this.updateStates()}handleLogChange(t){this.emit("_log","log",t)}handleStateChange(t,e){if(t&&t.indexOf("."+this._client.ns+".")!==-1&&t.endsWith(".setTabId")&&e&&e.val&&e.ack!==true){this.emit("_setTabId","setTabId",e.val)}else if(this._subscribeStates[t]){this.emit(t,"stateChange",e?{state:{...e,stateId:t,id:t}}:{err:new Error("State with ID "+t+" is not a valid state ["+JSON.stringify(e)+"] (in handleStateChange)")})}}handleMessage(i){try{const r=JSON.parse(i);let{messageId:t,command:e,params:s=[]}=r;s=Array.isArray(s)?s:[s];e&&this[e](t,...s)}catch(t){this._adapter.log.warn(t.message||t);this._adapter.log.debug(i)}}emit(s,i,t={},r="message"){this._adapter.log.silly("Send message with ID "+s);if(t.err){t.err={name:t.err.name,message:t.err.message,stack:t.err.stack}}else if(t.err===null){t.err="_isNull"}const e=JSON.stringify(t).match(/.{1,100000}/g);const n=e.length;e.forEach((t,e)=>{this._socket.emit(r,{messageId:s,action:i,index:e,length:n,chunk:t})})}log(t,e,s){const i=s.map(t=>{return typeof t==="object"?JSON.stringify(t):t});this._adapter.log[e||"info"](i.join(", "));this.emit(t,"log")}getLogs(s,t="current"){const e=this._adapter.systemConfig.log.transport.file1;const i=_path.resolve(this._adapter.systemConfig.dataDir+"../"+e.filename+"."+t+""+e.fileext);_fs.readFile(i,"utf-8",(t,e)=>{if(t){this.emit(s,"getLogs",{err:t});return}const o=e.substr(0,4);e=e.split("\n"+o);e=e.map((e,t)=>{e=t?o+e:e;const s=e.indexOf(": ")+2;const i=e.substr(s).indexOf("host")===-1?e.substr(s,e.indexOf(" (")-s):e.substr(s,e.indexOf(" ",s)-s);const r=new Date(e.substr(0,23)).getTime();const n=["silly","debug","info","warn","error"].find(t=>e.indexOf(t)!==-1);const a=e.substr(s).replace(/(?:\r\n|\r|\n)/g," ");return{from:i,ts:r,severity:n,message:a}});e=e.reverse();this.emit(s,"getLogs",{err:null,logs:e})})}getConfig(t){this.emit(t,"getConfig",{config:this._adapter.config})}readFile(s,t){t=_path.resolve(t.replace("{dirname}",__dirname));_fs.readFile(t,"utf-8",(t,e)=>{this.emit(s,"readFile",{err:t,data:e})})}sign(t,...e){this.emit(t,"sign",Encryption.sign(...e))}verify(t,...e){this.emit(t,"verify",Encryption.verify(...e))}encrypt(t,...e){this.emit(t,"encrypt",Encryption.encrypt(...e))}decrypt(t,...e){this.emit(t,"decrypt",Encryption.decrypt(...e))}request(e,s){try{if(s._encrypt&&s.body.data){s.body.data=encrypt(s.body.data,"KutTGsNQ8HCX$hrT9Ua5beRSs2BLVeQq");delete s._encrypt}if(s.json===true&&s.body){s.json=s.body;delete s.body}_got(s).then(t=>{this.emit(e,"request",{_options:s,data:t.body||""})}).catch(t=>{this.emit(e,"request",{err:t});this._adapter.log.warn(t.message||er)})}catch(t){this.emit(e,"request",{err:t});this._adapter.log.warn(t.message||t)}}verifyLogin(e,t,s){this._adapter.checkPassword(t,s,t=>{this.emit(e,"verifyLogin",{login:t})})}setAdapter(s,i,r,t){i="system.adapter."+i;this._adapter.getForeignObject(i,(t,e)=>{if(t||!e){this.emit(s,"setAdapter",{err:t});return}e.common.enabled=r;this._adapter.setForeignObject(i,e,t=>{this._parentMessage("getAdapterInstances");this.emit(s,"setAdapter",{err:t})})})}setScript(t,e,s,i){this.setState(t,"javascript.0.scriptEnabled."+e,s,i,()=>{this.getSpecial(_uuid(),"ScriptStatuses",{forceUpdate:true})})}setState(e,s,i,r,n=null){this._adapter.setForeignState(s,i,r||false,{user:this._options.user},t=>{this.emit(e,"setState",{err:t,stateId:s,value:i,ack:r});n&&n()})}getSpecial(t,e,s){this._parentMessage({messageId:t,clientId:this._client.id,event:"get"+e,options:s})}subscribeSpecial(e,t,s){this._subscribeOthers[t]=this._subscribeOthers[t]||[];if(!this._subscribeOthers[t].some(t=>t.messageId===e)){this._subscribeOthers[t].push({messageId:e,options:s})}this.getSpecial(e,t,s)}getObject(s,i){this._adapter.getForeignObject(i,(t,e)=>{e={...e||{},id:i};this.emit(s,"getObject",{err:t,object:e})})}getObjects(e,i){let s=[];["device","channel","state"].forEach(t=>{s.push(new Promise(s=>{this._adapter.getForeignObjects(i||"*",t,(t,e)=>s({err:t,objects:e}))}))});let r=null;let n={};Promise.all(s).then(t=>{t.forEach(t=>{r=r||t.err;n={...n,...t.objects}});Object.keys(n).forEach(t=>{delete n[t].acl;const e=t.substr(0,t.indexOf(".",t.indexOf(".")+1));if(e&&!n[e]){n[e]={_id:e,type:"adapter"}}if(t.indexOf("system.adapter")>-1||t.indexOf("system.host")>-1||t.indexOf(".")===-1){delete n[t]}});this.emit(e,"getObjects",{err:r,objects:n})})}getObjectView(s,t,e,i,r){this._adapter.getObjectView(t,e,i,(t,e)=>{this.emit(s,"getObjectView",{err:t,objects:e&&e.rows||[]})})}subscribeState(t,s){this._subscribeStates[s]=true;this._adapter.getForeignState(s,{user:this._options.user},(t,e)=>{if(!t&&!e){t=new Error(s+" is not a valid state (in subscribeState)")}e=!e?null:{...e,id:s};this.handleStateChange(s,e)})}getState(s,i){this._adapter.getForeignState(i,{user:this._options.user},(t,e)=>{if(!t&&!e){t=new Error(i+" is not a valid state (in getState)")}e=!e?null:{...e,id:i};this.emit(s,"getState",{err:t,state:e})})}getStates(s,t){this._adapter.getForeignStates(t,{user:this._options.user},(t,e)=>{this.emit(s,"getStates",{err:t,states:e})})}unsubscribe(t,e,s,i){this._adapter.log.debug("unsubscribe ("+i+"): "+s+" | "+e);if(e==="history"&&s&&this._subscribeHistory[s]){delete this._subscribeHistory[s];this.emit(t,"unsubscribe",{subscriptionKey:s,type:e,stateId:i,err:null})}else{delete this._subscribeStates[i];this.emit(t,"unsubscribe",{subscriptionKey:s,stateId:i,err:"Not found"})}}subscribeHistory(t,e,s,i){this._adapter.log.debug("subscribeHistory ("+s+"): "+e+" | "+JSON.stringify(i));if(!this._subscribeHistory[e]){i.action="subscribeHistory";this._subscribeHistory[e]={subscriptionKey:e,messageId:t,stateId:s,options:i};this.getHistory(t,e,s,{...i,force:true})}else{this.emit(t,"subscribeHistory",{subscriptionKey:e,err:null,hash:this._subscribeHistory[e].hash,history:this._subscribeHistory[e].history})}}getHistory(i,r,n,a={}){this._adapter.log.debug((a.action||"getHistory")+" ("+n+"): "+r+" | "+JSON.stringify(a));a.start=a.start||Date.now()-a.review;a.end=a.end||Date.now();a.instance=a.instance||"history.0";Promise.allSettled([this._adapter.getForeignStateAsync("system.adapter."+a.instance+".alive"),this._adapter.getForeignStateAsync("system.adapter."+a.instance+".connected")]).then(t=>{const e=!t.some(t=>t.status!=="fulfilled"||(!t.value||t.value&&t.value.val!==true));if(!e){throw new Error(a.instance+" not reachable")}return e}).then(()=>{this._adapter.getHistory(n,a,(t,e)=>{if(!t&&e){const s=e.length;if(this._subscribeHistory[r]&&(a.force===true||s!==this._subscribeHistory[r].hash)){this._adapter.log.debug((a.action||"getHistory")+" ("+n+"): Update");this._subscribeHistory[r].history=e;this._subscribeHistory[r].hash=s;this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:t,hash:s,history:e})}else{this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:t,hash:s,history:null,noUpdate:true})}}else{this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:t,hash:null,history:null})}})}).catch(t=>{this.emit(i,a.action||"getHistory",{subscriptionKey:r,err:t,hash:null,history:null})})}getSystemInformation(t){this.emit(t,"getSystemInformation",{hostname:_os.hostname(),architecture:_os.arch(),platform:_os.platform(),release:_os.release()})}}module.exports=ioWebSocketClient;