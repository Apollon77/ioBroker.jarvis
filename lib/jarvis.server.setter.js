const _semver=require("semver");const Encryption=require("./encryption");module.exports={decrypt({cb:e},...r){e(Encryption.decrypt(...r))},encrypt({cb:e},...r){e(Encryption.encrypt(...r))},sign({cb:e},...r){e(Encryption.sign(...r))},verify({cb:e},...r){e(Encryption.verify(...r))},setAdapter({cb:t},s,i,e){s="system.adapter."+s;this.adapter.getForeignObject(s,(e,r)=>{if(e||!r){t({err:e});return}r.common.enabled=i;this.adapter.setForeignObject(s,r,e=>{t({err:e})})})},setObject({cb:r},e,t){this.adapter.setForeignObject(e,t,e=>{r({err:e})})},setScript({cb:e},r,t,s){this.setState({cb:e},"javascript.0.scriptEnabled."+r,t,s,()=>{})},log({clientId:e},t,s){s=Array.isArray(s)?s:[s];const i={debug:["debug","info","warn","error"],info:["info","warn","error"],warn:["warn","error"],error:["error"],off:[]};if(this.clients[e]){const a=this.clients[e];this.adapter.getState("clients.allBrowserConsoleInLog",(e,r)=>{if(!e&&r&&r.val==="off"){this.adapter.getState("clients."+a.ns+".browserConsoleInLog",(e,r)=>{if(!e&&r&&r.val&&i[r.val].includes(t)){this.adapter.log[t](a.ip+" ("+a.userBrowser+") - "+s.join(", "))}})}else if(!e&&r&&r.val&&i[r.val].includes(t)){this.adapter.log[t](a.ip+" ("+a.userBrowser+") - "+s.join(", "))}})}},setState({cb:r},t,s,i){if(s&&(s._jarvis||["widgets"].some(e=>t==="jarvis."+this.adapter.instance+"."+e))){const e=s._jarvis;s=s.val;if(e&&_semver.lt(e,this.adapter.version)){const a="Version of jarvis does not match for setting state "+t+" ("+this.adapter.version+" vs. "+e+")!";this.adapter.log.warn(a);r({err:a});return}}this.adapter.setForeignState(t,s,i||false,{user:this.options.user},e=>{r({err:e,stateId:t,value:s,ack:i})})}};