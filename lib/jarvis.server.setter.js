const _semver=require("semver");const Encryption=require("./encryption");module.exports={decrypt({cb:e},...t){e(Encryption.decrypt(...t))},encrypt({cb:e},...t){e(Encryption.encrypt(...t))},sign({cb:e},...t){e(Encryption.sign(...t))},verify({cb:e},...t){e(Encryption.verify(...t))},setAdapter({cb:r},s,i,e){s="system.adapter."+s;this.adapter.getForeignObject(s,(e,t)=>{if(e||!t){r({err:e});return}t.common.enabled=i;this.adapter.setForeignObject(s,t,e=>{r({err:e})})})},setObject({cb:t},e,r){this.adapter.setForeignObject(e,r,e=>{t({err:e})})},setScript({cb:e},t,r,s){this.setState({cb:e},"javascript.0.scriptEnabled."+t,r,s,()=>{})},log({clientId:e},r,s){s=Array.isArray(s)?s:[s];if(this.clients[e]){const i=this.clients[e];this.adapter.getState("clients."+i.ns+".browserConsoleInLog",(e,t)=>{if(!e&&t&&t.val){this.adapter.log[r](i.ip+" ("+i.userBrowser+") - "+s.join(", "))}})}},setState({cb:t},r,s,i){if(s&&(s._jarvis||["widgets"].some(e=>r==="jarvis."+this.adapter.instance+"."+e))){const e=s._jarvis;s=s.val;if(e&&_semver.lt(e,this.adapter.version)){const a="Version of jarvis does not match for setting state "+r+" ("+this.adapter.version+" vs. "+e+")!";this.adapter.log.warn(a);t({err:a});return}}this.adapter.setForeignState(r,s,i||false,{user:this.options.user},e=>{t({err:e,stateId:r,value:s,ack:i})})}};