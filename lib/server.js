const _fs=require("fs-extra");const _got=require("got");const _ip=require("ip");const _os=require("os");const _platform=require("platform");const _schedule=require("node-schedule");const _semver=require("semver");const _uuid=require("uuid").v5;const _cookieParser=require("cookie-parser");const{WebSocketServer}=require("ws");const EventEmitter=require("events");const{objectHash}=require("ohash");const _ical=require("node-ical");const{RRule}=require("rrule");const _datefns=require("date-fns");const _rfdc=require("rfdc")();const{getDateLocale}=require("./date");const{decrypt}=require("./encryption");const ioWebSocketClient=require("./server.client-handler");class ioWebSocket extends EventEmitter{constructor(e=null,t={}){super();if(!e){throw new Error("No adapter instance passed to WebSocket constructor!")}this._adapter=e;this._options=t||{};if(this._options.user&&this._options.user.indexOf("system.user.")===-1){this._options.user="system.user."+this._options.user}this._options.port=t.port||8400;this._options.certificates=t.certificates||null;this.server=null;this.wss=null;this.clients={};this.sockets={};this.connect();this.cache={};this._adapter.requireLog(true);this._adapter.subscribeForeignStates("*");this._adapter.subscribeForeignObjects("*");this._adapter.getForeignState("admin.0.info.updatesJson",(e,t)=>{if(!e&&t){try{this.cache["AdapterUpdates"]=JSON.parse(t.val)}catch(e){delete this.cache["AdapterUpdates"]}}});this._adapter.sendTo("iot.0","browse",{},e=>this.getCloudDevices(e));this.getAdapterInstances().then(e=>{Object.keys(e).forEach(t=>{if(this.hasHistoryAdapter(t)){this._adapter.sendTo(t,"getEnabledDPs",{},e=>this.getHistoryDevices(t,e))}})});this.updateAdapterInstances();this._adapter.on("objectChange",(t,s)=>{if(s&&s.common.smartName&&!this.cache.CloudDevices.data.includes(t)){this.cache.CloudDevices.data.push(t);this.sendSubscribedClients("CloudDevices",this.cache.CloudDevices.data)}else if(s&&!s.common.smartName&&this.cache.CloudDevices&&this.cache.CloudDevices.data.includes(t)){this.cache.CloudDevices.data=this.cache.CloudDevices.data.filter(e=>e!==t);this.sendSubscribedClients("CloudDevices",this.cache.CloudDevices.data)}const e=s&&s.common&&s.common.custom?Object.keys(s.common.custom):[];if(e.find(e=>this.hasHistoryAdapter(e))){this.cache.HistoryDevices.data[t]={};e.forEach(e=>{this.cache.HistoryDevices.data[t][e]=s.common.custom[e]});this.sendSubscribedClients("HistoryDevices",this.cache.HistoryDevices.data)}else if(this.cache.HistoryDevices&&this.cache.HistoryDevices.data[t]!==undefined){this.cache.HistoryDevices.data[t]={};this.sendSubscribedClients("HistoryDevices",this.cache.HistoryDevices.data)}});this._adapter.on("stateChange",(e,t)=>{if(e.startsWith("javascript.0.scriptEnabled.")&&t&&t.ack===true){this.getScriptStatuses(true)}else if(e==="admin.0.info.updatesJson"&&t){try{this.cache["AdapterUpdates"]=JSON.parse(t.val)}catch(e){delete this.cache["AdapterUpdates"]}}})}hasHistoryAdapter(e){const[t,s]=e.split(".");return["sql","history","influx"].includes(t)}sendSubscribedClients(t,s){for(const i in this.sockets){if(this.sockets[i]._subscribeOthers&&this.sockets[i]._subscribeOthers[t]){this.sockets[i]._subscribeOthers[t].forEach(({messageId:e})=>{this.sockets[i].emit(e,t,s)})}else{this.sockets[i].emit("_"+t,t,s)}}}getHistoryDevices(s,t){this.cache.HistoryDevices=this.cache.HistoryDevices||{data:{}};return new Promise(e=>{Object.entries(t).forEach(([e,t])=>{this.cache.HistoryDevices.data[e]=this.cache.HistoryDevices.data[e]||{};this.cache.HistoryDevices.data[e][s]=t});e(this.cache.HistoryDevices.data)})}getCloudDevices(t){this.cache.CloudDevices={data:[]};return new Promise(e=>{t&&Array.isArray(t)&&t.forEach(e=>{if(e.additionalApplianceDetails.id){this.cache.CloudDevices.data.push(e.additionalApplianceDetails.id)}else{this.cache.CloudDevices.data=this.cache.CloudDevices.data.concat(Object.keys(e.additionalApplianceDetails.names))}});e(this.cache.CloudDevices.data)})}getCalendarEvents(a,e,r,n,t){const s=(new Date).getTimezoneOffset();const o=new Date(Date.UTC(r,n-1,1));const c=_datefns.subMinutes(_datefns.endOfDay(_datefns.lastDayOfMonth(o)),s);const{locale:d}=t;return _ical.async.parseICS(e).then(e=>{let t=[];for(const s in e){const i=e[s];if(i&&i.summary&&i.type==="VEVENT"&&i.start&&i.start instanceof Date){i.isAllDay=i.start.toString().indexOf("00:00:00")!==-1&&(!i.end||i.end.toString().indexOf("00:00:00")>-1);i.end=i.isAllDay?_datefns.subSeconds(i.end,1):i.end;i.time=i.isAllDay?"all day":i.multiDay?"several days":_datefns.format(i.start,"HH:mm",{locale:d})+(i.end?"-"+_datefns.format(i.end,"HH:mm",{locale:d}):"");i.multiDay=i.end&&(i.start.getDate()!==i.end.getDate()||i.start.getMonth()!==i.end.getMonth());i.duration=i.end?_datefns.differenceInDays(i.end,i.start):1;i.caption=i.multiDay?_datefns.format(i.start,"EEE, dd.MM."+(i.isAllDay?"":", HH:mm"),{locale:d})+" - "+_datefns.format(i.end,"EEE, dd.MM."+(i.isAllDay?"":", HH:mm"),{locale:d}):_datefns.format(i.start,"EEE, dd.MM.",{locale:d})+", "+_datefns.formatDistanceToNow(i.isAllDay?_datefns.addHours(i.start,12):i.start,{locale:d,addSuffix:true});if(i.rrule){let e=i.rrule.between(o,c);if(i.exdate){e=e.filter(e=>{const t=_datefns.format(e,"yyyy-MM-dd",{locale:d});return i.exdate[t]===undefined})}e=e.map(e=>{const t=_rfdc(i);t.recurring=true;delete t.rrule;delete t.exdate;const s=i.end-i.start;t.start=e;t.end=_datefns.addMilliseconds(e,s);t.caption=_datefns.format(t.start,"EEE, dd.MM.",{locale:d})+", "+_datefns.formatDistanceToNow(t.isAllDay?_datefns.addHours(t.start,12):t.start,{locale:d,addSuffix:true});return t});t=t.concat(e)}else{if(i.start>=o&&i.start<=c){t.push(i)}else if(i.start<o&&i.end>=o){t.push(i)}}}}t=t.sort((e,t)=>e.start===t.start?0:e.start>t.start?1:-1);const s="Calendar:"+a.id+":"+r+"-"+n;this.cache[s]={calendar:a,ts:Date.now(),hash:objectHash(t),events:t};return t}).catch(e=>{console.error(e);return[]})}getCalendar({calendar:i,year:a,month:r,options:n={}}){n.language=n.language||"en-US";n.refresh=n.refresh||5;n.locale=getDateLocale(n.language);this.cache["Calendar:"+i.id]=this.cache["Calendar:"+i.id]||{calendar:i,ts:null,hash:null,data:{}};const e="Calendar:"+i.id+":"+a+"-"+r;this.cache[e]=this.cache[e]||{calendar:i,ts:null,hash:null,events:[]};const t=Date.now()-n.refresh*60*1e3;if(!n.forceUpdate&&this.cache[e].ts&&this.cache[e].ts>t){this._adapter.log.debug("Got events for "+i.name+" ("+i.id+") "+a+"-"+r+" from Cache.");return Promise.resolve({events:this.cache[e].events})}else if(!n.forceUpdate&&this.cache["Calendar:"+i.id].ts&&this.cache["Calendar:"+i.id].ts>t){this._adapter.log.debug("Got ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from Cache.");return this.getCalendarEvents(i,this.cache["Calendar:"+i.id].data,a,r,n).then(e=>({events:e}))}else if(i.url&&(i.url.indexOf("http")>-1||i.url.indexOf("www.")>-1)){this._adapter.log.debug("Get ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from URL...");let e={};if(i.user&&i.pass){const{decrypted:s}=decrypt(i.pass,this._options.encryptionKey);e={username:i.user,password:s}}let t={url:i.url,...e};if(i.url.indexOf("https")>-1){t={...t,https:{rejectUnauthorized:i.sslignore!==undefined?i.sslignore===false:true}}}return _got(t).then(e=>{const t=e.body||"";this._adapter.log.debug("Got ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from URL.");this.cache["Calendar:"+i.id]={calendar:i,ts:Date.now(),data:t};return this.getCalendarEvents(i,this.cache["Calendar:"+i.id].data,a,r,n)}).then(e=>{return{events:e}}).catch(e=>{this._adapter.log.warn("Failed getting ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from URL: "+i.url+" ("+e.message+")");this._adapter.log.debug("Request: "+JSON.stringify({...t,encryptionKey:this._options.encryptionKey},null,3));return{error:e}})}else if(i.url&&i.url.indexOf("http")===-1){this._adapter.log.debug("Calendar","Get ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from local path...");return new Promise(s=>{_fs.readFile(i.url,"utf-8",(e,t)=>{if(e){this._adapter.log.warn("Failed getting ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from local path: "+e.message);return s({error:e})}this._adapter.log.debug("Got ical data for "+i.name+" ("+i.id+") "+a+"-"+r+" from local path.");this.cache["Calendar:"+i.id]={calendar:i,ts:Date.now(),data:t};this.getCalendarEvents(i,this.cache["Calendar:"+i.id].data,a,r,n).then(e=>({events:e}))})})}}getScriptStatuses(l=false){this.cache["ScriptStatuses"]=this.cache["ScriptStatuses"]||{hash:null,data:{}};return new Promise(h=>{this._adapter.getObjectView("system","script",null,(e,t)=>{const s=[];const r={};t.rows=t.rows||[];t.rows.forEach(e=>{const t=e.id.replace("script.js.","");const s=t.substr(0,t.lastIndexOf("."));const i=t.substr(0,t.indexOf("."));e=e.value;e.disabled=!e.enabled;delete e.common.source;r[t]={...r[t],...e.common,created:e.ts,type:"file",id:t,parentId:s,lazy:false,children:null};r[s]={...r[s]||{},type:"folder",id:s,parentId:s.substr(0,s.lastIndexOf(".")),children:r[s]&&r[s].children||[]};r[s].children.push(r[t]);const a=t.split(".");if(a.length>2){a.forEach((e,t)=>{const s=a.slice(0,t).join(".");const i=s.substr(0,s.lastIndexOf("."));if(s&&i){r[i]=r[i]||{id:i,parentId:i.substr(0,i.lastIndexOf(".")),type:"folder",children:[]};if(r[i].children.findIndex(e=>e.id===s)===-1){r[i].children.push({id:s,type:"folder",lazy:true})}}})}});const i=Object.values(r);let a={},n,o=[],c;i.sort((e,t)=>{return e.type==="folder"&&t.type==="file"?-1:e.id.toLowerCase()===t.id.toLowerCase()?0:e.id.toLowerCase()>t.id.toLowerCase()?1:-1});for(c=0;c<i.length;c+=1){a[i[c].id]=c;i[c].children=[]}for(c=0;c<i.length;c+=1){n=i[c];if(n.parentId!==""){i[a[n.parentId]].children.push(n)}else{o.push(n)}}const d=objectHash(r);if(l===true||this.cache["ScriptStatuses"].hash!==d){this._adapter.log.debug("Push update of scripts..");this.cache["ScriptStatuses"]={hash:d,data:{scripts:o,scriptList:s}};return h({scripts:o,scriptList:s})}})})}getAdapterInstances(){this.cache["AdapterInstances"]=this.cache["AdapterInstances"]||{hash:null,data:{}};return new Promise(a=>{this._adapter.getObjectView("system","instance",{startkey:"system.adapter.",endkey:"system.adapter.zzz"},(e,t)=>{const n={};if(!e&&t&&t.rows){t.rows.forEach(async e=>{const t=e.id.replace("system.adapter.","");n[t]={...e.value.common,_id:e.id,id:t};const s=await this._adapter.getForeignStateAsync(e._id+".alive");const i=await this._adapter.getForeignStateAsync(e._id+".connected");const a=await this._adapter.getForeignStateAsync(t+".info.connection");n[t].alive=s?s.val:null;n[t].connectedToHost=i?i.val:null;n[t].connectedToInstance=a?a.val:null;const r=this.cache["AdapterUpdates"]&&this.cache["AdapterUpdates"][n[t].name]&&this.cache["AdapterUpdates"][n[t].name].availableVersion||n[t].version;n[t].update=r&&n[t].version&&_semver.gt(r,n[t].version)===true?r:null;delete n[t].docs;delete n[t].news});const s=Object.keys(n).sort().reduce((e,t)=>{e[t]=n[t];return e},{});const i=objectHash(s);if(this.cache["AdapterInstances"].hash!==i){this._adapter.log.debug("Push update of instances..");this.cache["AdapterInstances"]={hash:i,data:s};return a(s)}}})})}updateAdapterInstances(){this.scheduler=_schedule.scheduleJob("*/30 * * * * *",e=>{this._adapter.log.silly("Refresh Adapter Instances and Script Statuses..");this.sendSubscribedClients("timestamp",(new Date).getTime());this.getAdapterInstances().then(e=>{this.sendSubscribedClients("AdapterInstances",e)});this.getScriptStatuses().then(e=>{this.sendSubscribedClients("ScriptStatuses",e)})})}eventFromClient(t){const s=t.clientId;t.options=t.options||{};if(t.event==="disconnect"){if(s&&this.clients[s]){this._adapter.log.info("Client with IP "+(this.clients[s]?this.clients[s].ip:"(unknown)")+" disconnected.");delete this.clients[s]}this.emit("CLIENT_LIST",this.clients)}else if(t.event==="clients"){const{event:e,...i}=t;this.clients[t.id]={...i,ts:Date.now()};this.emit("CLIENT_LIST",this.clients)}else if(t.event==="getHistoryDevices"||t.event==="getCloudDevices"||t.event==="getAdapterInstances"||t.event==="getScriptStatuses"||t.event==="getCalendar"){const a=t.event.replace("get","");this._adapter.log.debug(t.event+": Retrieving with options "+JSON.stringify(t.options));if(!t.options.forceUpdate&&this.sockets[s]&&this.sockets[s]._subscribeOthers&&this.sockets[s]._subscribeOthers[a]&&this.cache[a]){this.sockets[s]._subscribeOthers[a].forEach(({messageId:e})=>{this.sockets[s].emit(e,a,this.cache[a].data)})}else if(this.sockets[s]&&this[t.event]){this[t.event](t.options).then(e=>{this.sockets[s]&&this.sockets[s].emit(t.messageId,a,e)}).catch(e=>{this.sockets[s]&&this.sockets[s].emit(t.messageId,a,{error:e});this._adapter.log.warn(t.event+": "+e.message)})}else if(s){const r="Unknown error (using options "+JSON.stringify(t.options)+")";this.sockets[s]&&this.sockets[s].emit(t.messageId,a,{error:r});this._adapter.log.warn(t.event+": "+r)}}}connect(){const i=_ip.address();const e=_os.hostname();this._adapter.log.debug("Connection: ioBroker host detected with "+e+" (IP: "+i+").");const n={};const o={};const t=(s,a)=>{const r=s.headers.cookie;const e={headers:{Cookie:r},https:{rejectUnauthorized:false}};const t=this._options.auth!==true||n[r]?Promise.resolve({body:n[r]||""}):_got((this._options.secure===true?"https":"http")+"://"+i+":"+this._options.webPort+"/prolongSession",e);t.then(({body:e})=>{const t=RegExp("\\d{4}-(?:0[1-9]|1[0-2])-(?:[0-2][1-9]|[1-3]0|3[01])T(?:[0-1][0-9]|2[0-3])(?::[0-6]\\d)(?::[0-6]\\d)?(?:.\\d{3})?(?:[+-][0-2]\\d:[0-5]\\d|Z)?");if(this._options.auth===true&&!t.test(e)){throw new Error("Incorrect Authentication")}n[r]=e;let i=decodeURI(s.url);i=i==="/"?"/index.html":i;i=i.replace("/jarvis","").substr(1);if(o[i]!==undefined){a.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":o[i].mimeType});a.end(o[i].buffer)}else{this._adapter.readFile("jarvis",i,(e,t,s)=>{if(e||!s){this._adapter.log.warn(i+": "+(e.message||"No Mime Type"));a.writeHead(404);a.end(e&&e.message||e||"No Mime Type")}else{o[i]={buffer:t,mimeType:s};a.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":o[i].mimeType});a.end(o[i].buffer)}})}}).catch(e=>{a.writeHead(302,{Location:(this._options.secure===true?"https":"http")+"://"+i+":"+this._options.webPort+"/login"});a.end()})};if(this._options.certificates!==null){const a={...this._options.certificates,allowHTTP1:true};this.server=require("http2").createSecureServer(a,t);this._adapter.log.debug("Connection: Using secure HTTPS-Server")}else{this.server=require("http").createServer(t);this._adapter.log.debug("Connection: Using non-secure HTTP-Server")}let s=this._adapter.config.hostWhitelist?this._adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];s=s.concat(["localhost","127.0.0.1",i,e]);this._adapter.log.debug("Connection: Using options: "+JSON.stringify(this._options.connection||{}));this.wss=null;try{this.wss=new WebSocketServer({server:this.server})}catch(e){this._adapter.log.error(e.message)}this.wss.on("error",e=>{this._adapter.log.error("WebSocket Error: "+e.message);this._adapter.log.debug(e)});this.wss.on("connection",(e,t)=>{this._adapter.log.debug("Client connecting...");const s=t.headers["user-agent"];const i=_platform.parse(s);const a=i.name||"";const r=t.connection.remoteAddress.indexOf(":")!==-1?t.connection.remoteAddress.substr(t.connection.remoteAddress.lastIndexOf(":")+1):t.connection.remoteAddress;const n=(r?r.replace(/\./g,"-"):"no-ip-detected")+"_"+(a?a.replace(/ /g,"-"):"no-browser-detected");const o=_uuid(n,"d03b9915-564d-491e-a0e0-7ef4af0a52d1");this.clients[o]={userAgent:s,userPlatform:i||{},userBrowser:a,ip:r,ns:n,id:o,ts:Date.now()};this.sockets[o]=new ioWebSocketClient(this._adapter,this._options,this.clients[o],e,e=>this.eventFromClient(e));this.emit("CLIENT_NEW",this.clients[o]);this.emit("CLIENT_LIST",this.clients);this._adapter.log.info("Client with IP "+(this.clients[o]?this.clients[o].ip:"(unknown)")+" connected.")});this.server.listen(this._options.port,"0.0.0.0",()=>{this._adapter.log.info("Connection: WebSocket opened on port "+this.server.address().port+(this._options.certificates!==null?" using https":" using http")+"...")})}}module.exports=ioWebSocket;