const{Server}=require("socket.io");const EventEmitter=require("events");const _got=require("got");const _ip=require("ip");const _uuid=require("uuid").v5;const _semver=require("semver");const _os=require("os");const _platform=require("platform");const{objectHash}=require("ohash");const _ical=require("node-ical");const{RRule}=require("rrule");const _datefns=require("date-fns");const _rfdc=require("rfdc")();const{getDateLocale}=require("./date");const{decrypt}=require("./encryption");const ioWebSocketClient=require("./server.client-handler");class ioWebSocket extends EventEmitter{constructor(e=null,t={}){super();if(!e){throw new Error("No adapter instance passed to WebSocket constructor!")}this._adapter=e;this._options=t||{};if(this._options.user&&this._options.user.indexOf("system.user.")===-1){this._options.user="system.user."+this._options.user}this._options.port=t.port||8400;this._options.certificates=t.certificates||null;this.server=null;this.wss=null;this.clients={};this.sockets={};this.connect();this.cache={};this._adapter.requireLog(true);this._adapter.subscribeForeignStates("*");this.getAdapterInstances();this.updateAdapterInstances();this._adapter.getForeignState("admin.0.info.updatesJson",(e,t)=>{if(!e&&t){try{this.cache["AdapterUpdates"]=JSON.parse(t.val)}catch(e){delete this.cache["AdapterUpdates"]}this.getAdapterInstances()}});this._adapter.on("stateChange",(e,t)=>{if(e.startsWith("javascript.0.scriptEnabled.")&&t&&t.ack===true){this.getScriptStatuses(true)}else if(e==="admin.0.info.updatesJson"&&t){try{this.cache["AdapterUpdates"]=JSON.parse(t.val)}catch(e){delete this.cache["AdapterUpdates"]}}})}sendSubscribedClients(e,t){for(const s in this.sockets){if(this.sockets[s]._subscribeOthers&&this.sockets[s]._subscribeOthers[e]){this.sockets[s]._subscribeOthers[e].forEach(({messageId:e})=>{this.sockets[s].emit(e,"subscribeOthers",t)})}}}getCalendarEvents(n,e,i,r,t){const s=(new Date).getTimezoneOffset();const o=new Date(Date.UTC(i,r-1,1));const c=_datefns.subMinutes(_datefns.endOfDay(_datefns.lastDayOfMonth(o)),s);const{locale:d}=t;return _ical.async.parseICS(e).then(e=>{let t=[];for(const s in e){const a=e[s];if(a&&a.summary&&a.type==="VEVENT"&&a.start&&a.start instanceof Date){a.isAllDay=a.start.toString().indexOf("00:00:00")!==-1&&(!a.end||a.end.toString().indexOf("00:00:00")>-1);a.time=a.isAllDay?"all day":_datefns.format(a.start,"HH:mm",{locale:d})+(a.end?"-"+_datefns.format(a.end,"HH:mm",{locale:d}):"");a.end=a.isAllDay?_datefns.subSeconds(a.end,1):a.end;a.duration=a.end?_datefns.differenceInDays(a.end,a.start):1;a.caption=_datefns.format(a.start,"EEE, dd.MM.",{locale:d})+", "+_datefns.formatDistanceToNow(a.isAllDay?_datefns.addHours(a.start,12):a.start,{locale:d,addSuffix:true});if(a.rrule){let e=a.rrule.between(o,c);if(a.exdate){e=e.filter(e=>{const t=_datefns.format(e,"yyyy-MM-dd",{locale:d});return a.exdate[t]===undefined})}e=e.map(e=>{const t=_rfdc(a);t.recurring=true;delete t.rrule;delete t.exdate;const s=a.end-a.start;t.start=e;t.end=_datefns.addMilliseconds(e,s);t.caption=_datefns.format(t.start,"EEE, dd.MM.",{locale:d})+", "+_datefns.formatDistanceToNow(t.isAllDay?_datefns.addHours(t.start,12):t.start,{locale:d,addSuffix:true});return t});t=t.concat(e)}else{if(a.start>=o&&a.start<=c){t.push(a)}else if(a.start<o&&a.end>=o){t.push(a)}}}}t=t.sort((e,t)=>e.start===t.start?0:e.start>t.start?1:-1);const s="Calendar:"+n.id+":"+i+"-"+r;this.cache[s]={calendar:n,ts:Date.now(),hash:objectHash(t),events:t};return t}).catch(e=>{console.error(e);return[]})}getCalendar({calendar:a,year:n,month:i,options:r={}}){r.language=r.language||"en-US";r.refresh=r.refresh||5;r.locale=getDateLocale(r.language);this.cache["Calendar:"+a.id]=this.cache["Calendar:"+a.id]||{calendar:a,ts:null,hash:null,data:{}};const e="Calendar:"+a.id+":"+n+"-"+i;this.cache[e]=this.cache[e]||{calendar:a,ts:null,hash:null,events:[]};const t=Date.now()-r.refresh*60*1e3;if(this.cache[e].ts&&this.cache[e].ts>t){this._adapter.log.debug("Got events for "+a.name+" ("+a.id+") "+n+"-"+i+" from Cache.");return Promise.resolve({events:this.cache[e].events})}else if(this.cache["Calendar:"+a.id].ts&&this.cache["Calendar:"+a.id].ts>t){this._adapter.log.debug("Got ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from Cache.");return this.getCalendarEvents(a,this.cache["Calendar:"+a.id].data,n,i,r).then(e=>({events:e}))}else if(a.url&&(a.url.indexOf("http")>-1||a.url.indexOf("www.")>-1)){this._adapter.log.debug("Get ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from URL...");let e={};if(a.user&&a.pass){const{decrypted:s}=decrypt(a.pass,this._options.encryptionKey);e={username:a.user,password:s}}let t={url:a.url,...e};if(a.url.indexOf("https")>-1){t={...t,https:{rejectUnauthorized:a.sslignore!==undefined?a.sslignore===false:true}}}return _got(t).then(e=>{const t=e.body||"";this._adapter.log.debug("Got ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from URL.");this.cache["Calendar:"+a.id]={calendar:a,ts:Date.now(),data:t};return this.getCalendarEvents(a,this.cache["Calendar:"+a.id].data,n,i,r)}).then(e=>{return{events:e}}).catch(e=>{this._adapter.log.debug("Failed getting ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from URL.");this._adapter.log.warn(e.message||e);return{error:e}})}else if(a.url&&a.url.indexOf("http")===-1){this._adapter.log.debug("Calendar","Get ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from local path...");return new Promise(s=>{_fs.readFile(a.url,"utf-8",(e,t)=>{if(e){this._adapter.log.debug("Failed getting ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from local path.");this._adapter.log.warn(e.message||e);return s({error:e})}this._adapter.log.debug("Got ical data for "+a.name+" ("+a.id+") "+n+"-"+i+" from local path.");this.cache["Calendar:"+a.id]={calendar:a,ts:Date.now(),data:t};this.getCalendarEvents(a,this.cache["Calendar:"+a.id].data,n,i,r).then(e=>({events:e}))})})}}getScriptStatuses(r=false){this.cache["ScriptStatuses"]=this.cache["ScriptStatuses"]||{hash:null,data:{}};return new Promise(i=>{this._adapter.getObjectView("system","script",null,(e,t)=>{const n={};t.rows=t.rows||[];t.rows.forEach(e=>{const t=e.id.replace("script.js.","");const s=t.substr(0,t.lastIndexOf("."));const a=t.substr(0,t.indexOf("."));e=e.value;e.disabled=!e.enabled;delete e.common.source;n[s]=n[s]||{id:s,children:[]};n[s].children.push({...e.common,created:e.ts,id:t});n[s].children.sort((e,t)=>e.id.toLowerCase()===t.id.toLowerCase()?0:e.id.toLowerCase()>t.id.toLowerCase()?1:-1)});let a={};Object.keys(n).sort().reverse().forEach(e=>{const t=e.indexOf(".")===-1;if(t){a={[e]:n[e],...a}}else{const s=e.substr(0,e.lastIndexOf("."));n[s]=n[s]||{id:s,children:[]};n[s].children=[].concat(n[e],n[s].children)}});const s=objectHash(a);if(r===true||this.cache["ScriptStatuses"].hash!==s){this._adapter.log.debug("Push update of scripts..");this.cache["ScriptStatuses"]={hash:s,data:a};return i(a)}})})}getAdapterInstances(){this.cache["AdapterInstances"]=this.cache["AdapterInstances"]||{hash:null,data:{}};return new Promise(n=>{this._adapter.getObjectView("system","instance",{startkey:"system.adapter.",endkey:"system.adapter.é¦™"},(e,t)=>{const r={};if(!e&&t&&t.rows){t.rows.forEach(async e=>{const t=e.id.replace("system.adapter.","");r[t]={...e.value.common,_id:e.id,id:t};const s=await this._adapter.getForeignStateAsync(e._id+".alive");const a=await this._adapter.getForeignStateAsync(e._id+".connected");const n=await this._adapter.getForeignStateAsync(t+".info.connection");r[t].alive=s?s.val:null;r[t].connectedToHost=a?a.val:null;r[t].connectedToInstance=n?n.val:null;const i=this.cache["AdapterUpdates"]&&this.cache["AdapterUpdates"][r[t].name]&&this.cache["AdapterUpdates"][r[t].name].availableVersion||r[t].version;r[t].update=i&&r[t].version&&_semver.gt(i,r[t].version)===true?i:null;delete r[t].docs;delete r[t].news});const s=Object.keys(r).sort().reduce((e,t)=>{e[t]=r[t];return e},{});const a=objectHash(s);if(this.cache["AdapterInstances"].hash!==a){this._adapter.log.debug("Push update of instances..");this.cache["AdapterInstances"]={hash:a,data:s};return n(s)}}})})}updateAdapterInstances(){this.intervalInstancesRefresh=setInterval(()=>{this.getAdapterInstances().then(e=>{this.sendSubscribedClients("AdapterInstances",e)});this.getScriptStatuses().then(e=>{this.sendSubscribedClients("ScriptStatuses",e)})},30*1e3)}eventFromClient(t){const s=t.clientId;if(t.event==="disconnect"){if(s&&this.clients[s]){this._adapter.log.info("Client with IP "+(this.clients[s]?this.clients[s].ip:"(unknown)")+" disconnected.");delete this.clients[s];delete this.sockets[s]}this.emit("CLIENT_LIST",this.clients)}else if(t.event==="clients"){const{event:e,...a}=t;this.clients[t.id]={...a,ts:Date.now()};this.emit("CLIENT_LIST",this.clients)}else if(t.event==="getAdapterInstances"||t.event==="getScriptStatuses"||t.event==="getCalendar"){const n=t.event.replace("get","");if(this.sockets[s]&&this.sockets[s]._subscribeOthers&&this.sockets[s]._subscribeOthers[n]&&this.cache[n]){this.sockets[s]._subscribeOthers[n].forEach(({messageId:e})=>{this.sockets[s].emit(e,t.event,this.cache[n].data)})}else if(this.sockets[s]&&this[t.event]){this[t.event](t.options).then(e=>{this.sockets[s]&&this.sockets[s].emit(t.messageId,t.event,e)}).catch(e=>{this._adapter.log.warn(e.message)})}}}connect(){const e=_ip.address();const t=_os.hostname();this._adapter.log.debug("Connection: ioBroker host detected with "+t+" (IP: "+e+").");const i={};const s=(e,a)=>{let n=decodeURI(e.url);n=n==="/"?"/index.html":n;n=n.replace("/jarvis","").substr(1);if(i[n]!==undefined){a.writeHead(200,{"Content-Type":i[n].mimeType});a.end(i[n].buffer)}else{this._adapter.readFile("jarvis",n,(e,t,s)=>{if(e||!s){this._adapter.log.warn(n+": "+(e.message||"No Mime Type"));a.writeHead(404);a.end(e&&e.message||e||"No Mime Type")}else{i[n]={buffer:t,mimeType:s};a.writeHead(200,{"Content-Type":i[n].mimeType});a.end(i[n].buffer)}})}};if(this._options.certificates!==null){const n={...this._options.certificates,allowHTTP1:true};this.server=require("http2").createSecureServer(n,s);this._adapter.log.debug("Connection: Using secure HTTPS-Server")}else{this.server=require("http").createServer(s);this._adapter.log.debug("Connection: Using non-secure HTTP-Server")}let a=this._adapter.config.hostWhitelist?this._adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];a=a.concat(["localhost","127.0.0.1",e,t]);this._adapter.log.debug("Connection: Using options: "+JSON.stringify(this._options.connection||{}));this.wss=new Server({path:"/jarvis-socket/",allowEIO3:true,pingInterval:12e4,pingTimeout:3e4,...this._options.connection||{},cors:{origin:(t,e)=>{t=t||"(direct access to the port)";this._adapter.log.debug("Connection: Origin detected with "+t+"...");const s=!this._options.hostAllow||this._options.hostAllow==="all"||this._options.hostAllow==="list"&&t&&a.some(e=>t.indexOf(e)>-1);if(s){this._adapter.log.debug("Connection: Origin detected with "+t+" (allowed due to "+(this._options.hostAllow||"all")+")");return e(null,t)}this._adapter.log.debug("Connection: Origin detected with "+t+" (rejected, not in "+a.join(", ")+")");return e("Access from domain not allowed")}}});this.wss.attach(this.server);this.wss.on("error",e=>{this._adapter.log.error(e.message||e);this._adapter.log.debug(e)});this.wss.on("connection",e=>{this._adapter.log.debug("Client connecting...");const t=e.request.headers["user-agent"];const s=_platform.parse(t);const a=s.name;const n=e.conn.remoteAddress.indexOf(":")!==-1?e.conn.remoteAddress.substr(e.conn.remoteAddress.lastIndexOf(":")+1):e.conn.remoteAddress;const i=(n?n.replace(/\./g,"-"):"no-ip-detected")+"_"+(a?a.replace(/ /g,"-"):"no-browser-detected");const r=_uuid(i,"d03b9915-564d-491e-a0e0-7ef4af0a52d1");this.clients[r]={userAgent:t,userPlatform:s,userBrowser:a,ip:n,ns:i,id:r,ts:Date.now()};this.sockets[r]=new ioWebSocketClient(this._adapter,this._options,this.clients[r],e,e=>this.eventFromClient(e));this.emit("CLIENT_NEW",this.clients[r]);this.emit("CLIENT_LIST",this.clients);this._adapter.log.info("Client with IP "+(this.clients[r]?this.clients[r].ip:"(unknown)")+" connected.")});this.server.listen(this._options.port,"0.0.0.0",()=>{this._adapter.log.info("Connection: WebSocket opened on port "+this.server.address().port+(this._options.certificates!==null?" using https":" using http")+"...")})}}module.exports=ioWebSocket;