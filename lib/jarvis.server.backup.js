const _fs=require("fs");const _path=require("path");module.exports={getBackupFile(t){return _path.join(__dirname,"..","..","..","iobroker-data","jarvis",this.adapter.instance.toString(),t+".json")},loadBackups(){this.backupStates.forEach(t=>{const a="jarvis."+this.adapter.instance+"."+t;const r=this.getBackupFile(a);_fs.readFile(r,(t,e)=>{const s=_path.dirname(r);if(!_fs.existsSync(s)){_fs.mkdirSync(s,{recursive:true})}if(t){this.adapter.log.info("No Backup found for "+a+", thus backing up initially.");this.adapter.getState(a,(t,e)=>!t&&e&&e.val&&this.backup(a,e.val))}else if(e){this.adapter.log.info("Found Backups for "+a+".");try{this.backups[a]=JSON.parse(e)}catch(t){this.adapter.log.error("Error loading recent backups ("+a+"): "+t.message)}}})});return this},isBackupState(e){return this.backupStates.some(t=>e.endsWith("."+t))},getBackupList(t){this.adapter.log.debug("Get List of Backups for "+t+".");return this.backups[t]},restore(t,e){if(this.backups[t]&&this.backups[t][e]){this.adapter.log.info("Restore "+t+" from "+e+"...");this.adapter.setState(t,this.backups[t][e],true)}else{this.adapter.log.warn("Restore "+t+": Date "+e+" not found!")}},backup(s,t){if(!t||t&&t.toString()==="{}"){return false}const e=new Date;const a=e.getFullYear()+"-"+("0"+(e.getMonth()+1)).substr(-2)+"-"+("0"+e.getDate()).substr(-2)+"_"+("0"+e.getHours()).substr(-2)+"-"+("0"+e.getMinutes()).substr(-2)+"-"+("0"+e.getSeconds()).substr(-2);this.backups[s]=this.backups[s]||{};this.backups[s][a]=t;this.adapter.config.keepBackupEntries=(this.adapter.config.keepBackupEntries||25)-1;const r=Object.keys(this.backups[s]);if(r.length>this.adapter.config.keepBackupEntries){r.reverse().forEach((t,e)=>{if(e>this.adapter.config.keepBackupEntries){delete this.backups[s][t]}})}const i=this.getBackupFile(s);this.adapter.log.info("Backup "+s+' to "'+i+'"...');return _fs.writeFile(i,JSON.stringify(this.backups[s],null,3),t=>t&&this.adapter.log.error("Error saving backups to storage: "+t.message))}};