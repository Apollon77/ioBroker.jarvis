const{getDayOfYear:_getDayOfYear}=require("date-fns");const _schedule=require("node-schedule");const _uuid=require("uuid").v4;const EventEmitter=require("events");const{BindToClass,hash}=require("./helpers");const JarvisServerAdapters=require("./jarvis.server.adapters");const JarvisServerBackup=require("./jarvis.server.backup");const JarvisServerCalendars=require("./jarvis.server.calendars");const JarvisServerClient=require("./jarvis.server.client");const JarvisServerCloud=require("./jarvis.server.cloud");const JarvisServerGetter=require("./jarvis.server.getter");const JarvisServerHistory=require("./jarvis.server.history");const JarvisServerInstance=require("./jarvis.server.instance");const JarvisServerPro=require("./jarvis.server.pro");const JarvisServerSetter=require("./jarvis.server.setter");const JarvisServerStates=require("./jarvis.server.states");class JarvisServer extends EventEmitter{constructor(e,s={}){super();this.adapter=e;this.options=s;this.clients={};this.clientsMessages={};this.schedulers={};this.notifications=[];this.subscribedStates={};this.subscribedHistory={};this.subscribedCalendar={};this.subscribedLog={};this.cache={AdapterInstances:{ts:0,data:{}},AdapterUpdates:{ts:0,data:{}},CloudDevices:{ts:0,data:[]},HistoryDevices:{ts:0,data:{}},ScriptStatuses:{ts:0,data:{}}};this.backupFolder="";this.backupStates=["devices","layout","widgets","settings","css","scripts"];this.backups={};if(this.options.user&&this.options.user.indexOf("system.user.")===-1){this.options.user="system.user."+this.options.user}this.options.port=s.port||8400;this.options.certificates=s.certificates||null;BindToClass(JarvisServerAdapters,this);BindToClass(JarvisServerBackup,this);BindToClass(JarvisServerCalendars,this);BindToClass(JarvisServerClient,this);BindToClass(JarvisServerCloud,this);BindToClass(JarvisServerGetter,this);BindToClass(JarvisServerHistory,this);BindToClass(JarvisServerInstance,this);BindToClass(JarvisServerPro,this);BindToClass(JarvisServerSetter,this);BindToClass(JarvisServerStates,this)}init(){this.getAdapterUpdates().then(()=>this.getAdapterInstances()).then(()=>this.getHistoryInstances()).catch(e=>e&&this.adapter.log.warn(e.message));this.getScriptStatuses().catch(e=>this.adapter.log.warn(e.message));this.getCloudDevices().catch(e=>this.adapter.log.warn(e.message));this.schedulers.removeOutdatedClients=_schedule.scheduleJob("0 3 * * *",()=>this.removeOutdatedClients());this.removeOutdatedClients();this.pro();this.loadNotifications();return this}close(){Object.values(this.schedulers).forEach(e=>{e&&e.cancel&&e.cancel()});return this}listen(){const e={};this.on("message",(e,s)=>{const{command:t,messageId:i,params:r}=this.handleClientMessage(s);this.handleClientCommand(e,t,i,r)});let s=[];this.adapter.requireLog(true);this.adapter.on("log",e=>{s.unshift(e)});setInterval(()=>{s.length>0&&this.broadcast("Log",{logs:s},this.subscribedLog);s=[]},1e3);this.adapter.subscribeForeignStates("*");this.adapter.on("stateChange",(s,t)=>{this.handleNotification(s,t);if((s.startsWith("system.adapter.")&&s.endsWith(".alive")||s.endsWith(".info.connection"))&&(t&&t.ts===t.lc)){e.refreshAdapterInstances&&clearTimeout(e.refreshAdapterInstances);e.refreshAdapterInstances=setTimeout(()=>{this.getAdapterUpdates().then(()=>this.getAdapterInstances())},1e3)}if(s&&this.subscribedStates[s]){t=t?{err:null,stateId:s,state:{...t,stateId:s,id:s}}:{err:new Error("State with ID "+s+" is not a valid state ["+JSON.stringify(t)+"] (in stateChange)")};if(["devices","layout","widgets","scripts","css"].some(e=>s==="jarvis."+this.adapter.instance+"."+e)){const i=s.split(".");let e=i.pop();try{const r=JSON.parse(t.state.val);const a=hash(r[e==="css"?"styles":e]);if(r.signature!==a){this.adapter.log.debug("Recalculate signature for "+e+"...");r.signature=a;this.adapter.setState(s,JSON.stringify(r,null,3),true);if(["devices","layout","widgets"].includes(e)){this.detectDuplicateIds(e,r[e])}return false}}catch(e){this.adapter.log.warn('Warning parsing state "'+s+'": '+e.message+" (see debug-log for details)");this.adapter.log.debug("State: "+JSON.stringify(t))}}if(this.isBackupState(s)){this.backup(s,t.val)}this.broadcast("stateChange",t,this.subscribedStates[s])}if(s&&s.startsWith("javascript.0.scriptEnabled.")&&t&&t.ack===true){e.refreshScripts&&clearTimeout(e.refreshScripts);e.refreshScripts=setTimeout(()=>this.getScriptStatuses(),1e3)}else if(s==="admin.0.info.updatesJson"&&t){try{this.cache.AdapterUpdates={ts:Date.now(),data:JSON.parse(t.val)};this.broadcast("AdapterUpdates",this.cache.AdapterUpdates.data)}catch(e){delete this.cache.AdapterUpdates}}if(s&&s.endsWith(".setTabId")&&t&&t.val&&t.ack!==true){this.adapter.getState(s.replace(".setTabId","")+".id",(e,s)=>{this.send(s.val,"#setTabId",t.val)})}});this.adapter.subscribeForeignObjects("*");this.adapter.on("objectChange",(s,t)=>{if(t&&t.common&&t&&t.common.smartName&&!this.cache.CloudDevices.data.includes(s)){this.cache.CloudDevices.ts=Date.now();this.cache.CloudDevices.data.push(s);this.broadcast("CloudDevices",this.cache.CloudDevices.data)}else if(t&&t.common&&!t.common.smartName&&this.cache.CloudDevices&&this.cache.CloudDevices.data.includes(s)){this.cache.CloudDevices.ts=Date.now();this.cache.CloudDevices.data=this.cache.CloudDevices.data.filter(e=>e!==s);this.broadcast("CloudDevices",this.cache.CloudDevices.data)}const e=t&&t.common&&t.common.custom?Object.keys(t.common.custom):[];if(e.some(e=>this.isHistoryAdapter(e))){this.cache.HistoryDevices.data[s]={};this.cache.HistoryDevices.ts=Date.now();e.forEach(e=>{if(this.isHistoryAdapter(e)){this.cache.HistoryDevices.data[s][e]=t.common.custom[e]}});this.broadcast("HistoryDevices",this.cache.HistoryDevices.data)}else if(e.every(e=>!this.isHistoryAdapter(e))&&this.cache.HistoryDevices&&this.cache.HistoryDevices.data[s]!==undefined){this.cache.HistoryDevices.ts=Date.now();this.cache.HistoryDevices.data[s]={};this.broadcast("HistoryDevices",this.cache.HistoryDevices.data)}});this.schedulers.updater=_schedule.scheduleJob("*/1 * * * *",s=>{this.broadcast("#time",Date.now());for(const t in this.subscribedCalendar){const{calendar:e,options:i}=this.subscribedCalendar[t];const r=i.refresh||5;if(!this.subscribedCalendar[t].clients||this.subscribedCalendar[t].clients.length===0){this.adapter.log.debug('Calendar Subscription with key "'+t+'" deleted, because no more clients subscribed.');delete this.subscribedCalendar[t];continue}if(s.getMinutes()%5===0){this.adapter.log.debug('Refresh Calendar with key "'+t+'"...');const a=e=>this.broadcast("Calendar",e,this.subscribedCalendar[t].clients);this.getCalendar({cb:a},t,e,i)}}for(const t in this.subscribedHistory){const{stateId:c,options:i}=this.subscribedHistory[t];if(!this.subscribedHistory[t].clients||this.subscribedHistory[t].clients.length===0){this.adapter.log.debug('History Subscription of state "'+c+'" deleted, because no more clients subscribed (using options '+JSON.stringify(i)+").");delete this.subscribedHistory[t];continue}let e=false;if(i.timeRefresh){const o=Math.floor(i.timeRefresh/(24*60));const n=Math.floor(i.timeRefresh%(24*60)/60);const d=i.timeRefresh%60;e=(o===0||o&&_getDayOfYear(s)%o===0)&&(n===0||n&&s.getHours()%n===0)&&(d===0||d&&s.getMinutes()%d===0)}else if(i.timeType==="review"&&(i.timeReviewUnit==="seconds"||i.timeReviewUnit==="minutes")){e=true}else if(i.timeType==="review"&&i.timeReviewUnit==="hours"){e=s.getMinutes()%15===0}else if(i.timeType==="review"&&i.timeReviewUnit==="days"){e=s.getHours()%6===0&&s.getMinutes()===0}else if(i.timeType==="review"&&i.timeReviewUnit==="weeks"){e=s.getHours()===0&&s.getMinutes()===0}else if(i.timeType==="review"&&i.timeReviewUnit==="months"){e=s.getDay()===0&&s.getHours()===0&&s.getMinutes()===0}if(e){this.adapter.log.debug('Refresh History of state "'+c+'"...');const a=e=>this.broadcast("History",e,this.subscribedHistory[t].clients);this.getHistory({cb:a},t,c,i)}}});return this}}module.exports=JarvisServer;