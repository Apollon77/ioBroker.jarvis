const _got=require("got");const _ip=require("ip");const _os=require("os");const JarvisProxy=require("./jarvis.proxy");const{WebSocketServer}=require("ws");module.exports={ping({clientId:e}){if(this.clients[e]){this.updateClient(this.clients[e]);this.clients[e].alive&&clearTimeout(this.clients[e].alive);this.clients[e].alive=setTimeout(()=>this.clients[e]&&this.updateClient(this.clients[e],{connected:false}),3*60*1e3)}},proxy(){const i=new JarvisProxy(this.adapter);i.init();i.on("connection",(e,t)=>{const s=this.connectClient(e,t);i.mapClient(t.remoteId,s.id);this.listenClient(s)});i.on("message",(e,t)=>{this.clients[e]&&this.clients[e].message(t)});i.on("close",e=>{this.clients[e]&&this.clients[e].disconnect()})},server(){let e=null;const i=_ip.address();const t=_os.hostname();this.adapter.log.debug("Connection: ioBroker host detected with "+t+" (IP: "+i+").");const r={};const c={};const s=(s,o)=>{const n=s.headers.cookie;const e={headers:{Cookie:n},https:{rejectUnauthorized:false}};const t=this.options.auth!==true||r[n]?Promise.resolve({body:r[n]||""}):_got((this.options.secure===true?"https":"http")+"://"+i+":"+this.options.webPort+"/prolongSession",e);t.then(({body:e})=>{const t=RegExp("\\d{4}-(?:0[1-9]|1[0-2])-(?:[0-2][1-9]|[1-3]0|3[01])T(?:[0-1][0-9]|2[0-3])(?::[0-6]\\d)(?::[0-6]\\d)?(?:.\\d{3})?(?:[+-][0-2]\\d:[0-5]\\d|Z)?");if(this.options.auth===true&&!t.test(e)){throw new Error("Incorrect Authentication")}r[n]=e;let i=decodeURI(s.url);i=i==="/"?"/index.html":i;i=i.replace("/jarvis","").substr(1);if(c[i]!==undefined){o.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":c[i].mimeType});o.end(c[i].buffer)}else{this.adapter.readFile("jarvis",i,(e,t,s)=>{if(e||!s){this.adapter.log.warn(i+": "+(e.message||"No Mime Type"));o.writeHead(404);o.end(e&&e.message||e||"No Mime Type")}else{c[i]={buffer:t,mimeType:s};o.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":c[i].mimeType});o.end(c[i].buffer)}})}}).catch(e=>{o.writeHead(302,{Location:(this.options.secure===true?"https":"http")+"://"+i+":"+this.options.webPort+"/login"});o.end()})};if(this.options.certificates!==null){const n={...this.options.certificates,allowHTTP1:true};e=require("http2").createSecureServer(n,s);this.adapter.log.debug("Connection: Using secure HTTPS-Server")}else{e=require("http").createServer(s);this.adapter.log.debug("Connection: Using non-secure HTTP-Server")}let o=this.adapter.config.hostWhitelist?this.adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];o=o.concat(["localhost","127.0.0.1",i,t]);this.adapter.log.debug("Connection: Using options: "+JSON.stringify(this.options.connection||{}));this.wss=null;try{this.wss=new WebSocketServer({server:e})}catch(e){this.adapter.log.error(e.message)}this.wss.on("error",e=>{this.adapter.log.error("WebSocket Error: "+e.message);this.adapter.log.debug(e)});this.wss.on("connection",(e,t)=>{const s=this.connectClient(e,{userAgent:t.headers["user-agent"],remoteAddress:t.connection.remoteAddress});this.listenClient(s)});e.listen(this.options.port,"0.0.0.0",()=>{this.adapter.log.info("Connection: WebSocket opened on port "+e.address().port+(this.options.certificates!==null?" using https":" using http")+"...")});return this}};