const _ip=require("ip");const _os=require("os");const _platform=require("platform");const _uuid=require("uuid").v5;const{WebSocketServer}=require("ws");const JarvisClient=require("./jarvis.client.js");module.exports={server(){let e=null;const o=_ip.address();const t=_os.hostname();this.adapter.log.debug("Connection: ioBroker host detected with "+t+" (IP: "+o+").");const r={};const c={};const s=(s,i)=>{const n=s.headers.cookie;const e={headers:{Cookie:n},https:{rejectUnauthorized:false}};const t=this.options.auth!==true||r[n]?Promise.resolve({body:r[n]||""}):_got((this.options.secure===true?"https":"http")+"://"+o+":"+this.options.webPort+"/prolongSession",e);t.then(({body:e})=>{const t=RegExp("\\d{4}-(?:0[1-9]|1[0-2])-(?:[0-2][1-9]|[1-3]0|3[01])T(?:[0-1][0-9]|2[0-3])(?::[0-6]\\d)(?::[0-6]\\d)?(?:.\\d{3})?(?:[+-][0-2]\\d:[0-5]\\d|Z)?");if(this.options.auth===true&&!t.test(e)){throw new Error("Incorrect Authentication")}r[n]=e;let o=decodeURI(s.url);o=o==="/"?"/index.html":o;o=o.replace("/jarvis","").substr(1);if(c[o]!==undefined){i.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":c[o].mimeType});i.end(c[o].buffer)}else{this.adapter.readFile("jarvis",o,(e,t,s)=>{if(e||!s){this.adapter.log.warn(o+": "+(e.message||"No Mime Type"));i.writeHead(404);i.end(e&&e.message||e||"No Mime Type")}else{c[o]={buffer:t,mimeType:s};i.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":c[o].mimeType});i.end(c[o].buffer)}})}}).catch(e=>{i.writeHead(302,{Location:(this.options.secure===true?"https":"http")+"://"+o+":"+this.options.webPort+"/login"});i.end()})};if(this.options.certificates!==null){const n={...this.options.certificates,allowHTTP1:true};e=require("http2").createSecureServer(n,s);this.adapter.log.debug("Connection: Using secure HTTPS-Server")}else{e=require("http").createServer(s);this.adapter.log.debug("Connection: Using non-secure HTTP-Server")}let i=this.adapter.config.hostWhitelist?this.adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];i=i.concat(["localhost","127.0.0.1",o,t]);this.adapter.log.debug("Connection: Using options: "+JSON.stringify(this.options.connection||{}));this.wss=null;try{this.wss=new WebSocketServer({server:e})}catch(e){this.adapter.log.error(e.message)}this.wss.on("error",e=>{this.adapter.log.error("WebSocket Error: "+e.message);this.adapter.log.debug(e)});this.wss.on("connection",(e,t)=>{this.adapter.log.debug("Client connecting...");const s=t.headers["user-agent"];const o=_platform.parse(s);const i=o.name||"";const n=t.connection.remoteAddress.indexOf(":")!==-1?t.connection.remoteAddress.substr(t.connection.remoteAddress.lastIndexOf(":")+1):t.connection.remoteAddress;const r=(n?n.replace(/\./g,"-"):"no-ip-detected")+"_"+(i?i.replace(/ /g,"-"):"no-browser-detected");const c=_uuid(r,"d03b9915-564d-491e-a0e0-7ef4af0a52d1");this.clients[c]=new JarvisClient(this.adapter,e,{userAgent:s,userPlatform:o||{},userBrowser:i,ip:n,ns:r,id:c});this.clients[c].init().listen();this.clients[c].on("command",(...e)=>this.handleCommand(...e));this.clients[c].on("disconnected",e=>{delete this.clients[c];this.emit("CLIENT_LIST",Object.values(this.clients).map(e=>e.info))});this.emit("CLIENT_NEW",this.clients[c].info);this.emit("CLIENT_LIST",Object.values(this.clients).map(e=>e.info));this.adapter.log.info("Client with IP "+n+" ("+c+") connected.")});e.listen(this.options.port,"0.0.0.0",()=>{this.adapter.log.info("Connection: WebSocket opened on port "+e.address().port+(this.options.certificates!==null?" using https":" using http")+"...")});return this}};