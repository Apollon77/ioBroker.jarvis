const _got=require("got");const _ip=require("ip");const _os=require("os");const _url=require("node:url");const _uuid=require("uuid").v4;const JarvisProxy=require("./jarvis.proxy");const{WebSocketServer}=require("ws");module.exports={proxy(){const o=new JarvisProxy(this.adapter);o.init();o.on("connection",(e,t)=>{const s=this.connectClient(e,t);o.mapClient(t.remoteId,s.id);this.listenClient(s)});o.on("message",(e,t)=>{this.clients[e]&&this.clients[e]._class.message(t)});o.on("close",e=>{this.clients[e]&&this.clients[e]._class.disconnect()})},server(){let e=null;const o=_ip.address();const t=_os.hostname();this.adapter.log.debug("Connection: ioBroker host detected with "+t+" (IP: "+o+").");const n={};const c={};const s=(s,i)=>{const r=s.headers.cookie;const e={headers:{Cookie:r},https:{rejectUnauthorized:false}};const t=this.options.auth!==true||n[r]?Promise.resolve({body:n[r]||""}):_got((this.options.secure===true?"https":"http")+"://"+o+":"+this.options.webPort+"/prolongSession",e);t.then(({body:e})=>{const t=RegExp("\\d{4}-(?:0[1-9]|1[0-2])-(?:[0-2][1-9]|[1-3]0|3[01])T(?:[0-1][0-9]|2[0-3])(?::[0-6]\\d)(?::[0-6]\\d)?(?:.\\d{3})?(?:[+-][0-2]\\d:[0-5]\\d|Z)?");if(this.options.auth===true&&!t.test(e)){throw new Error("Incorrect Authentication")}n[r]=e;let o=decodeURI(s.url);o=o==="/"?"/index.html":o;o=o.replace("/jarvis","").substr(1);if(c[o]!==undefined){i.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":c[o].mimeType});i.end(c[o].buffer)}else{this.adapter.readFile("jarvis",o,(e,t,s)=>{if(e||!s){this.adapter.log.warn(o+": "+(e.message||"No Mime Type"));i.writeHead(404);i.end(e&&e.message||e||"No Mime Type")}else{c[o]={buffer:t,mimeType:s};i.writeHead(200,{"Cache-Control":"public, max-age=30758400000","Content-Type":c[o].mimeType});i.end(c[o].buffer)}})}}).catch(e=>{i.writeHead(302,{Location:(this.options.secure===true?"https":"http")+"://"+o+":"+this.options.webPort+"/login"});i.end()})};if(this.options.certificates!==null){const r={...this.options.certificates,allowHTTP1:true};e=require("http2").createSecureServer(r,s);this.adapter.log.debug("Connection: Using secure HTTPS-Server")}else{e=require("http").createServer(s);this.adapter.log.debug("Connection: Using non-secure HTTP-Server")}let i=this.adapter.config.hostWhitelist?this.adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];i=i.concat(["localhost","127.0.0.1",o,t]);this.adapter.log.debug("Connection: Using options: "+JSON.stringify(this.options.connection||{}));this.wss=null;try{this.wss=new WebSocketServer({server:e})}catch(e){this.adapter.log.error(e.message)}this.wss.on("error",e=>{this.adapter.log.error("WebSocket Error: "+e.message);this.adapter.log.debug(e)});this.wss.on("connection",(e,t)=>{e.id=_uuid();const o={userAgent:null};const s=_url.parse(t.url);s.query.split("&").forEach(e=>{const[t,s]=e.split("=");o[t]=s});const i=this.connectClient(e,{userAgent:o.userAgent||t.headers["user-agent"],remoteAddress:t.connection.remoteAddress});this.listenClient(i)});e.listen(this.options.port,"0.0.0.0",()=>{this.adapter.log.info("Connection: WebSocket opened on port "+e.address().port+(this.options.certificates!==null?" using https":" using http")+"...")});return this}};