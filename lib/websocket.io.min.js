const _crypto=require("crypto");const _fs=require("fs");const _path=require("path");const _got=require("got");const{Server}=require("socket.io");const EventEmitter=require("events");const _ip=require("ip");const _uuid=require("uuid").v5;const _hash=require("object-hash");const _semver=require("semver");const _os=require("os");const _platform=require("platform");class ioWebSocket extends EventEmitter{constructor(t=null,e={}){super();if(!t){throw new Error("No adapter instance passed to WebSocket constructor!")}this._adapter=t;this._options=e||{};if(this._options.user&&this._options.user.indexOf("system.user.")===-1){this._options.user="system.user."+this._options.user}this._options.port=e.port||8400;this._options.certificates=e.certificates||null;this.server=null;this.wss=null;this.clients={};this.sockets={};this.connect();this.cache={};this._adapter.requireLog(true);this._adapter.subscribeForeignStates("*");this.getAdapterInstances();this.updateAdapterInstances();this._adapter.getForeignState("admin.0.info.updatesJson",(t,e)=>{if(!t&&e){try{this.cache["AdapterUpdates"]=JSON.parse(e.val)}catch(t){delete this.cache["AdapterUpdates"]}this.getAdapterInstances()}});this._adapter.on("stateChange",(t,e)=>{if(t.startsWith("javascript.0.scriptEnabled.")&&e&&e.ack===true){this.getScriptStatuses()}else if(t==="admin.0.info.updatesJson"&&e){try{this.cache["AdapterUpdates"]=JSON.parse(e.val)}catch(t){delete this.cache["AdapterUpdates"]}}})}getScriptStatuses(){this.cache["ScriptStatuses"]=this.cache["ScriptStatuses"]||{hash:null,data:{}};this._adapter.getObjectView("system","script",null,(t,e)=>{const r={};e.rows=e.rows||[];e.rows.forEach(t=>{const e=t.id.replace("script.js.","");const s=e.substr(0,e.lastIndexOf("."));const i=e.substr(0,e.indexOf("."));t=t.value;t.disabled=!t.enabled;delete t.common.source;r[s]=r[s]||{id:s,children:[]};r[s].children.push({...t.common,created:t.ts,id:e});r[s].children.sort((t,e)=>t.id.toLowerCase()===e.id.toLowerCase()?0:t.id.toLowerCase()>e.id.toLowerCase()?1:-1)});let i={};Object.keys(r).sort().reverse().forEach(t=>{const e=t.indexOf(".")===-1;if(e){i={[t]:r[t],...i}}else{const s=t.substr(0,t.lastIndexOf("."));r[s]=r[s]||{id:s,children:[]};r[s].children=[].concat(r[t],r[s].children)}});const s=_hash(i);if(this.cache["ScriptStatuses"].hash!==s){this._adapter.log.debug("Push update of scripts..");this.cache["ScriptStatuses"]={hash:s,data:i};for(const a in this.sockets){if(this.sockets[a]._subscribeOthers&&this.sockets[a]._subscribeOthers["ScriptStatuses"]){this.sockets[a]._subscribeOthers["ScriptStatuses"].forEach(t=>{this.sockets[a].emit(t,i)})}}}})}getAdapterInstances(){this.cache["AdapterInstances"]=this.cache["AdapterInstances"]||{hash:null,data:{}};this._adapter.getObjectView("system","instance",{startkey:"system.adapter.",endkey:"system.adapter.é¦™"},(t,e)=>{const n={};if(!t&&e&&e.rows){e.rows.forEach(async t=>{const e=t.id.replace("system.adapter.","");n[e]={...t.value.common,_id:t.id,id:e};const s=await this._adapter.getForeignStateAsync(t._id+".alive");const i=await this._adapter.getForeignStateAsync(t._id+".connected");const r=await this._adapter.getForeignStateAsync(e+".info.connection");n[e].alive=s?s.val:null;n[e].connectedToHost=i?i.val:null;n[e].connectedToInstance=r?r.val:null;const a=this.cache["AdapterUpdates"]&&this.cache["AdapterUpdates"][n[e].name]&&this.cache["AdapterUpdates"][n[e].name].availableVersion||n[e].version;n[e].update=a&&n[e].version&&_semver.gt(a,n[e].version)===true?a:null;delete n[e].docs;delete n[e].news});const s=Object.keys(n).sort().reduce((t,e)=>{t[e]=n[e];return t},{});const i=_hash(s);if(this.cache["AdapterInstances"].hash!==i){this._adapter.log.debug("Push update of instances..");this.cache["AdapterInstances"]={hash:i,data:s};for(const r in this.sockets){if(this.sockets[r]._subscribeOthers&&this.sockets[r]._subscribeOthers["AdapterInstances"]){this.sockets[r]._subscribeOthers["AdapterInstances"].forEach(t=>{this.sockets[r].emit(t,s)})}}}}})}updateAdapterInstances(){this.intervalInstancesRefresh=setInterval(()=>{this.getAdapterInstances();this.getScriptStatuses()},30*1e3)}eventFromClient(t){const e=t.clientId;if(t.event==="disconnect"){delete this.clients[e];delete this.sockets[e];this.emit("CLIENT_LIST",this.clients)}else if(t.event==="clients"){const{event:s,...i}=t;this.clients[t.id]={...i,ts:Date.now()};this.emit("CLIENT_LIST",this.clients)}else if(t.event==="getAdapterInstances"||t.event==="getScriptStatuses"){const r=t.event.replace("get","");if(this.sockets[e]&&this.sockets[e]._subscribeOthers&&this.sockets[e]._subscribeOthers[r]&&this.cache[r]){this.sockets[e]._subscribeOthers[r].forEach(t=>{this.sockets[e].emit(t,this.cache[r].data)})}}}connect(){const t=_ip.address();const e=_os.hostname();this._adapter.log.debug("Connection: ioBroker host detected with "+e+" (IP: "+t+")");const s=(t,e)=>{e.writeHead(501);e.end("This is the jarvis socket.io port!")};if(this._options.certificates!==null){const r={...this._options.certificates,allowHTTP1:true};this.server=require("http2").createSecureServer(r,s);this._adapter.log.debug("Connection: Using secure HTTPS-Server")}else{this.server=require("http").createServer(s);this._adapter.log.debug("Connection: Using non-secure HTTP-Server")}let i=this._adapter.config.hostWhitelist?this._adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];i=i.concat(["localhost","127.0.0.1",t,e]);this._adapter.log.debug("Connection: Using options: "+JSON.stringify(this._options.connection||{}));this.wss=new Server({path:"/jarvis-socket/",allowEIO3:true,pingInterval:12e4,pingTimeout:3e4,...this._options.connection||{},cors:{origin:(e,t)=>{e=e||"(direct access to the port)";this._adapter.log.debug("Connection: Origin detected with "+e+"...");const s=!this._options.hostAllow||this._options.hostAllow==="all"||this._options.hostAllow==="list"&&e&&i.some(t=>e.indexOf(t)>-1);if(s){this._adapter.log.debug("Connection: Origin detected with "+e+" (allowed due to "+(this._options.hostAllow||"all")+")");return t(null,e)}this._adapter.log.debug("Connection: Origin detected with "+e+" (rejected, not in "+i.join(", ")+")");return t("Access from domain not allowed")}}});this.wss.attach(this.server);this.wss.on("error",t=>{this._adapter.log.error(t.message);this._adapter.log.debug(JSON.stringify(t))});this.wss.on("connection",t=>{this._adapter.log.info("Client connecting...");const e=t.request.headers["user-agent"];const s=_platform.parse(e);const i=s.name;const r=t.conn.remoteAddress.indexOf(":")!==-1?t.conn.remoteAddress.substr(t.conn.remoteAddress.lastIndexOf(":")+1):t.conn.remoteAddress;const a=r.replace(/\./g,"-")+"_"+i.replace(/ /g,"-");const n=_uuid(a,"d03b9915-564d-491e-a0e0-7ef4af0a52d1");this.clients[n]={userAgent:e,userPlatform:s,userBrowser:i,ip:r,ns:a,id:n,ts:Date.now()};this.sockets[n]=new ioWebSocketClient(this._adapter,this._options,this.clients[n],t,t=>this.eventFromClient(t));this.emit("CLIENT_NEW",this.clients[n]);this.emit("CLIENT_LIST",this.clients);this._adapter.log.info("Client with IP "+this.clients[n].ip+" connected")});this.server.listen(this._options.port,"0.0.0.0",()=>{this._adapter.log.info("Connection: WebSocket opened on port "+this.server.address().port+(this._options.certificates!==null?" using https":" using http")+"...")})}}class ioWebSocketClient{constructor(t,e,s,i,r){this._adapter=t;this._options=e;this._parentMessage=r;this._adapter.log.debug("Websocket-Handler for client initialized");this._client=s;this._socket=i;this._isAlive=Date.now();this._adapter.setObject("clients."+this._client.ns,{type:"device",common:{name:this._client.ip},native:{}},()=>this.updateStates());this.emit("_clientId",this._client.id);this.emit("_version",this._adapter.version);this._socket.on("ping",()=>this.heartbeat());const n={};this._socket.on("message",t=>{try{const{messageId:e,index:s,length:i,chunk:r}=t;n[e]=n[e]||{};n[e][s]=r;if(Object.keys(n[e]).length===i){const a=Object.values(n[e]).join("");this.handleMessage(a);delete n[e]}}catch(t){this._adapter.log.warn(t.message||t)}});this._socket.on("disconnect",t=>this.disconnect(t));this._subscribeOthers={};this._subscribeStates={};this._subscribeHistory={};this._adapter.on("stateChange",(t,e)=>this.handleStateChange(t,e));this._adapter.on("log",t=>this.handleLogChange(t));this.intervalClientTimeout=setInterval(()=>{if(this._isAlive&&this._isAlive<Date.now()-30*1e3){this.disconnect("Client timeout")}},60*1e3);this.intervalHistoryRefresh=setInterval(()=>{for(const e in this._subscribeHistory){const{messageId:s,stateId:i,options:t}=this._subscribeHistory[e];this.getHistory(s,e,i,t)}},2*60*1e3)}disconnect(t){this._isAlive=0;this._adapter.log.debug("Client with IP "+this._client.ip+" disconnected: "+t);this._adapter.setState("clients."+this._client.ns+".connected",false,true);clearInterval(this.intervalClientTimeout);clearInterval(this.intervalHistoryRefresh);this._parentMessage({clientId:this._client.id,event:"disconnect"})}updateStates(){const o={connected:{name:"Indicates client connection",role:"indicator.connected",type:"boolean",value:true},ip:{name:"Client IP",role:"info.ip",type:"string",value:this._client.ip},id:{name:"Client ID",role:"text",type:"string",value:this._client.id},userAgent:{name:"Client User Agent",role:"text",type:"string",value:this._client.userAgent},userPlatform:{name:"Client Platform Information",role:"text",type:"json",value:this._client.userPlatform},userBrowser:{name:"Client Browser",role:"text",type:"string",value:this._client.userBrowser},lastSeen:{name:"Client Last Seen",role:"value.time",type:"number",value:Date.now()}};Object.keys(o).forEach(t=>{const s="clients."+this._client.ns+"."+t;const{role:e,type:i,value:r,initial:a,subscribe:n}=o[t];this._adapter.setObjectNotExists(s,{type:"state",common:{role:e,type:i},native:{}},(t,e)=>{if(e&&a||r!==undefined){this._adapter.setState(s,typeof r==="object"?JSON.stringify(r,null,3):r,true)}})});const t="clients."+this._client.ns+".setTabId";this._adapter.setObjectNotExists(t,{type:"state",common:{role:"text",type:"string",write:true},native:{}},()=>{});this._parentMessage({...this._client,event:"clients"})}heartbeat(){this._socket.emit("pong");this._isAlive=Date.now();this.updateStates()}handleLogChange(t){this.emit("_log",t)}handleStateChange(e,s){if(this._subscribeStates&&this._subscribeStates[e]&&Array.isArray(this._subscribeStates[e])){this._subscribeStates[e].forEach(t=>this.emit(t,s&&s.ack!==undefined&&s.ts!==undefined&&s.from!==undefined?{state:s}:{err:new Error(e+" is not a valid state")}))}else if(e.endsWith(".setTabId")&&s&&s.val){this._adapter.setState(e,"",true);this.emit("_setTabId",s.val)}}handleMessage(i){try{const r=JSON.parse(i);let{messageId:t,command:e,params:s=[]}=r;s=Array.isArray(s)?s:[s];e&&this[e](t,...s)}catch(t){this._adapter.log.warn(t.message||t);this._adapter.log.debug(i)}}emit(s,t={},i="message"){this._adapter.log.silly("Send message with ID "+s);if(t.err){t.err={name:t.err.name,message:t.err.message,stack:t.err.stack}}else if(t.err===null){t.err="_isNull"}const e=JSON.stringify(t).match(/.{1,100000}/g);const r=e.length;e.forEach((t,e)=>{this._socket.emit(i,{messageId:s,index:e,length:r,chunk:t})})}log(t,e,s){const i=s.map(t=>{return typeof t==="object"?JSON.stringify(t):t});this._adapter.log[e||"info"](i.join(", "));this.emit(t)}getLogs(s,t="current"){const e=this._adapter.systemConfig.log.transport.file1;const i=_path.resolve(this._adapter.systemConfig.dataDir+"../"+e.filename+"."+t+""+e.fileext);_fs.readFile(i,"utf-8",(t,e)=>{if(t){this.emit(s,{err:t});return}const o=e.substr(0,4);e=e.split("\n"+o);e=e.map((e,t)=>{e=t?o+e:e;const s=e.indexOf(": ")+2;const i=e.substr(s).indexOf("host")===-1?e.substr(s,e.indexOf(" (")-s):e.substr(s,e.indexOf(" ",s)-s);const r=new Date(e.substr(0,23)).getTime();const a=["silly","debug","info","warn","error"].find(t=>e.indexOf(t)!==-1);const n=e.substr(s).replace(/(?:\r\n|\r|\n)/g," ");return{from:i,ts:r,severity:a,message:n}});e=e.reverse();this.emit(s,{err:null,logs:e})})}getConfig(t){this.emit(t,{config:this._adapter.config})}readFile(s,t){t=_path.resolve(t.replace("{dirname}",__dirname));_fs.readFile(t,"utf-8",(t,e)=>{this.emit(s,{err:t,data:e})})}sign(t,e,s,i="RSA-SHA512"){e=typeof e!=="string"?JSON.stringify(e):e;let r=null;let a=null;try{const n=crypto.createSign(i);n.update(e);a=n.sign(s,"base64")}catch(t){this._adapter.log.warn(t.message);r=t}this.emit(t,{err:r,data:e,privateKey:s,signature:a,algorithm:i,verification:verification})}verify(t,e,s,i,r="RSA-SHA512"){e=typeof e!=="string"?JSON.stringify(e):e;let a=null;let n=false;try{n=_crypto.verify(r,Buffer.from(e),i,Buffer.from(s,"base64"))}catch(t){this._adapter.log.warn(t.message);a=t}this.emit(t,{err:a,data:e,publicKey:i,signature:s,algorithm:r,verification:n})}encrypt(t,e,s,i="AES-256-CTR"){let r=null;let a=null;try{const n=_crypto.randomBytes(16).toString("hex").substr(0,16);const o=_crypto.createCipheriv(i,_crypto.createHash("sha256").update(s).digest("hex").substr(0,32),n);a=Buffer.from(n).toString("base64").substr(0,24)+":"+o.update(typeof e==="object"?JSON.stringify(e):e,"utf8","base64")+o.final("base64")}catch(t){this._adapter.log.warn(t.message);r=t}this.emit(t,{err:r,str:e,encrypted:a})}decrypt(t,e,s,i="AES-256-CTR"){let r=null;let a=null;try{const[n,o]=e.split(":");const c=_crypto.createDecipheriv(i,_crypto.createHash("sha256").update(s).digest("hex").substr(0,32),Buffer.from(n,"base64"));a=Buffer.concat([c.update(Buffer.from(o,"base64")),c.final()]).toString()}catch(t){this._adapter.log.warn(t.message);r=t}this.emit(t,{err:r,hash:e,decrypted:a})}request(e,s){try{if(s._encrypt&&s.body.data){s.body.data=encrypt(s.body.data,"KutTGsNQ8HCX$hrT9Ua5beRSs2BLVeQq");delete s._encrypt}if(s.json===true&&s.body){s.json=s.body;delete s.body}_got(s).then(t=>{this.emit(e,{_options:s,data:t.body||""})}).catch(t=>{this.emit(e,{err:t});this._adapter.log.warn(t.message)})}catch(t){this.emit(e,{err:t});this._adapter.log.warn(t.message)}}setAdapter(s,i,r,t){i="system.adapter."+i;this._adapter.getForeignObject(i,(t,e)=>{if(t||!e){this.emit(s,{err:t});return}e.common.enabled=r;this._adapter.setForeignObject(i,e,t=>{this._parentMessage("getAdapterInstances");this.emit(s,{err:t})})})}setScript(t,e,s,i){this.setState(t,"javascript.0.scriptEnabled."+e,s,i)}setState(e,t,s,i,r=null){this._adapter.setForeignState(t,s,i||false,{user:this._options.user},t=>{this.emit(e,{err:t});r&&r()})}getSpecial(t){this._parentMessage({clientId:this._client.id,event:"get"+t})}subscribeSpecial(t,e){this._subscribeOthers[e]=this._subscribeOthers[e]||[];if(this._subscribeOthers[e].indexOf(t)===-1){this._subscribeOthers[e].push(t)}this.getSpecial(e)}getObject(s,i){this._adapter.getForeignObject(i,(t,e)=>{e={...e||{},id:i};this.emit(s,{err:t,object:e})})}getObjects(e,i){let s=[];["device","channel","state"].forEach(t=>{s.push(new Promise(s=>{this._adapter.getForeignObjects(i||"*",t,(t,e)=>s({err:t,objects:e}))}))});let r=null;let a={};Promise.all(s).then(t=>{t.forEach(t=>{r=r||t.err;a={...a,...t.objects}});Object.keys(a).forEach(t=>{const e=t.substr(0,t.indexOf(".",t.indexOf(".")+1));if(e&&!a[e]){a[e]={_id:e,type:"adapter"}}if(t.indexOf("system.adapter")>-1||t.indexOf("system.host")>-1||t.indexOf(".")===-1){delete a[t]}});this.emit(e,{err:r,objects:a})})}getObjectView(s,t,e,i,r){this._adapter.getObjectView(t,e,i,(t,e)=>{this.emit(s,{err:t,objects:e&&e.rows||[]})})}getState(s,i){this._adapter.getForeignState(i,{user:this._options.user},(t,e)=>{if(!t&&(!e||e&&e.ack===undefined&&e.ts===undefined&&e.from===undefined)){t=new Error(i+" is not a valid state")}this.emit(s,{err:t,state:e})})}getStates(s,t){this._adapter.getForeignStates(t,{user:this._options.user},(t,e)=>{this.emit(s,{err:t,states:e})})}unsubscribe(t,e,s,i){this._adapter.log.debug("unsubscribe ("+i+"): "+s+" | "+e);if(e==="history"&&s&&this._subscribeHistory[s]){delete this._subscribeHistory[s];this.emit(t,{subscriptionKey:s,type:e,stateId:i,err:null})}else if(e==="state"&&i&&this.subscribeState[i]){delete this.subscribeState[i];this.emit(t,{subscriptionKey:s,type:e,stateId:i,err:null})}else{this.emit(t,{subscriptionKey:s,stateId:i,err:"Not found"})}}subscribeState(t,e){this._subscribeStates[e]=this._subscribeStates[e]||[];if(this._subscribeStates[e].indexOf(t)===-1){this._subscribeStates[e].push(t)}this.getState(t,e)}subscribeHistory(t,e,s,i){this._adapter.log.debug("subscribeHistory ("+s+"): "+e+" | "+JSON.stringify(i));if(!this._subscribeHistory[e]){this._subscribeHistory[e]={subscriptionKey:e,messageId:t,stateId:s,options:i};this.getHistory(t,e,s,{...i,force:true})}else{this.emit(t,{subscriptionKey:e,err:null,hash:this._subscribeHistory[e].hash,history:this._subscribeHistory[e].history})}}getHistory(i,r,a,n={}){this._adapter.log.debug("getHistory ("+a+"): "+r+" | "+JSON.stringify(n));n.start=n.start||Date.now()-n.review;n.end=n.end||Date.now();n.instance=n.instance||"history.0";Promise.allSettled([this._adapter.getForeignStateAsync("system.adapter."+n.instance+".alive"),this._adapter.getForeignStateAsync("system.adapter."+n.instance+".connected")]).then(t=>{const e=!t.some(t=>t.status!=="fulfilled"||(!t.value||t.value&&t.value.val!==true));if(!e){throw new Error(n.instance+" not reachable")}return e}).then(()=>{this._adapter.getHistory(a,n,(t,e)=>{if(!t&&e){const s=e.length;if(this._subscribeHistory[r]&&(n.force===true||s!==this._subscribeHistory[r].hash)){this._adapter.log.debug("getHistory ("+a+"): Update");this._subscribeHistory[r].history=e;this._subscribeHistory[r].hash=s;this.emit(i,{subscriptionKey:r,err:t,hash:s,history:e})}else{this.emit(i,{subscriptionKey:r,err:t,hash:s,history:null,noUpdate:true})}}else{this.emit(i,{subscriptionKey:r,err:t,hash:null,history:null})}})}).catch(t=>{this.emit(i,{subscriptionKey:r,err:t,hash:null,history:null})})}getSystemInformation(t){this.emit(t,{hostname:_os.hostname(),architecture:_os.arch(),platform:_os.platform(),release:_os.release()})}}module.exports=ioWebSocket;