"use strict";const adapterName=require("./io-package.json").common.name;const utils=require("@iobroker/adapter-core");const _crypto=require("crypto");const _got=require("got");const _ip=require("ip");const _os=require("os");const _fs=require("fs");const _shajs=require("sha.js");const _path=require("path");const _schedule=require("node-schedule");const{v4:_uuid}=require("uuid");const Library=require("./lib/library.js");const Encryption=require("./lib/encryption");const ioWebSocket=require("./lib/server.js");let adapter;let library;let socket;let unloaded;let garbage_collector;let notification="";let NotificationTimer=null;let NOTIFICATIONS=[];let SETTINGS={};let CLIENTS={};let BACKUPS={styles:{},settings:{},layout:{},widgets:{},devices:{},scripts:{}};const BACKUP_STATES=[{state:"devices"},{state:"layout"},{state:"widgets"},{state:"settings"},{state:"scripts"},{state:"css",id:"styles"}];if(!Promise.allSettled){Promise.allSettled=e=>Promise.all(e.map((e,t)=>e.then(e=>({status:"fulfilled",value:e})).catch(e=>({status:"rejected",reason:e}))))}function startAdapter(e){e=e||{};adapter=new utils.Adapter({...e,systemConfig:true,name:adapterName});adapter.on("ready",function(){unloaded=false;library=new Library(adapter);let e=parseInt(process.version.substr(1,process.version.indexOf(".")-1));if(e<=6){return library.terminate("This Adapter is not compatible with your Node.js Version "+process.version+" (must be >= Node.js v7).",true)}removeOldDevices();garbage_collector=setInterval(()=>{removeOldDevices()},24*3600*1e3);if(adapter.config.scheduledHour===undefined||adapter.config.scheduledMinute===undefined){adapter.getForeignObject("system.adapter."+adapter.namespace,(e,t)=>{if(e||!t||!t.native){return library.terminate("Error system.adapter."+adapter.namespace+" not found!")}const a=library.random(0,59);const i=library.random(0,23);t.native={...t.native,scheduledHour:i,scheduledMinute:a};adapter.setForeignObject(t._id,t)})}else{adapter.log.debug("Scheduled for "+adapter.config.scheduledHour+":"+adapter.config.scheduledMinute);_schedule.scheduleJob(adapter.config.scheduledMinute+" "+adapter.config.scheduledHour+" * * *",()=>{adapter.getState("info.pro",(e,i)=>{if(!e&&i.val){const r=library.random(1e3,9999);const n=Date.now();const s=_shajs("sha256").update(n+"-"+r+"-bfceea54-998e-4f30-adf0-d0ff894e4a54").digest("hex");try{const o=JSON.parse(i.val);const{signature:t,...a}=o;const c=Encryption.verify(a,t,["-----BEGIN PUBLIC KEY-----","MIIBITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQB3DHXL321K/qm0H7pac0pZ","4hIBVgqOU3k6d8ti/gWRqrIvtC4BjFaZ5EtHD/tgPtb2eQKZFhxg/ZjQ7pgkWiqq","hs022REErUUtVFZDdovJkxQYkpqKYwjprjUMkEBna4hrugqpTfzTTOQShGULYEBB","gw9NFGff/NxTiOt4yyXFOkMJf7t8AYRWAoVpFYp5X+bI5mKEo8AzWZyKQY6n13Wx","ZWLUK9f8+ZEPgKU0LFiqMwEDwBO4af5Wqo8wdbnbWP7Ejo5qcrfOgEdGKXq9egza","ZuQy5K/b+mhtcDqtIVK1aAuGU/mBjjwCl0nft7PYMBd6pbq4c2rWCa4GRViC1reh","AgMBAAE=","-----END PUBLIC KEY-----"].join("\r\n"));if(c.verification===false){adapter.log.warn("Pro licence is invalid!");for(let a in CLIENTS){adapter.getState(CLIENTS[a].path+".connected",(e,t)=>{if(!e&&t&&t.val===true&&socket.sockets[a]){socket.sockets[a]._socket.emit("message",{messageId:"_reload",index:0,length:1,chunk:"{}"})}})}}adapter.getForeignObject("system.meta.uuid",(e,t)=>{if(!e&&t&&t.native){const a={action:"setPro",token:s,random:r,ts:n,intIp:_ip.address(),signature:o.signature,pro:i.val,version:adapter.version,ioBrokerId:t.native.uuid,system:JSON.stringify({hostname:_os.hostname(),architecture:_os.arch(),platform:_os.platform(),release:_os.release()})};_got.post("https://www.zefau.net/jarvis/user/details.php",{json:a}).catch(e=>{adapter.log.warn(e.message||e)})}})}catch(e){}}})})}BACKUP_STATES.forEach(i=>{i.id=i.id||i.state;BACKUPS[i.id]={};const r=_path.join(__dirname,"..","..","iobroker-data","jarvis",adapter.instance.toString(),"_BACKUP_"+i.id.toUpperCase()+".json");_fs.readFile(r,(e,t)=>{const a=_path.dirname(r);if(!_fs.existsSync(a)){_fs.mkdirSync(a,{recursive:true})}if(e){adapter.log.info("No Backup found for "+i.id+", thus backing up initially.");adapter.getState(i.state,(e,t)=>!e&&t&&t.val&&backup(i,t.val))}else if(t){adapter.log.info("Found Backups for "+i.id+".");try{BACKUPS[i.id]=JSON.parse(t)}catch(e){adapter.log.error("Error loading recent backups ("+i.id+"): "+e.message)}}})});let t=[];const n=8400+adapter.instance;t.push(new Promise(r=>{adapter.getForeignObject("system.adapter.web.0",(e,t)=>{adapter.log.debug("Web Configuration: "+JSON.stringify(t.native));const a={...t.native,user:t&&t.native&&t.native.defaultUser||null,webPort:t&&t.native&&t.native.port||8082,socketSecure:t&&t.native&&t.native.secure!==undefined?t.native.secure:false};const i={certPublic:t&&t.native&&t.native.certPublic!==undefined?t.native.certPublic:"",certPrivate:t&&t.native&&t.native.certPrivate!==undefined?t.native.certPrivate:"",certChained:t&&t.native&&t.native.certChained!==undefined?t.native.certChained:""};if(adapter.config.certPublic!==i.certPublic||adapter.config.certPrivate!==i.certPrivate||adapter.config.certChained!==i.certChained||adapter.config.autoDetect===true&&(adapter.config.webPort!==a.webPort||adapter.config.socketPort!==n||adapter.config.socketSecure!==a.socketSecure)){adapter.getForeignObject("system.adapter."+adapter.namespace,(e,t)=>{if(e||!t||!t.native){return library.terminate("Error system.adapter."+adapter.namespace+" not found!")}adapter.log.debug("Remember certificates...");t.native={...t.native,...i};if(adapter.config.autoDetect===true){adapter.log.debug("Write default config to jarvis...");t.native={...t.native,...a,socketPort:n}}adapter.setForeignObject(t._id,t)})}r(a)})}));if(adapter.config.socketSecure&&adapter.config.certPublic&&adapter.config.certPrivate){t.push(new Promise(i=>{adapter.getCertificates(adapter.config.certPublic,adapter.config.certPrivate,adapter.config.certChained,(e,t,a)=>{i(t)})}))}else{t.push(Promise.resolve(null))}t.push(new Promise(a=>{adapter.getForeignObject("system.config",(e,t)=>{a(t&&t.native&&t.native.secret||null)})}));Promise.all(t).then(e=>{const t=adapter.config.autoDetect===true?n:adapter.config.socketPort||n;socket=new ioWebSocket(adapter,{...adapter.config,...e[0],port:t,certificates:e[1],encryptionKey:e[2]});socket.on("CLIENT_NEW",e=>{CLIENTS[e.id]=CLIENTS[e.id]||{path:"jarvis."+adapter.instance+".clients."+e.ns,unreadNotifications:[]}});socket.on("CLIENT_LIST",e=>{adapter.setState("clients.connected",JSON.stringify(e,null,3),true)})}).catch(e=>{adapter.log.error("Error opening web socket: "+e.message)});library.set(Library.CONNECTION,true);adapter.getState("settings",(e,t)=>{if(!e&&t&&t.val){try{SETTINGS=JSON.parse(t.val)||{};SETTINGS.token=SETTINGS.token||_crypto.randomBytes(16).toString("hex");SETTINGS.sendUsageData=adapter.config.sendUsageData!==undefined?adapter.config.sendUsageData:true;adapter.setState("settings",JSON.stringify(SETTINGS),true);writeSettingsToStates(SETTINGS,()=>adapter.subscribeStates("settings*"))}catch(e){adapter.log.error("Error initially writing settings to states: "+e.message)}}});adapter.getState("notifications",(e,t)=>{try{NOTIFICATIONS=t&&t.val&&JSON.parse(t.val)||[]}catch(e){adapter.log.error("Error initially loading notifications: "+e.message)}});adapter.getDevices((e,t)=>{t.forEach(e=>{const i=e._id;adapter.getState(i+".id",(e,t)=>{const a=t&&t.val;CLIENTS[a]={path:i,unreadNotifications:[]}})})})});adapter.on("stateChange",function(t,a){if(t.startsWith("jarvis."+adapter.instance)===false||a===undefined||a===null||a.val===undefined||a.val===null){return}if(t.startsWith("jarvis.")&&t.indexOf(".clients.")>-1&&t.endsWith(".connected")&&a&&a.val===true){adapter.getState(t.substr(0,t.lastIndexOf("."))+".id",(e,t)=>{const a=t&&t.val;if(a&&CLIENTS[a].unreadNotifications&&CLIENTS[a].unreadNotifications.length>0&&socket.sockets[a]){adapter.log.debug("Client with ID "+a+" back online. Delivering saved notifications ("+CLIENTS[a].unreadNotifications.length+").");socket.sockets[a].emit("notification","unreadNotifications",CLIENTS[a].unreadNotifications);CLIENTS[a].unreadNotifications=[]}})}if(t.substr(-9)===".settings"){try{const i=JSON.parse(a.val)||{};SETTINGS=i;writeSettingsToStates(i)}catch(e){adapter.log.error("Error writing settings to states: "+e.message)}}if(t.indexOf(".notifications")!==-1){try{NOTIFICATIONS=a&&a.val&&JSON.parse(a.val)||[];for(let a in CLIENTS){adapter.getState(CLIENTS[a].path+".connected",(e,t)=>{if(!e&&t&&t.val===true&&socket.sockets[a]){adapter.log.debug("Client with ID "+a+" online. List of notifications updated.");socket.sockets[a].emit("notifications","allNotifications",JSON.stringify(NOTIFICATIONS))}})}}catch(e){adapter.log.error("Error setting notifications: "+e.message)}}const e=BACKUP_STATES.findIndex(e=>e.state===t.substr(t.lastIndexOf(".")+1));if(e>-1){backup(BACKUP_STATES[e],a.val)}if(a.ack===true){return}if(t.indexOf(".addNotification")>-1&&a&&a.val){adapter.setState("addNotification","",true);try{notification=a.val.indexOf("{")>-1&&a.val.indexOf("}")>-1?JSON.parse(a.val):{title:a.val};notification.message=notification.message.replace(/(\r\n|\r|\n)/g,"<br />");notification.id=_uuid();notification.ts=notification.ts||Date.now();if(notification.devices){notification.devices=Array.isArray(notification.devices)?notification.devices:[notification.devices]}if(notification.state!=="delete"){NOTIFICATIONS.push(notification);adapter.setState("notifications",JSON.stringify(processNotifications(NOTIFICATIONS)),true)}for(let a in CLIENTS){if(!notification.devices||notification.devices.includes(a)){adapter.getState(CLIENTS[a].path+".connected",(e,t)=>{if(!e&&t&&t.val===true&&socket.sockets[a]){adapter.log.debug("Client with ID "+a+" online. Notification delivered.");socket.sockets[a].emit("notification","newNotification",notification)}else{CLIENTS[a].unreadNotifications.push(notification);adapter.log.debug("Client with ID "+a+" not online, thus saving notification for later ("+CLIENTS[a].unreadNotifications.length+" saved).")}})}}}catch(e){adapter.log.error("Error adding notification: "+e.message)}}if(t.indexOf(".settings.")>-1){try{const r=t.substr(t.lastIndexOf(".settings.")+10);SETTINGS[r]=a&&a.val&&a.val.toString().indexOf("{")>-1&&a.val.toString().indexOf("}")>-1?JSON.parse(a.val):a.val;adapter.setState("settings",JSON.stringify(SETTINGS),true);if(adapter.config[r]!==undefined){adapter.getForeignObject("system.adapter."+adapter.namespace,(e,t)=>{if(e||!t||!t.native){return library.terminate("Error system.adapter."+adapter.namespace+" not found!")}t.native[r]=a.val;adapter.setForeignObject(t._id,t)})}}catch(e){adapter.log.error("Error updating settings: "+e.message)}}});adapter.on("message",function(n){adapter.log.debug("Got message: "+JSON.stringify(n));if(library&&library.msg&&n.command==="_getHashedToken"&&n.message){}else if(library&&library.msg&&n.command==="_getProData"){adapter.log.debug("Get pro data...");adapter.getForeignObject("system.meta.uuid",(e,r)=>{adapter.getState("info.pro",(e,t)=>{const a=t.val&&JSON.parse(t.val);const i={licence:t.val,licenceSignature:a&&a.signature,adapterInstance:adapter.instance,ioBrokerId:r.native.uuid};library.msg(n.from,n.command,i,n.callback)})})}else if(library&&library.msg&&n.command==="_backups"&&n.message){adapter.log.debug("Get List of Backups for "+n.message.id);library.msg(n.from,n.command,BACKUPS[n.message.id],n.callback)}else if(n.command==="_restore"&&n.message&&n.message.id&&n.message.state&&n.message.date){adapter.log.debug("Restore "+n.message.id);restore(n.message.id,n.message.state,n.message.date)}});adapter.on("unload",function(t){try{adapter.log.info("Adapter stopped und unloaded.");unloaded=true;library&&library.resetStates();clearInterval(garbage_collector);t()}catch(e){t()}});return adapter}function processNotifications(e){const t=SETTINGS.maxNotifications||1e3;e=e.slice(-(t+1));return e}function restore(e,t,a){adapter.log.info("Restore "+e+" from "+a+"..");adapter.setState(t,BACKUPS[e][a],true)}function backup(a,e){a.id=a.id||a.state;if(!e||e&&e.toString()==="{}"){return false}const t=new Date;const i=t.getFullYear()+"-"+("0"+(t.getMonth()+1)).substr(-2)+"-"+("0"+t.getDate()).substr(-2)+"_"+("0"+t.getHours()).substr(-2)+"-"+("0"+t.getMinutes()).substr(-2)+"-"+("0"+t.getSeconds()).substr(-2);BACKUPS[a.id][i]=e;adapter.config.keepBackupEntries=(adapter.config.keepBackupEntries||25)-1;const r=Object.keys(BACKUPS[a.id]);if(r.length>adapter.config.keepBackupEntries){r.reverse().forEach((e,t)=>{if(t>adapter.config.keepBackupEntries){delete BACKUPS[a.id][e]}})}adapter.log.info("Backup "+a.id+"..");const n=_path.join(__dirname,"..","..","iobroker-data","jarvis",adapter.instance.toString(),"_BACKUP_"+a.id.toUpperCase()+".json");_fs.writeFile(n,JSON.stringify(BACKUPS[a.id],null,3),e=>e&&adapter.log.error("Error saving backups to storage: "+e.message))}function removeOldDevices(){adapter.getDevices((e,t)=>{t.forEach(r=>{adapter.getState(r._id+".lastSeen",(e,t)=>{const a=r._id.substr(r._id.lastIndexOf(".")+1);const i=Date.now()-7*24*3600*1e3;if(e&&e.message){adapter.log.warn("Error removing old devices: "+e.message)}if(!t||!t.val||t.val<i){adapter.log.info("Device "+a+" expired and removed.");adapter.delForeignObject(r._id,{recursive:true},()=>{})}})})})}function writeSettingsToStates(t,a=null){let i=[];for(let e in t){const r=typeof t[e]==="object"?JSON.stringify(t[e]):t[e];i.push(new Promise((a,i)=>{library.set({node:"settings."+e,description:"Modify setting "+e,role:"config",type:typeof r,write:true,read:true},r,{callback:(e,t)=>e?i(e):a(t)})}))}Promise.allSettled(i).then(e=>a&&a())}if(module&&module.parent)module.exports=startAdapter;else startAdapter();