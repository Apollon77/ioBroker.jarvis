{"version":3,"sources":["pages/Joyride/i18n/de.js","pages/Joyride/i18n/en.js","pages/Joyride/i18n sync /^/.*$","config/joyride.js","components/Joyride.js","pages/Joyride/Joyride.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_clone","require","INTRODUCTION_STEPS","style","maxWidth","target","placement","title","content","cb","Connection","connection","setState","config","get","JSON","stringify","Settings","getSettings","margin","secondaryButton","secondaryAction","props","setRun","document","getElementById","click","primaryButton","primaryAction","devices","deviceList","Devices","importDevices","concat","then","result","forEach","res","status","device","value","function","push","layout","layoutTemplate","weather","Cache","tabs","columns","moduleConfig","affiliate_id","localidad","tplWidget","func","widget","uuid","i18n","t","icon","states","d","power","level","column","socket","getConnection","promises","Promise","all","window","location","reload","catch","err","console","error","Log","_","message","LinearProgress","buttons","DASHBOARD_STEPS","disableBeacon","offset","spotlightClicks","querySelector","addEventListener","stopPropagation","removeEventListener","useStyles","makeStyles","theme","button","marginLeft","spacing","grow","flexGrow","lineHeight","closeButton","color","Card","CardTitle","display","padding","flex","CardContent","minWidth","borderTop","palette","divider","borderBottom","CardActions","alignItems","justifyContent","md","children","classes","className","JarvisJoyride","useState","run","step","setStep","callback","state","action","index","lifecycle","type","spotlight","setTimeout","EVENTS","STEP_AFTER","TARGET_NOT_FOUND","includes","ACTIONS","PREV","STATUS","FINISHED","SKIPPED","continuous","disableOverlayClose","scrollOffset","stepIndex","steps","styles","options","zIndex","tooltipComponent","componentProps","isLastStep","backProps","skipProps","closeProps","primaryProps","tooltipProps","buttonProps","onClick","dangerouslySetInnerHTML","__html","render","root","open","Typography","variant","IconButton","dividers","Button","TooltipComponent","setTranslations","language"],"mappings":"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","file":"static/js/8.3ab44003.chunk.js","sourcesContent":["export default {\r\n\t// INTRODUCTION_STEPS\r\n\t\"#introduction.title\": \"Willkommen zu jarvis\",\r\n\t\"#introduction.content\": \"jarvis ist eine Material Design Visualisierung, die auf [Material UI](https://material-ui.com/) basiert. jarvis gibt eine Struktur und Module vor, die zur Visualisierung genutzt werden, aber sehr flexibel konfiguriert werden können.\\n\\r\" +\r\n\t\t\"jarvis ist [*responsive*](https://de.wikipedia.org/wiki/Responsive_Webdesign) und passt sich der Größe des Screens an.\\n\\r\" +\r\n\t\t\"Das Layout ist flexibel konfigurierbar. Es können optional (beliebig viele) Tabs verwendet werden. Jeder Tab kann entweder `fullscreen` sein oder beliebig viele `columns` haben, die die einzelnen `modules` in flexibler Reihenfolge beinhalten.\\n\\r\" +\r\n\t\t\"Jedes Modul hat spezielle Konfigurationsmöglichkeiten ([siehe Wiki je Modul](https://github.com/Zefau/ioBroker.jarvis/wiki/de-Modules#liste-der-module)).\",\r\n\t\r\n\t\"#settings.title\": \"Die erste jarvis erstellen\",\r\n\t\"#settings.content\": \"Direkt nach der Installation sieht dein jarvis natürlich noch sehr leer aus. Über das Zahnrad kannst du deine jarvis erstellen.\\n\\nWenn du möchtest, kann eine erste Visualisierung automatisch auf Basis deiner Geräte generiert werden? Diese kann im Nachgang natürlich frei bearbeitet werden.\",\r\n\t\"#settings.buttons.manually\": \"manuell erstellen\",\r\n\t\"#settings.buttons.automatically\": \"automatisch generieren\",\r\n\t\r\n\t\"#jarvis.title\": \"Suche Geräte und erstelle jarvis...\",\r\n\t\r\n\t// DASHBOARD_STEPS\r\n\t\"#TabBar.title\": \"Willkommen zu jarvis\",\r\n\t\"#TabBar.content\": \"jarvis bietet die Möglichkeit beliebig viele Tabs / Registerkarten anzulegen. Jeder Menü-Punkt in der Tabbar hat ein eigenes Icons und einen eigenen Bezeichner. Über die Einstellungen können die Bezeichner bei Bedarf ausgeblendet werden, so dass nur Icons zu sehen sind. Alternativ kann auch je Tab entschieden werden, nur Bezeichner, nur Icon oder beides anzuzeigen.\",\r\n\t\r\n\t\"#TabPanel.title\": \"Beliebig viele Tabs, beliebige viele Spalten - oder Vollbild\",\r\n\t\"#TabPanel.content\": \"Jeder Tab kann in der Hauptansicht beliebig viele Spalten beinhalten. Zu viele Spalten werden natürlich sehr kleinteilig - sind aber möglich. Empfohlen ist daher maximal 4 Spalten.\\n\\nJede Spalte kann beliebig viele Widgets beinhalten, die frei den Spalten zugeordnet werden können bzw. in den Spalten in beliebiger Reihenfolge platziert werden können. Ein Widget kann auch als Vollbild über die gesamte Seite hinweg angezeigt werden (praktisch z. B. für eine Karte).\",\r\n\t\r\n\t\"#widget.title\": \"Widgets zeigen deine Inhalte\",\r\n\t\"#widget.content\": \"Die Widgets dienen der Darstellung der Inhalte. Ein Widget kann mittels verschiedener Module verschiedene Inhalte darstellen, z. B. Wetter (mit dem Weather Modul), Kalender (mit dem Calendar Modul) oder eine Liste deiner Geräte zur Anzeige des Status oder Triggern der Datenpunkte (StateList Modul).\",\r\n\t\r\n\t\"#WidgetHeader.title\": \"Widget Titelzeile\",\r\n\t\"#WidgetHeader.content\": \"Jede Widget Titelzeile kann ein eigenes Icon (alle Material Design Icons werden unterstützt, siehe [Liste der Material Design Icons](https://materialdesignicons.com/)) und einen eigenen Bezeichner haben. Die Titelzeile kann bei Bedarf auch ausgeblendet werden.\",\r\n\t\r\n\t\"#WidgetContent.title\": \"Widget Inhalt öffnet die Geräte-Details\",\r\n\t\"#WidgetContent.content\": \"Dieses Widget nutzt das StateList Modul, um die Geräte anzuzeigen inkl. der Möglichkeit einen Datenpunkt auszulösen (z. B. an- bzw. auszuschalten).\\n\\nDie Icons eines jeden Geräts können beliebig - auch in Relation zum Wert des Datenpunkts - angepasst werden (also ein jeweils anderes Icon für ein offenes oder geschlossenes Fenster). Es kann entweder der Wert des Datenpunkts angezeigt werden oder eine Möglichkeit den Datenpunkt zu schalten. Die Möglichkeit zum Schalten umfasst einen Switch, Buttons, Eingabefelder, etc.\\n\\n**Zum Fortfahren bitte das Gerät klicken, um die Geräte-Details öffnen.**\",\r\n\t\r\n\t\"#DeviceStateDetails.title\": \"Die Geräte Detail-Ansicht\",\r\n\t\"#DeviceStateDetails.content\": \"Beim Klick öffnet sich ein Popup mit den Geräte-Details. Die Geräte-Details umfassen alle definierten Datenpunkte des Geräts. Auch hier kann zwischen der Anzeige und dem Schalten des Datenpunkts konfiguriert werden. Bei Bedarf kann der Popup deaktiviert oder einzelne Datenpunkte ausgeblendet werden.\"\r\n}","export default {\r\n\t// INTRODUCTION_STEPS\r\n\t\"#introduction.title\": \"Welcome to jarvis\",\r\n\t\"#introduction.content\": \"\",\r\n\t\r\n\t\"#settings.title\": \"Die erste jarvis erstellen\",\r\n\t\"#settings.content\": \"Direkt nach der Installation sieht dein jarvis natürlich noch sehr leer aus. Über das Zahnrad kannst du deine jarvis erstellen.\\n\\nWenn du möchtest, kann eine erste Visualisierung automatisch auf Basis deiner Geräte generiert werden? Diese kann im Nachgang natürlich frei bearbeitet werden.\",\r\n\t\"#settings.buttons.manually\": \"manuell erstellen\",\r\n\t\"#settings.buttons.automatically\": \"automatisch generieren\",\r\n\t\r\n\t\"#jarvis.title\": \"Suche Geräte und erstelle jarvis...\",\r\n\t\r\n\t// DASHBOARD_STEPS\r\n\t\"#TabBar.title\": \"\",\r\n\t\"#TabBar.content\": \"\",\r\n\t\r\n\t\"#TabPanel.title\": \"\",\r\n\t\"#TabPanel.content\": \"\",\r\n\t\r\n\t\"#widget.title\": \"\",\r\n\t\"#widget.content\": \"\",\r\n\t\r\n\t\"#WidgetHeader.title\": \"\",\r\n\t\"#WidgetHeader.content\": \"\",\r\n\t\r\n\t\"#WidgetContent.title\": \"\",\r\n\t\"#WidgetContent.content\": \"\",\r\n\t\r\n\t\"#DeviceStateDetails.title\": \"\",\r\n\t\"#DeviceStateDetails.content\": \"\"\r\n}","var map = {\n\t\"./de\": 2071,\n\t\"./de.js\": 2071,\n\t\"./en\": 2072,\n\t\"./en.js\": 2072\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2181;","import React from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nimport config from './config'\r\nimport layoutTemplate from './template.layout.json'\r\n\r\nimport Cache from '../controller/Cache'\r\nimport Connection from '../controller/Connection'\r\nimport Devices from '../controller/Devices'\r\nimport i18n from '../controller/i18n'\r\nimport Log from '../controller/Log'\r\nimport Settings from '../controller/Settings'\r\n\r\n\r\nconst _clone = require('rfdc')();\r\n\r\n/*\r\n * INTRODUCTION_STEPS\r\n */\r\nexport const INTRODUCTION_STEPS = [\r\n\t{\r\n\t\tstyle: { maxWidth: 'inherit' },\r\n\t\ttarget: 'body',\r\n\t\tplacement: 'center',\r\n\t\ttitle: '#introduction.title',\r\n\t\tcontent: '#introduction.content',\r\n\t\tcb: () => {\r\n\t\t\tConnection.connection.setState(config.get('NODE_SETTINGS'), JSON.stringify({ ...Settings.getSettings(), 'joyrideIntroduction': true }))\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tstyle: { margin: '0 0 0 auto' },\r\n\t\ttarget: '#SettingsButton',\r\n\t\ttitle: '#settings.title',\r\n\t\tcontent: '#settings.content',\r\n\t\tsecondaryButton: '#settings.buttons.manually',\r\n\t\tsecondaryAction: props => {\r\n\t\t\tprops.setRun(false);\r\n\t\t\tdocument.getElementById('SettingsButton').click();\r\n\t\t},\r\n\t\tprimaryButton: '#settings.buttons.automatically',\r\n\t\tprimaryAction: props => {\r\n\t\t\tlet devices = {}\r\n\t\t\tlet deviceList = {}\r\n\t\t\t\r\n\t\t\tDevices.importDevices(config.get('DEFAULT_ADAPTERIMPORT').concat(['daswetter']))\r\n\t\t\t\t.then(result => {\r\n\t\t\t\t\tresult.forEach(res => {\r\n\t\t\t\t\t\tif (res.status === 'fulfilled') {\r\n\t\t\t\t\t\t\tlet device = res.value;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdevices[device.function] = devices[device.function] || [];\r\n\t\t\t\t\t\t\tdevices[device.function].push(device);\r\n\t\t\t\t\t\t\tdeviceList[device.id] = device;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// get layout from template\r\n\t\t\t\t\tlet layout = _clone(layoutTemplate);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// change config of Weather module\r\n\t\t\t\t\tconst weather = Cache.get('daswetter');\r\n\t\t\t\t\tlayout[0].tabs[0].columns[0][1].moduleConfig = {\r\n\t\t\t\t\t\t\"apikey\": weather.affiliate_id,\r\n\t\t\t\t\t\t\"localid\": weather.localidad\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// define widget template\r\n\t\t\t\t\tconst tplWidget = {\r\n\t\t\t\t\t\t\"moduleConfig\": {},\r\n\t\t\t\t\t\t\"devices\": [],\r\n\t\t\t\t\t\t\"module\": \"StateList\",\r\n\t\t\t\t\t\t\"title\": \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// define functions which devices shall be adapted\r\n\t\t\t\t\tconst widgetFunctions = [\r\n\t\t\t\t\t\t{ 'function': 'light', 'icon': 'mdi-lightbulb-on', 'column': 1 },\r\n\t\t\t\t\t\t{ 'function': 'blind', 'icon': 'mdi-window-shutter-open', 'column': 2 },\r\n\t\t\t\t\t\t{ 'function': 'heating', 'icon': 'mdi-radiator', 'column': 2 },\r\n\t\t\t\t\t\t{ 'function': 'window', 'icon': 'mdi-window-closed-variant', 'column': 2 }\r\n\t\t\t\t\t];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// add devices\r\n\t\t\t\t\twidgetFunctions.forEach(func => {\r\n\t\t\t\t\t\tlet widget = _clone(tplWidget);\r\n\t\t\t\t\t\twidget.id = uuid();\r\n\t\t\t\t\t\twidget.title = i18n.t(func.function);\r\n\t\t\t\t\t\twidget.icon = func.icon;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdevices[func.function] = devices[func.function] || [];\r\n\t\t\t\t\t\tfor (let device of devices[func.function]) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (!device.states) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\t\t\t\"type\": \"device\",\r\n\t\t\t\t\t\t\t\t\"deviceId\": device.id\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (device.function === 'light') {\r\n\t\t\t\t\t\t\t\td = {\r\n\t\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\t\t\"actionType\": \"action\",\r\n\t\t\t\t\t\t\t\t\t\"actionElement\": \"SwitchAction\", \r\n\t\t\t\t\t\t\t\t\t\"primaryStateKey\": device.states && device.states.power ? 'power' : (device.states && device.states.level ? 'level' : '')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (device.function === 'blind') {\r\n\t\t\t\t\t\t\t\td = {\r\n\t\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\t\t\"actionType\": \"action\",\r\n\t\t\t\t\t\t\t\t\t\"actionElement\": \"BlindLevelAction\", \r\n\t\t\t\t\t\t\t\t\t\"primaryStateKey\": \"level\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (device.function === 'heating') {\r\n\t\t\t\t\t\t\t\td = {\r\n\t\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\t\t\"primaryStateKey\": \"temperature\",\r\n\t\t\t\t\t\t\t\t\t\"secondaryStatesKeys\": [\r\n\t\t\t\t\t\t\t\t\t\t\"setTemperature\",\r\n\t\t\t\t\t\t\t\t\t\t\"humidity\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (device.function === 'window') {\r\n\t\t\t\t\t\t\t\td = {\r\n\t\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\t\t\"primaryStateKey\": \"open\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twidget.devices.push(d);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlayout[0].tabs[0].columns[func.column].push(widget);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// save\r\n\t\t\t\t\tconst socket = Connection.getConnection;\r\n\t\t\t\t\tconst promises = [\r\n\t\t\t\t\t\tsocket.setState(config.get('NODE_LAYOUT'), JSON.stringify(layout)),\r\n\t\t\t\t\t\tsocket.setState(config.get('NODE_DEVICES'), JSON.stringify(deviceList))\r\n\t\t\t\t\t];\r\n\t\t\t\t\t\r\n\t\t\t\t\tPromise.all(promises)\r\n\t\t\t\t\t\t.then(() => window.location.reload())\r\n\t\t\t\t\t\t.catch(err => console.error(err));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\tLog._('Joyride', 'IMPORT_DEVICES: ' + err.message, 'error');\r\n\t\t\t\t});\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tstyle: { maxWidth: 'inherit' },\r\n\t\ttarget: 'body',\r\n\t\tplacement: 'center',\r\n\t\ttitle: '#jarvis.title',\r\n\t\tcontent: <LinearProgress />,\r\n\t\tbuttons: false\r\n\t}\r\n];\r\n\r\n\r\n/*\r\n * DASHBOARD_STEPS\r\n */\r\nexport const DASHBOARD_STEPS = [\r\n\t{\r\n\t\tdisableBeacon: true,\r\n\t\tplacement: 'auto',\r\n\t\t\r\n\t\ttarget: '#tabBar',\r\n\t\ttitle: '#TabBar.title',\r\n\t\tcontent: '#TabBar.content',\r\n\t\tcb: () => {\r\n\t\t\tConnection.connection.setState(config.get('NODE_SETTINGS'), JSON.stringify({ ...Settings.getSettings(), 'joyrideDashboard': true }))\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tdisableBeacon: true,\r\n\t\tplacement: 'auto',\r\n\t\t\r\n\t\ttarget: '#tabpanel-0',\r\n\t\ttitle: '#TabPanel.title',\r\n\t\tcontent: '#TabPanel.content'\r\n\t},\r\n\t{\r\n\t\tdisableBeacon: true,\r\n\t\tplacement: 'top-start',\r\n\t\toffset: -200,\r\n\t\t\r\n\t\ttarget: '#tabpanel-0 .Module-StateList:nth-child(1)',\r\n\t\ttitle: '#widget.title',\r\n\t\tcontent: '#widget.content'\r\n\t},\r\n\t{\r\n\t\tdisableBeacon: true,\r\n\t\tplacement: 'auto',\r\n\t\t\r\n\t\ttarget: '#tabpanel-0 .Module-StateList:nth-child(1) .CardHeader',\r\n\t\ttitle: '#WidgetHeader.title',\r\n\t\tcontent: '#WidgetHeader.content'\r\n\t},\r\n\t{\r\n\t\tdisableBeacon: true,\r\n\t\tplacement: 'auto',\r\n\t\tspotlightClicks: true,\r\n\t\tbuttons: false,\r\n\t\tcb: () => {\r\n\t\t\tconst backdrop = document.querySelector('.MuiBackdrop-root');\r\n\t\t\tbackdrop.addEventListener('click', e => e.stopPropagation(), true);\r\n\t\t},\r\n\t\t\r\n\t\ttarget: '#tabpanel-0 .Module-StateList:nth-child(1) .CardContent .MuiListItem-container',\r\n\t\ttitle: '#WidgetContent.title',\r\n\t\tcontent: '#WidgetContent.content'\r\n\t},\r\n\t{\r\n\t\tdisableBeacon: true,\r\n\t\toffset: -100,\r\n\t\tplacement: 'top',\r\n\t\tcb: () => {\r\n\t\t\tconst backdrop = document.querySelector('.MuiBackdrop-root');\r\n\t\t\tbackdrop.removeEventListener('click', e => e.stopPropagation(), true);\r\n\t\t},\r\n\t\t\r\n\t\ttarget: '.MuiPaper-root.MuiDialog-paper.MuiDialog-paperScrollPaper',\r\n\t\ttitle: '#DeviceStateDetails.title',\r\n\t\tcontent: '#DeviceStateDetails.content'\r\n\t},\r\n];","import React from 'react'\r\n//import clsx from 'clsx'\r\n\r\nimport i18n from '../controller/i18n'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbutton: {\r\n\t\tmarginLeft: theme.spacing()\r\n\t},\r\n\tgrow: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tcontent: {\r\n\t\t'& p': {\r\n\t\t\tmargin: '0 0 18px',\r\n\t\t\tlineHeight: '1.42857143',\r\n\t\t}\r\n\t},\r\n\tcloseButton: {\r\n\t\tcolor: '#9e9e9e',\r\n\t\tmargin: theme.spacing(-1),\r\n\t\t//top: theme.spacing(1),\r\n\t\t//right: '8px',\r\n\t\t//position: 'absolute'\r\n\t},\r\n\tCard: {\r\n\t\tmaxWidth: '50%',\r\n\t\tmargin: '0 auto'\r\n\t},\r\n\tCardTitle: {\r\n\t\tdisplay: 'flex',\r\n\t\tmargin: 0,\r\n\t\tpadding: '16px 24px',\r\n\t\tflex: '0 0 auto',\r\n\t},\r\n\tCardContent: {\r\n\t\tminWidth: 350,\r\n\t\tpadding: '16px 24px',\r\n\t\tborderTop: `1px solid ${theme.palette.divider}`,\r\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\r\n\t},\r\n\tCardActions: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 8,\r\n\t\tjustifyContent: 'flex-end',\r\n\t\tflex: '0 0 auto',\r\n\t}\r\n}));\r\n\r\n\r\nconst Markdown = require('markdown-it'),\r\n\t  md = new Markdown();\r\n\r\nconst CardTitle = props => {\r\n\tconst { children } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.CardTitle}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst CardContent = props => {\r\n\tconst { children } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.CardContent}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst CardActions = props => {\r\n\tconst { children } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.CardActions}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default function Joyride(props) {\r\n\tconst { continuous, index, step, isLastStep, backProps, skipProps, closeProps, primaryProps, tooltipProps } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst buttonProps = {\r\n\t\t...primaryProps,\r\n\t\t'onClick': e => {\r\n\t\t\tstep.primaryAction && step.primaryAction(props);\r\n\t\t\tprimaryProps.onClick(e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst content = typeof step.content === 'string' ? <div className={classes.content} dangerouslySetInnerHTML={{__html: md.render(i18n.t(step.content))}} /> : <div className={classes.content}>{step.content}</div>\r\n\treturn (\r\n\t\t<Card classes={{ root: classes.Card }} {...tooltipProps} style={step.style || {}} open={true}>\r\n\t\t\t<CardTitle>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ margin: 'auto 0' }}>{i18n.t(step.title)}</Typography>\r\n\t\t\t\t\r\n\t\t\t\t<div className={classes.grow} />\r\n\t\t\t\t<IconButton classes={{ root: classes.closeButton }} {...skipProps}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</CardTitle>\r\n\t\t\t<CardContent dividers>\r\n\t\t\t\t{content}\r\n\t\t\t</CardContent>\r\n\t\t\t{step.buttons !== false && <CardActions>\r\n\t\t\t\t{index > 0 && (<>\r\n\t\t\t\t<Button className={classes.button} color=\"secondary\" {...backProps}>\r\n\t\t\t\t\t{i18n.t('back')}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div className={classes.grow} />\r\n\t\t\t\t</>)}\r\n\t\t\t\t\r\n\t\t\t\t{!step.primaryButton && continuous && (\r\n\t\t\t\t<Button className={classes.button} color=\"primary\" variant=\"contained\" {...primaryProps}>\r\n\t\t\t\t\t{i18n.t(isLastStep ? 'close' : 'next')}\r\n\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t\r\n\t\t\t\t{!step.primaryButton && !continuous && (\r\n\t\t\t\t<Button className={classes.button} {...closeProps}>\r\n\t\t\t\t\t{i18n.t('close')}\r\n\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t\r\n\t\t\t\t{step.secondaryButton && (\r\n\t\t\t\t<Button className={classes.button} color=\"primary\" variant=\"text\" onClick={step.secondaryAction && (() => step.secondaryAction(props))}>\r\n\t\t\t\t\t{i18n.t(step.secondaryButton)}\r\n\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t{step.primaryButton && (\r\n\t\t\t\t<Button className={classes.button} color=\"primary\" variant=\"contained\" {...buttonProps}>\r\n\t\t\t\t\t{i18n.t(step.primaryButton)}\r\n\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</CardActions>}\r\n\t\t</Card>\r\n\t);\r\n}","import React, { useState } from 'react'\r\nimport Joyride, { ACTIONS, EVENTS, STATUS } from 'react-joyride'\r\n\r\nimport i18n from '../../controller/i18n'\r\nimport Settings from '../../controller/Settings'\r\n\r\nimport { INTRODUCTION_STEPS, DASHBOARD_STEPS } from '../../config/joyride'\r\nimport TooltipComponent from '../../components/Joyride'\r\n\r\n\r\ni18n.setTranslations(language => require('./i18n/' + language));\r\n\r\nexport default function JarvisJoyride(props) {\r\n\tconst [run,setRun] = useState(props.run || false);\r\n\tconst [step,setStep] = useState(0);\r\n\t\r\n\treturn (\r\n\t\t<Joyride\r\n\t\t\tcallback={state => {\r\n\t\t\t\tconst { step, action, index, lifecycle, status, type } = state;\r\n\t\t\t\t\r\n\t\t\t\t// spotlight\r\n\t\t\t\tif (step.spotlightClicks === true && lifecycle === \"tooltip\") {\r\n\t\t\t\t\tconst spotlight = document.querySelector(step.target);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (spotlight) {\r\n\t\t\t\t\t\tspotlight.addEventListener('click', () => {\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tstep.cb && step.cb(state);\r\n\t\t\t\t\t\t\t\tsetStep(index + 1);\r\n\t\t\t\t\t\t\t}, 250);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// steps\r\n\t\t\t\tif ([EVENTS.STEP_AFTER, EVENTS.TARGET_NOT_FOUND].includes(type)) {\r\n\t\t\t\t\tstep.cb && step.cb(state);\r\n\t\t\t\t\tsetStep(index + (action === ACTIONS.PREV ? -1 : 1));\r\n\t\t\t\t}\r\n\t\t\t\telse if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\r\n\t\t\t\t\tstep.cb && step.cb(state);\r\n\t\t\t\t\tsetRun(false);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tcontinuous={true}\r\n\t\t\tdisableOverlayClose={true}\r\n\t\t\trun={run}\r\n\t\t\tscrollOffset={60}\r\n\t\t\tstepIndex={step}\r\n\t\t\tsteps={Settings.get('joyrideIntroduction') === true ? DASHBOARD_STEPS : INTRODUCTION_STEPS}\r\n\t\t\tstyles={{\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tzIndex: 1900\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\ttooltipComponent={componentProps => TooltipComponent({ ...componentProps, 'setRun': setRun })}\r\n\t\t\t/>\r\n\t);\r\n}\r\n"],"sourceRoot":""}