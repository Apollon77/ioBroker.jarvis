{"version":3,"sources":["pages/Notifications/i18n/de.js","pages/Notifications/i18n/en.js","pages/Notifications/i18n sync /^/.*$","components/Divider.js","pages/Notifications/List.js","pages/Notifications/Drawer.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Divider","children","props","Grid","container","alignItems","spacing","item","xs","useStyles","makeStyles","theme","List","padding","unread","backgroundColor","palette","background","paper","read","opacity","archived","bold","fontWeight","React","memo","classes","useState","notifications","setNotifications","NotificationsClass","Notifications","getInstance","showNotification","notification","emit","useEffect","parse","res","reverse","get","on","off","notificationElements","archivedNotificationElements","forEach","state","push","Notification","key","onClick","root","dense","NotificationList","list","hidden","divider","length","i18n","t","prevProps","nextProps","open","undefined","setHidden","ListItem","button","prevHidden","title","message","icon","criticality","iconColor","set","s","del","clsx","ListItemIcon","Icon","color","ListItemText","primary","secondary","substr","ListItemSecondaryAction","IconButton","edge","aria-label","size","drawer","styles","width","isMobile","default","NotificationDrawer","navigate","Settings","anchor","onOpen","console","log","onClose","setTranslations","language","require"],"mappings":"oGAAA,OAAe,c,kCCAf,OAAe,c,qBCAf,IAAIA,EAAM,CACT,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,MAIZ,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,M,oLCTLY,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,mCACf,kBAACC,EAAA,EAAD,eAAMC,WAAS,EAACC,WAAW,SAASC,QAAS,GAAOJ,GACnD,kBAACC,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GACZ,kBAAC,IAAD,OAED,kBAACL,EAAA,EAAD,CAAMI,MAAI,GAAEN,GACZ,kBAACE,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GACZ,kBAAC,IAAD,S,kKCgBGC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACLC,QAASF,EAAML,QAAQ,EAAG,MAE3BQ,OAAQ,CACPC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE3CC,KAAM,CAELC,QAAS,IAEVC,SAAU,GAEVC,KAAM,CACLC,WAAY,YAKCC,MAAMC,MAAK,SAAAvB,GACzB,IAAMwB,EAAUjB,IADkB,EAEOkB,mBAAS,IAFhB,mBAE3BC,EAF2B,KAEbC,EAFa,KAI5BC,GAAqB,IAAIC,KAAgBC,cACzCC,EAAmB,SAAAC,GACxBJ,EAAmBK,KAAK,MAAxB,2BAAoCD,GAApC,IAAkD,QAAW,QAAS,iBAAoB,SAG3FE,qBAAU,WACT,IAAMC,EAAQ,SAAAC,GAAG,OAAIT,EAAiB,YAAKS,GAAMC,YAKjD,OAHAT,EAAmBU,IAAI,MAAOH,GAC9BP,EAAmBW,GAAG,MAAOJ,GAEtB,kBAAMP,EAAmBY,IAAI,MAAOL,MAEzC,CAACP,IAGJ,IAAIa,EAAuB,GACvBC,EAA+B,GAWnC,OATAhB,EAAciB,SAAQ,SAAAX,GACM,aAAvBA,EAAaY,MAChBH,EAAqBI,KAAK,kBAACC,EAAD,eAAcC,IAAKf,EAAa9C,GAAI8D,QAAS,kBAAMjB,EAAiBC,KAAmBA,KAGjHU,EAA6BG,KAAK,kBAACC,EAAD,eAAcC,IAAKf,EAAa9C,GAAI8D,QAAS,kBAAMjB,EAAiBC,KAAmBA,QAK1H,kBAACtB,EAAA,EAAD,CAAMc,QAAS,CAAEyB,KAAMzB,EAAQd,MAAQwC,OAAK,GAC3C,kBAACC,EAAD,CAAkBC,KAAMX,IACxB,kBAACU,EAAD,CAAkBC,KAAMV,EAA8BW,QAAM,EAACC,QAASZ,EAA6Ba,OAAS,GAAM,SAACF,GAAD,OAAY,4BAAKG,IAAKC,GAAGJ,EAAS,OAAS,QAAU,mCAMvK,SAACK,EAAWC,GACd,OAA0B,IAAnBA,EAAUC,QAIlB,SAAST,EAAiBnD,GAAQ,IACzBoD,EAAkBpD,EAAlBoD,KAAME,EAAYtD,EAAZsD,QADkB,EAGL7B,wBAA0BoC,IAAjB7D,EAAMqD,QAAuBrD,EAAMqD,QAHvC,mBAGzBA,EAHyB,KAGlBS,EAHkB,KAKhC,OACC,oCACER,GAAW,kBAACS,EAAA,EAAD,CAAUb,OAAK,EAACc,QAAM,EAAChB,QAAS,kBAAMc,GAAU,SAAAG,GAAU,OAAKA,OAC1E,kBAAC,EAAD,KAAUX,EAAQD,MAEP,IAAXA,GAAmBD,GAMvB,SAASN,EAAa9C,GAAQ,IACrBd,EAAiFc,EAAjFd,GAAI0D,EAA6E5C,EAA7E4C,MAAOI,EAAsEhD,EAAtEgD,QADS,EAC6DhD,EAA7DkE,aADA,MACQ,KADR,IAC6DlE,EAA/CmE,eADd,MACwB,GADxB,EACyCC,GAAoBpE,EAAjCqE,YAAiCrE,EAApBoE,MAAME,EAActE,EAAdsE,UACrE9C,EAAUjB,IAEhB,GAAc,OAAV2D,EACH,OAAO,KAGR,IAAMK,EAAM,SAAAC,GACX,IAAM5C,GAAqB,IAAIC,KAAgBC,cAErC,WAAN0C,EACH5C,EAAmB6C,IAAIvF,GAGvB0C,EAAmB2C,IAAIrF,EAAI,CAAE,MAASsF,KAIxC,OACC,kBAACT,EAAA,EAAD,CACCf,QAASA,EACTxB,QAAS,CAAEyB,KAAMyB,YAAe,SAAV9B,GAAoBpB,EAAQP,OAAQ2B,GAAmB,WAAVA,IAAuBpB,EAAQZ,OAAkB,aAAVgC,GAAwBpB,EAAQL,WAC1I+B,OAAK,EACLI,SAAO,EACPU,QAAM,GAGN,kBAACW,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAMR,KAAMA,GAAQ,cAAeS,MAAOP,KAE3C,kBAACQ,EAAA,EAAD,CACCtD,QAAS,CAAEuD,QAASL,cAAO9B,GAAmB,WAAVA,IAAuBpB,EAAQJ,MAAO4D,UAAWN,cAAO9B,GAAmB,WAAVA,IAAuBpB,EAAQJ,OACpI2D,QAASb,EACTc,UAAWb,EAAQZ,OAAS,GAAKY,EAAQc,OAAO,EAAE,IAAM,MAAQd,IAGjE,kBAACe,EAAA,EAAD,KACY,aAAVtC,EACD,kBAACuC,EAAA,EAAD,CAAYnC,QAAS,kBAAMuB,EAAc,WAAV3B,EAAqB,OAAS,WAAWwC,KAAK,MAAMC,aAAsB,WAAVzC,EAAqB,OAAS,UACjH,WAAVA,EAAqB,kBAAC,IAAD,CAAY0C,KAAK,UAAa,kBAAC,IAAD,CAAUA,KAAK,WAEpE,kBAACH,EAAA,EAAD,CAAYnC,QAAS,kBAAMuB,EAAI,SAASa,KAAK,MAAMC,aAAY,WAC9D,kBAAC,IAAD,CAAaC,KAAK,WAGnB,kBAACH,EAAA,EAAD,CAAYnC,QAAS,kBAAMuB,EAAc,aAAV3B,EAAuB,SAAW,aAAawC,KAAK,MAAMC,aAAsB,aAAVzC,EAAuB,SAAW,WAC3H,aAAVA,EAAuB,kBAAC,IAAD,CAAY0C,KAAK,UAAa,kBAAC,IAAD,CAAaA,KAAK,a,cC9IvE/E,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtC8E,OAAQ,SAAAC,GAAM,MAAK,CAClBC,MAAOD,EAAOE,SAAW,OAAS,IAClC7E,gBAAiBJ,EAAMK,QAAQC,WAAW4E,cAO7B,SAASC,EAAmB5F,GAAQ,IAC1C6F,EAAa7F,EAAb6F,SACFrE,EAAUjB,EAAU,CAAEmF,SAAUI,IAASxD,IAAI,eAGnD,OACC,kBAAC,IAAD,CACCyD,OAAO,QACPnC,KAAM5D,EAAM4D,KACZoC,OAAQC,QAAQC,IAChBC,QAAS,kBAAMN,EAAS,OACxBrE,QAAS,CACRR,MAAOQ,EAAQ+D,SAIhB,kBAAC,EAAqBvF,IAlBzBwD,IAAK4C,iBAAgB,SAAAC,GAAQ,OAAIC,QAAQ,KAAYD","file":"static/js/11.8a48fee1.chunk.js","sourcesContent":["export default {\r\n}","export default {\r\n}","var map = {\n\t\"./de\": 2135,\n\t\"./de.js\": 2135,\n\t\"./en\": 2136,\n\t\"./en.js\": 2136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2265;","import React from 'react'\r\nimport { Grid, Divider as MuiDivider } from '@material-ui/core'\r\n\r\n\r\nconst Divider = ({ children, ...props }) => (\r\n\t<Grid container alignItems=\"center\" spacing={1} {...props}>\r\n\t\t<Grid item xs>\r\n\t\t\t<MuiDivider />\r\n\t\t</Grid>\r\n\t\t<Grid item>{children}</Grid>\r\n\t\t<Grid item xs>\r\n\t\t\t<MuiDivider />\r\n\t\t</Grid>\r\n\t</Grid>\r\n);\r\n\r\nexport default Divider;\r\n","import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport i18n from '../../controller/i18n'\r\nimport Notifications from '../../controller/Notifications'\r\n\r\nimport Divider from '../../components/Divider'\r\nimport Icon from '../../components/Icon'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ArchiveIcon from '@material-ui/icons/Archive'\r\nimport RestoreIcon from '@material-ui/icons/Unarchive'\r\nimport ReadIcon from '@material-ui/icons/Drafts'\r\nimport UnreadIcon from '@material-ui/icons/Markunread'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tList: {\r\n\t\tpadding: theme.spacing(0, 1.5)\r\n\t},\r\n\tunread: {\r\n\t\tbackgroundColor: theme.palette.background.paper\r\n\t},\r\n\tread: {\r\n\t\t//backgroundColor: theme.palette.grey[300],\r\n\t\topacity: 0.5\r\n\t},\r\n\tarchived: {\r\n\t},\r\n\tbold: {\r\n\t\tfontWeight: 'bold',\r\n\t}\r\n}));\r\n\r\n\r\nexport default React.memo(props => {\r\n\tconst classes = useStyles();\r\n\tconst [notifications,setNotifications] = useState([]);\r\n\t\r\n\tconst NotificationsClass = new Notifications().getInstance();\r\n\tconst showNotification = notification => {\r\n\t\tNotificationsClass.emit('new', { ...notification, 'display': 'popup', 'autoHideDuration': null });\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst parse = res => setNotifications([ ...res ].reverse());\r\n\t\t\r\n\t\tNotificationsClass.get('all', parse);\r\n\t\tNotificationsClass.on('all', parse);\r\n\t\t\r\n\t\treturn () => NotificationsClass.off('all', parse);\r\n\t\t\r\n\t}, [NotificationsClass]);\r\n\t\r\n\t// get notifications\r\n\tlet notificationElements = [];\r\n\tlet archivedNotificationElements = [];\r\n\t\r\n\tnotifications.forEach(notification => {\r\n\t\tif (notification.state !== 'archived') {\r\n\t\t\tnotificationElements.push(<Notification key={notification.id} onClick={() => showNotification(notification)} {...notification} />);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarchivedNotificationElements.push(<Notification key={notification.id} onClick={() => showNotification(notification)} {...notification} />);\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<List classes={{ root: classes.List }} dense>\r\n\t\t\t<NotificationList list={notificationElements} />\r\n\t\t\t<NotificationList list={archivedNotificationElements} hidden divider={archivedNotificationElements.length > 0 && ((hidden) => <em>{i18n.t((hidden ? 'show' : 'hide') + ' archived Notifications')}</em>)}\r\n\t\t\t\t/>\r\n\t\t\t\r\n\t\t</List>\r\n\t);\r\n\t\r\n}, (prevProps, nextProps) => {\r\n\treturn nextProps.open === false; // do not update when drawer is closed\r\n});\r\n\r\n\r\nfunction NotificationList(props) {\r\n\tconst { list, divider } = props;\r\n\t\r\n\tconst [hidden,setHidden] = useState(props.hidden !== undefined ? props.hidden : false);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{divider && <ListItem dense button onClick={() => setHidden(prevHidden => !prevHidden)}>\r\n\t\t\t\t<Divider>{divider(hidden)}</Divider>\r\n\t\t\t</ListItem>}\r\n\t\t\t{hidden !== true && list}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n\r\nfunction Notification(props) {\r\n\tconst { id, state, onClick, title = null, message = '', criticality, icon, iconColor } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tif (title === null) {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tconst set = s => {\r\n\t\tconst NotificationsClass = new Notifications().getInstance();\r\n\t\t\r\n\t\tif (s === 'delete') {\r\n\t\t\tNotificationsClass.del(id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tNotificationsClass.set(id, { 'state': s });\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<ListItem\r\n\t\t\tonClick={onClick}\r\n\t\t\tclasses={{ root: clsx(state === 'read' && classes.read, (!state || state === 'unread') && classes.unread, state === 'archived' && classes.archived) }}\r\n\t\t\tdense\r\n\t\t\tdivider\r\n\t\t\tbutton\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<Icon icon={icon || 'mdi-message'} color={iconColor} />\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemText\r\n\t\t\t\tclasses={{ primary: clsx((!state || state === 'unread') && classes.bold), secondary: clsx((!state || state === 'unread') && classes.bold) }}\r\n\t\t\t\tprimary={title}\r\n\t\t\t\tsecondary={message.length > 40 ? message.substr(0,35) + '...' : message}\r\n\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t{state !== 'archived' ? (\r\n\t\t\t\t<IconButton onClick={() => set(state === 'unread' ? 'read' : 'unread')} edge=\"end\" aria-label={state === 'unread' ? 'read' : 'unread'}>\r\n\t\t\t\t\t{state === 'unread' ? <UnreadIcon size=\"small\" /> : <ReadIcon size=\"small\" />}\r\n\t\t\t\t</IconButton>) : (\r\n\t\t\t\t<IconButton onClick={() => set('read')} edge=\"end\" aria-label={'restore'}>\r\n\t\t\t\t\t<RestoreIcon size=\"small\" />\r\n\t\t\t\t</IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t<IconButton onClick={() => set(state === 'archived' ? 'delete' : 'archived')} edge=\"end\" aria-label={state === 'archived' ? 'delete' : 'archive'}>\r\n\t\t\t\t\t{state === 'archived' ? <DeleteIcon size=\"small\" /> : <ArchiveIcon size=\"small\" />}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItem>\r\n\t);\r\n}","import React from 'react'\r\n\r\nimport i18n from '../../controller/i18n'\r\nimport Settings from '../../controller/Settings'\r\n\r\nimport NotificationList from './List'\r\nimport Drawer from '@material-ui/core/SwipeableDrawer'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tdrawer: styles => ({\r\n\t\twidth: styles.isMobile ? '100%' : 500,\r\n\t\tbackgroundColor: theme.palette.background.default\r\n\t})\r\n}));\r\n\r\n\r\ni18n.setTranslations(language => require('./i18n/' + language));\r\n\r\nexport default function NotificationDrawer(props) {\r\n\tconst { navigate } = props;\r\n\tconst classes = useStyles({ isMobile: Settings.get('_isMobile') });\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tanchor=\"right\"\r\n\t\t\topen={props.open}\r\n\t\t\tonOpen={console.log}\r\n\t\t\tonClose={() => navigate(null)}\r\n\t\t\tclasses={{\r\n\t\t\t\tpaper: classes.drawer\r\n\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<NotificationList {...props} />\r\n\t\t</Drawer>\r\n\t);\r\n}\r\n"],"sourceRoot":""}