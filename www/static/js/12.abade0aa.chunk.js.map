{"version":3,"sources":["pages/QuickJump/QuickJump.js"],"names":["useStyles","makeStyles","theme","QuickJump","position","bottom","width","backgroundColor","palette","background","main","textAlign","borderTop","paper","zIndex","QuickJumpOpener","cursor","QuickJumpBody","maxHeight","padding","overflow","JumpItemList","JumpItem","color","text","primary","JumpItemHighlighted","JumpItemIconHighlighted","props","classes","useState","open","setOpen","onJump","drawer","tab","widget","Settings","getSetting","layout","getLayout","QuickJumpComponents","drawerIndex","tabIndex","tabs","push","key","highlighted","button","icon","title","_fullscreen","index","columnIndex","column","columns","widgetIndex","className","clsx","onClick","prevOpen","Icon","List","root","JumpList","ListItem","undefined","ListItemIcon","JumpItemIcon","ListItemText"],"mappings":"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","file":"static/js/12.abade0aa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport Icon from '../../components/Icon'\r\n\r\n//import i18n from '../../controller/i18n'\r\nimport Settings from '../../controller/Settings'\r\n\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tQuickJump: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: 0,\r\n\t\twidth: '100%',\r\n\t\tbackgroundColor: theme.palette.background.main,\r\n\t\ttextAlign: 'center',\r\n\t\tborderTop: '2px solid #' + theme.palette.background.paper,\r\n\t\tzIndex: 1000,\r\n\t},\r\n\tQuickJumpOpener: {\r\n\t\tcursor: 'pointer',\r\n\t\t\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: theme.palette.background.paper\r\n\t\t}\r\n\t},\r\n\tQuickJumpBody: {\r\n\t\tmaxHeight: 500,\r\n\t\tpadding: '5px 0 10px 0',\r\n\t\toverflow: 'auto'\r\n\t},\r\n\tJumpItemList: {\r\n\t\twidth: '100%'\r\n\t},\r\n\tJumpItem: {\r\n\t\tcolor: theme.palette.text.primary\r\n\t},\r\n\tJumpItemHighlighted: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: theme.palette.text.primary\r\n\t},\r\n\tJumpItemIconHighlighted: {\r\n\t\tcolor: theme.palette.text.primary\r\n\t}\r\n}));\r\n\r\n\r\nexport default function QuickJump(props) {\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst [open,setOpen] = useState(false);\r\n\tconst onJump = (drawer, tab, widget) => {\r\n\t\tsetOpen(false);\r\n\t\tprops.onJump(drawer, tab, widget);\r\n\t}\r\n\t\r\n\tconst openQuickJump = () => {\r\n\t\tsetOpen(prevOpen => prevOpen !== true);\r\n\t}\r\n\t\r\n\t// hide QuickJumper\r\n\tconst hideQuickJumper = Settings.getSetting('hideQuickJumper');\r\n\tif (hideQuickJumper === true) {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t// get layout\r\n\tconst layout = Settings.getLayout();\r\n\tlet QuickJumpComponents = [];\r\n\t\r\n\t// drawer\r\n\tfor (let drawerIndex in layout) {\r\n\t\tlet drawer = layout[drawerIndex];\r\n\t\t\r\n\t\t// tabs\r\n\t\tfor (let tabIndex in drawer.tabs) {\r\n\t\t\tlet tab = drawer.tabs[tabIndex];\r\n\t\t\tQuickJumpComponents.push(<JumpItem key={'JumpList-' + drawerIndex + '-' + tabIndex} highlighted={true} button={false} icon={tab.icon || ''} title={tab.title || ''} />);\r\n\t\t\t\r\n\t\t\t// fullscreen\r\n\t\t\tif (tab._fullscreen) {\r\n\t\t\t\tQuickJumpComponents.push(<JumpItem key={'JumpList-' + drawerIndex + '-' + tabIndex + '-fullscreen'} onJump={() => onJump({ ...drawer, index: drawerIndex }, { ...tab, index: tabIndex })} icon={tab.icon || 'home'} title={tab.title || ''} />);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// columns\r\n\t\t\telse {\r\n\t\t\t\tfor (let columnIndex in tab.columns) {\r\n\t\t\t\t\tlet column = tab.columns[columnIndex];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// widgets\r\n\t\t\t\t\tfor (let widgetIndex in column) {\r\n\t\t\t\t\t\tlet widget = column[widgetIndex];\r\n\t\t\t\t\t\tif (widget) {\r\n\t\t\t\t\t\t\tQuickJumpComponents.push(<JumpItem key={'JumpList-' + drawerIndex + '-' + tabIndex + '-' + columnIndex + '-' + widgetIndex} onJump={() => onJump({ ...drawer, 'index': drawerIndex }, { ...tab, 'index': tabIndex }, { ...widget, 'index': widgetIndex, 'columnIndex': columnIndex })} icon={widget.icon || 'home'} title={widget.title || ''} />);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={clsx('jarvis-QuickJump', classes.QuickJump)}>\r\n\t\t\t<div className={classes.QuickJumpOpener} onClick={openQuickJump}>\r\n\t\t\t\t<Icon icon={'mdi-chevron-' + (open ? 'down' : 'up')} />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t{open && <div className={classes.QuickJumpBody}>\r\n\t\t\t\t<List classes={{ root: classes.JumpList }}>\r\n\t\t\t\t\t{QuickJumpComponents}\r\n\t\t\t\t</List>\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction JumpItem(props) {\r\n\tconst classes = useStyles();\r\n\t\r\n\treturn (\r\n\t\t<ListItem\r\n\t\t\tclasses={{ root: clsx(classes.JumpItem, props.highlighted && classes.JumpItemHighlighted) }}\r\n\t\t\tbutton={props.button !== undefined ? props.button : true}\r\n\t\t\tonClick={props.onJump}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<ListItemIcon classes={{ root: clsx(classes.JumpItemIcon, props.highlighted && classes.JumpItemIconHighlighted) }}>\r\n\t\t\t\t<Icon icon={props.icon} />\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemText primary={props.highlighted ? <strong>{props.title}</strong> : props.title} />\r\n\t\t</ListItem>\r\n\t);\r\n}"],"sourceRoot":""}