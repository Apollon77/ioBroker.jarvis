{"version":3,"sources":["../node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","components/Progress.js","pages/Notifications/Event.js"],"names":["AlertTitle","React","props","ref","classes","className","other","_objectWithoutProperties","Typography","_extends","gutterBottom","component","clsx","root","withStyles","theme","fontWeight","typography","fontWeightMedium","marginTop","name","useStyles","makeStyles","LinearProgress","onCompleted","offset","total","timer","useRef","useState","percentage","setPercentage","useEffect","progress","prevPercentage","current","setTimeout","clearTimeout","variant","value","emphasis","palette","type","backgroundColor","emphasize","background","default","AlertNone","styles","color","getContrastText","LinearProgressDialog","margin","spacing","LinearProgressSnackbar","NotificationSnackbar","display","NotificationPopup","NotificationEvent","NotificationsClass","Notifications","getInstance","notification","setNotification","on","item","state","set","id","onClose","icon","title","message","criticality","autoHideDuration","fontColor","Dialog","CustomDialogContent","key","open","header","Icon","iconColor","style","marginRight","DialogTitleTypography","actions","Inputs","Button","onClick","label","dangerouslySetInnerHTML","__html","snackbarOrigin","AlertProps","Snackbar","anchorOrigin","vertical","horizontal","Alert","indexOf","elevation","severity"],"mappings":"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","file":"static/js/11.8deaaa30.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import React, { useRef, useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\n\r\n\r\nimport MuiLinearProgress from '@material-ui/core/LinearProgress'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tLinearProgress: {\r\n\t},\r\n}));\r\n\r\n\r\nexport default function LinearProgress(props) {\r\n\tconst { className, onCompleted, offset = 0, total } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst timer = useRef(null);\r\n\tconst [percentage, setPercentage] = useState(offset);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst progress = () => {\r\n\t\t\tsetPercentage(prevPercentage => (++prevPercentage));\r\n\t\t\ttimer.current = setTimeout(() => progress(), total / 100);\r\n\t\t}\r\n\t\t\r\n\t\tprogress();\r\n\t\treturn () => timer.current && clearTimeout(timer.current);\r\n\t\t\r\n\t}, [total]);\r\n\t\r\n\tif (percentage > 100) {\r\n\t\ttimer.current && clearTimeout(timer.current);\r\n\t\tonCompleted && setTimeout(() => onCompleted(), 500);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<MuiLinearProgress\r\n\t\t\tclasses={{ root: clsx(classes.LinearProgress, className) }}\r\n\t\t\tvariant=\"determinate\"\r\n\t\t\tvalue={percentage > 100 ? 100 : percentage}\r\n\t\t\t/>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport Notifications from '../../controller/Notifications'\r\n\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Dialog from '../../components/Dialog'\r\nimport Icon from '../../components/Icon'\r\nimport Inputs from '../../components/Inputs'\r\nimport LinearProgress from '../../components/Progress'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => {\r\n\tconst emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\r\n\tconst backgroundColor = emphasize(theme.palette.background.default, emphasis);\r\n\t\r\n\treturn {\r\n\t\tAlertNone: styles => ({\r\n\t\t\tcolor: styles.color || theme.palette.getContrastText(backgroundColor),\r\n\t\t\tbackgroundColor: styles.backgroundColor || backgroundColor,\r\n\t\t}),\r\n\t\tLinearProgressDialog: {\r\n\t\t\tmargin: theme.spacing(2, -7, -2, -3)\r\n\t\t},\r\n\t\tLinearProgressSnackbar: {\r\n\t\t\tmarginTop: -4\r\n\t\t},\r\n\t\tNotificationSnackbar: {\r\n\t\t\tdisplay: 'inherit'\r\n\t\t},\r\n\t\tNotificationPopup: styles => ({\r\n\t\t\tbackgroundColor: styles.backgroundColor,\r\n\t\t\tcolor: styles.color\r\n\t\t})\r\n\t}\r\n});\r\n\r\n\r\nexport default function NotificationEvent(props) {\r\n\tconst NotificationsClass = new Notifications().getInstance();\r\n\tconst [notification,setNotification] = useState(null);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tNotificationsClass.on('new', item => {\r\n\t\t\t\r\n\t\t\t// mark as read\r\n\t\t\tif (!item.state || item.state === 'unread') {\r\n\t\t\t\tNotificationsClass.set(item.id, { 'state': 'read' });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//\r\n\t\t\tsetNotification(item);\r\n\t\t});\r\n\t\t\r\n\t}, [NotificationsClass]);\r\n\t\r\n\tconst onClose = () => setNotification(null);\r\n\t\r\n\tif (notification && (!notification.display || notification.display === 'modal' || notification.display === 'popup')) {\r\n\t\treturn <NotificationPopup onClose={onClose} {...notification} />\r\n\t}\r\n\telse if (notification && (notification.display === 'snackbar' || notification.display === 'alert')) {\r\n\t\treturn <NotificationSnackbar onClose={onClose} {...notification} />\r\n\t}\r\n\t\r\n\treturn null;\r\n}\r\n\r\nexport function NotificationPopup(props) {\r\n\tconst { onClose, id, icon = null, title, message, criticality = \"none\", autoHideDuration = null } = props;\r\n\tconst classes = useStyles({ 'color': props.fontColor, 'backgroundColor': props.backgroundColor });\r\n\t\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tclasses={{ CustomDialogContent: classes.NotificationPopup }}\r\n\t\t\tkey={'notification-' + id}\r\n\t\t\tid='NotificationPopup'\r\n\t\t\t\r\n\t\t\topen={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\t\r\n\t\t\theader={message && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{icon && <Icon icon={icon} color={props.iconColor} style={{ marginRight: 8 }} />}\r\n\t\t\t\t\t<Typography className={classes.DialogTitleTypography} display=\"inline\" variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{autoHideDuration !== null && (\r\n\t\t\t\t\t<LinearProgress\r\n\t\t\t\t\t\tclassName={classes.LinearProgressDialog}\r\n\t\t\t\t\t\ttotal={autoHideDuration}\r\n\t\t\t\t\t\tonCompleted={onClose}\r\n\t\t\t\t\t\t/>)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\tactions={\r\n\t\t\t\t<Inputs.Button key='action-close' variant=\"text\" onClick={onClose} label=\"Close\" />\r\n\t\t\t}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<div dangerouslySetInnerHTML={{ __html: message || title }} />\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nexport function NotificationSnackbar(props) {\r\n\tconst { onClose, id, icon = null, title, message, criticality = \"none\", snackbarOrigin = {}, autoHideDuration = null } = props;\r\n\tconst classes = useStyles({ 'color': props.fontColor, 'backgroundColor': props.backgroundColor });\r\n\t\r\n\tlet AlertProps = {}\r\n\tconst [open,] = useState(true);\r\n\t\r\n\t// custom icon\r\n\tif (icon) {\r\n\t\tAlertProps.icon = <Icon icon={icon} color={props.iconColor} />\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Snackbar\r\n\t\t\tclasses={{ root: classes.NotificationSnackbar }}\r\n\t\t\tkey={'notification-' + id}\r\n\t\t\topen={open !== false}\r\n\t\t\tanchorOrigin={{ vertical: snackbarOrigin.vertical || 'bottom', horizontal: snackbarOrigin.horizontal || 'center' }}\r\n\t\t\t//autoHideDuration={autoHideDuration}\r\n\t\t\tonClose={onClose}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<>\r\n\t\t\t\t<Alert\r\n\t\t\t\t\tclasses={{ root: clsx(['error', 'warning', 'info', 'success'].indexOf(criticality) === -1 && classes.AlertNone) }}\r\n\t\t\t\t\televation={6}\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tonClose={onClose}\r\n\t\t\t\t\tseverity={['error', 'warning', 'info', 'success'].indexOf(criticality) === -1 ? 'info' : criticality}\r\n\t\t\t\t\t{...AlertProps}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<AlertTitle>{title}</AlertTitle>\r\n\t\t\t\t\t{message}\r\n\t\t\t\t</Alert>\r\n\t\t\t\t{autoHideDuration !== null && (\r\n\t\t\t\t<LinearProgress\r\n\t\t\t\t\tclassName={classes.LinearProgressSnackbar}\r\n\t\t\t\t\ttotal={autoHideDuration}\r\n\t\t\t\t\tonCompleted={onClose}\r\n\t\t\t\t\t/>)}\r\n\t\t\t</>\r\n\t\t\t\r\n\t\t</Snackbar>\r\n\t);\r\n}"],"sourceRoot":""}