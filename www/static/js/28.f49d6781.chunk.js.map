{"version":3,"sources":["pages/Notifications/i18n/de.js","pages/Notifications/i18n/en.js","components/Divider.js","pages/Notifications/List.js","pages/Notifications/Drawer.js","pages/Notifications/i18n sync /^/.*$"],"names":["Divider","children","props","container","alignItems","spacing","item","xs","useStyles","makeStyles","theme","List","padding","unread","backgroundColor","palette","background","paper","read","opacity","archived","fontStyle","bold","fontWeight","NotificationList","list","divider","useState","undefined","hidden","setHidden","dense","button","onClick","prevHidden","Notification","id","state","title","message","icon","criticality","iconColor","classes","set","s","NotificationsClass","Notifications","del","root","clsx","color","primary","secondary","length","substr","edge","aria-label","size","React","memo","notifications","setNotifications","showNotification","notification","emit","useEffect","parse","res","reverse","get","on","off","notificationElements","archivedNotificationElements","forEach","push","key","i18n","t","prevProps","nextProps","open","drawer","styles","width","isMobile","default","drawerHeader","display","drawerIcon","marginRight","drawerTitle","margin","drawerClose","marginLeft","NotificationDrawer","navigate","Settings","handleDrawerClose","anchor","onOpen","console","log","onClose","className","variant","component","setTranslations","language","require","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/28.f49d6781.chunk.js","sourcesContent":["export default {\r\n}","export default {\r\n}","import React from 'react'\r\nimport { Grid, Divider as MuiDivider } from '@material-ui/core'\r\n\r\n\r\nconst Divider = ({ children, ...props }) => (\r\n\t<Grid container alignItems=\"center\" spacing={1} {...props}>\r\n\t\t<Grid item xs>\r\n\t\t\t<MuiDivider />\r\n\t\t</Grid>\r\n\t\t<Grid item>{children}</Grid>\r\n\t\t<Grid item xs>\r\n\t\t\t<MuiDivider />\r\n\t\t</Grid>\r\n\t</Grid>\r\n);\r\n\r\nexport default Divider;\r\n","import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport i18n from '../../controller/i18n'\r\nimport Notifications from '../../controller/Notifications'\r\n\r\nimport Divider from '../../components/Divider'\r\nimport Icon from '../../components/Icon'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ArchiveIcon from '@material-ui/icons/Archive'\r\nimport RestoreIcon from '@material-ui/icons/Unarchive'\r\nimport ReadIcon from '@material-ui/icons/Drafts'\r\nimport UnreadIcon from '@material-ui/icons/Markunread'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tList: {\r\n\t\tpadding: theme.spacing(3, 1.5)\r\n\t},\r\n\tunread: {\r\n\t\tbackgroundColor: theme.palette.background.paper\r\n\t},\r\n\tread: {\r\n\t\t//backgroundColor: theme.palette.grey[300],\r\n\t\topacity: 0.5\r\n\t},\r\n\tarchived: {\r\n\t\topacity: 0.5,\r\n\t\tfontStyle: 'italic'\r\n\t},\r\n\tbold: {\r\n\t\tfontWeight: 'bold',\r\n\t}\r\n}));\r\n\r\n\r\nexport default React.memo(props => {\r\n\tconst classes = useStyles();\r\n\tconst [notifications,setNotifications] = useState([]);\r\n\t\r\n\tconst NotificationsClass = new Notifications();\r\n\tconst showNotification = notification => {\r\n\t\tNotificationsClass.emit('new', { ...notification, 'display': 'popup', 'autoHideDuration': null });\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst parse = res => setNotifications([ ...res ].reverse());\r\n\t\t\r\n\t\tNotificationsClass.get('all', parse);\r\n\t\tNotificationsClass.on('all', parse);\r\n\t\t\r\n\t\treturn () => NotificationsClass.off('all', parse);\r\n\t\t\r\n\t}, [NotificationsClass]);\r\n\t\r\n\t// get notifications\r\n\tlet notificationElements = [];\r\n\tlet archivedNotificationElements = [];\r\n\t\r\n\tnotifications.forEach(notification => {\r\n\t\tif (notification.state !== 'archived') {\r\n\t\t\tnotificationElements.push(<Notification key={notification.id} onClick={() => showNotification(notification)} {...notification} />);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarchivedNotificationElements.push(<Notification key={notification.id} onClick={() => showNotification(notification)} {...notification} />);\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<List classes={{ root: classes.List }} dense>\r\n\t\t\t<NotificationList list={notificationElements} />\r\n\t\t\t<NotificationList list={archivedNotificationElements} hidden divider={archivedNotificationElements.length > 0 && ((hidden) => <em>{i18n.t((hidden ? 'show' : 'hide') + ' archived Notifications')}</em>)}\r\n\t\t\t\t/>\r\n\t\t\t\r\n\t\t</List>\r\n\t);\r\n\t\r\n}, (prevProps, nextProps) => {\r\n\treturn nextProps.open === false; // do not update when drawer is closed\r\n});\r\n\r\n\r\nfunction NotificationList(props) {\r\n\tconst { list, divider } = props;\r\n\t\r\n\tconst [hidden,setHidden] = useState(props.hidden !== undefined ? props.hidden : false);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{divider && <ListItem dense button onClick={() => setHidden(prevHidden => !prevHidden)}>\r\n\t\t\t\t<Divider>{divider(hidden)}</Divider>\r\n\t\t\t</ListItem>}\r\n\t\t\t{hidden !== true && list}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n\r\nfunction Notification(props) {\r\n\tconst { id, state, onClick, title = null, message = '', criticality, icon, iconColor } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tif (title === null) {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tconst set = s => {\r\n\t\tconst NotificationsClass = new Notifications();\r\n\t\t\r\n\t\tif (s === 'delete') {\r\n\t\t\tNotificationsClass.del(id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tNotificationsClass.set(id, { 'state': s });\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<ListItem\r\n\t\t\tonClick={onClick}\r\n\t\t\tclasses={{ root: clsx(state === 'read' && classes.read, (!state || state === 'unread') && classes.unread, state === 'archived' && classes.archived) }}\r\n\t\t\tdense\r\n\t\t\tdivider\r\n\t\t\tbutton\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<Icon icon={icon || 'mdi-message'} color={iconColor} />\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemText\r\n\t\t\t\tclasses={{ primary: clsx((!state || state === 'unread') && classes.bold), secondary: clsx((!state || state === 'unread') && classes.bold) }}\r\n\t\t\t\tprimary={title}\r\n\t\t\t\tsecondary={message.length > 40 ? message.substr(0,35) + '...' : message}\r\n\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t{state !== 'archived' ? (\r\n\t\t\t\t<IconButton onClick={() => set(state === 'unread' ? 'read' : 'unread')} edge=\"end\" aria-label={state === 'unread' ? 'read' : 'unread'}>\r\n\t\t\t\t\t{state === 'unread' ? <UnreadIcon size=\"small\" /> : <ReadIcon size=\"small\" />}\r\n\t\t\t\t</IconButton>) : (\r\n\t\t\t\t<IconButton onClick={() => set('read')} edge=\"end\" aria-label={'restore'}>\r\n\t\t\t\t\t<RestoreIcon size=\"small\" />\r\n\t\t\t\t</IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t<IconButton onClick={() => set(state === 'archived' ? 'delete' : 'archived')} edge=\"end\" aria-label={state === 'archived' ? 'delete' : 'archive'}>\r\n\t\t\t\t\t{state === 'archived' ? <DeleteIcon size=\"small\" /> : <ArchiveIcon size=\"small\" />}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItem>\r\n\t);\r\n}","import React from 'react'\r\n\r\nimport i18n from '../../controller/i18n'\r\nimport Settings from '../../controller/Settings'\r\n\r\nimport Icon from '../../components/Icon'\r\nimport NotificationList from './List'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Drawer from '@material-ui/core/SwipeableDrawer'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tdrawer: styles => ({\r\n\t\twidth: styles.isMobile ? '100%' : 500,\r\n\t\tbackgroundColor: theme.palette.background.default\r\n\t}),\r\n\tdrawerHeader: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(0, 1)\r\n\t},\r\n\tdrawerIcon: {\r\n\t\tmarginRight: theme.spacing()\r\n\t},\r\n\tdrawerTitle: {\r\n\t\tmargin: 'auto 0'\r\n\t},\r\n\tdrawerClose: {\r\n\t\tmarginLeft: 'auto'\r\n\t}\r\n}));\r\n\r\n\r\ni18n.setTranslations(language => require('./i18n/' + language));\r\n\r\nexport default function NotificationDrawer(props) {\r\n\tconst { navigate } = props;\r\n\tconst classes = useStyles({ isMobile: Settings.get('_isMobile') });\r\n\t\r\n\tconst handleDrawerClose = () => navigate(null);\r\n\t\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tanchor='right'\r\n\t\t\topen={props.open}\r\n\t\t\tonOpen={console.log}\r\n\t\t\tonClose={handleDrawerClose}\r\n\t\t\tclasses={{\r\n\t\t\t\tpaper: classes.drawer\r\n\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<div className={classes.drawerHeader}>\r\n\t\t\t\t<Typography variant='h6' component='h2' classes={{ root: classes.drawerTitle }}>\r\n\t\t\t\t\t<Icon icon='mdi-bell' color='inherit' className={classes.drawerIcon} />\r\n\t\t\t\t\t{i18n.t('Notifications')}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t\r\n\t\t\t\t<IconButton classes={{ root: classes.drawerClose }} onClick={handleDrawerClose}>\r\n\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t<Divider />\r\n\t\t\t\r\n\t\t\t<NotificationList {...props} />\r\n\t\t</Drawer>\r\n\t);\r\n}\r\n","var map = {\n\t\"./de\": 2061,\n\t\"./de.js\": 2061,\n\t\"./en\": 2062,\n\t\"./en.js\": 2062\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2199;"],"sourceRoot":""}