{"version":3,"sources":["components/EnhancedTableToolbar.js","components/EnhancedTableHead.js","components/EnhancedTableBody.js","components/EnhancedTable.js"],"names":["useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","props","classes","rowCount","numSelected","rightActionButton","className","clsx","variant","id","undefined","aria-label","EnhancedTableHead","headCells","onSelectAllClick","selectable","sortable","order","orderBy","onRequestSort","padding","indeterminate","checked","onChange","inputProps","map","headCell","key","align","disablePadding","sortDirection","style","width","active","direction","onClick","property","event","label","useStyles","noWrap","whiteSpace","nestedObjects","val","seen","indexOf","push","EnhancedTable","columns","sortedRows","emptyRows","rowStyles","selected","row","index","isItemSelected","labelId","styles","columnId","rowStyle","Object","keys","hover","role","aria-checked","tabIndex","column","scope","content","toLowerCase","format","Array","isArray","JSON","stringify","toString","showTableContent","height","colSpan","table","minWidth","descendingComparator","a","b","orderByCase","orderA","orderB","tmpA","tmpB","substr","err","console","error","message","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","size","CustomTableBody","rows","toolbar","pagination","defaultOrder","defaultOrderBy","defaultSelected","defaultPage","defaultRowsPerPage","toolbarRightActionButton","React","useState","setOrder","setOrderBy","setSelected","page","setPage","length","rowsPerPage","setRowsPerPage","useEffect","TableBody","EnhancedTableBody","Fragment","aria-labelledby","stickyHeader","target","newSelecteds","n","slice","Math","min","selectedIndex","newSelected","concat","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value"],"mappings":"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","file":"static/js/33.c368528a.chunk.js","sourcesContent":["/*\r\n * Code by MATERIAL-UI\r\n * @see https://material-ui.com/components/tables/#sorting-amp-selecting\r\n *\r\n */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\n\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTableToolbar(props) {\r\n  const classes = useToolbarStyles();\r\n  const { title, rowCount, numSelected, rightActionButton } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n\t\t\t{title !== undefined && (title + ' (' + rowCount + ')')}\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )\r\n\t  : rightActionButton}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};","/*\r\n * Code by MATERIAL-UI\r\n * @see https://material-ui.com/components/tables/#sorting-amp-selecting\r\n *\r\n */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\n\r\nexport default function EnhancedTableHead(props) {\r\n  const { headCells, onSelectAllClick, selectable, sortable, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\t\t{selectable !== false &&\r\n\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t  <Checkbox\r\n\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\r\n\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\r\n\t\t\t\tonChange={onSelectAllClick}\r\n\t\t\t\tinputProps={{ 'aria-label': 'select all' }}\r\n\t\t\t  />\r\n\t\t\t</TableCell>\r\n\t\t}\r\n\t\t\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={sortable && (orderBy === headCell.id ? order : false)}\r\n\t\t\tstyle={{ width: headCell.width || 'auto' }}\r\n          >\r\n\t\t  {sortable ?\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.orderBy || headCell.id)}\r\n            >\r\n              <strong>{headCell.label}</strong>\r\n            </TableSortLabel>\r\n\t\t\t:\r\n\t\t\t <strong>{headCell.label}</strong>\r\n\t\t\t}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};","/*\r\n * Code by MATERIAL-UI\r\n * @see https://material-ui.com/components/tables/#sorting-amp-selecting\r\n *\r\n */\r\nimport React from 'react'\r\nimport clsx from 'clsx'\r\nimport { format } from 'date-fns'\r\n\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tnoWrap: {\r\n\t\twhiteSpace: 'nowrap'\r\n\t}\r\n}));\r\n\r\n\r\n// https://stackoverflow.com/questions/9382167/serializing-object-that-contains-cyclic-object-value\r\nfunction nestedObjects(key, val, seen) {\r\n\t\r\n\tif (val !== null && typeof val === 'object') {\r\n\t\tif (seen.indexOf(val) >= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tseen.push(val);\r\n\t}\r\n\t\r\n\treturn val;\r\n}\r\n\r\nfunction showTableContent(content, type = '') {\r\n\t\r\n\tif (content === undefined || content === null) {\r\n\t\treturn '';\r\n\t}\r\n\t\r\n\tlet seen = [];\r\n\tswitch(type.toLowerCase()) {\r\n\t\tcase 'date':\r\n\t\t\tcontent = format(content, 'yyyy-MM-dd HH:mm:ss');\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tdefault:\r\n\t\t\tcontent = Array.isArray(content) || typeof content === 'object' ? JSON.stringify(content, (key, val) => nestedObjects(key, val, seen)) : content;\r\n\t\t\tcontent = typeof content === 'boolean' ? content.toString() : content;\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\treturn content;\r\n}\r\n\r\nexport default function EnhancedTable(props) {\r\n\tconst { columns, sortedRows, emptyRows, rowStyles, selectable, selected, onClick } = props;\r\n\tconst classes = useStyles();\r\n\tconst isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n\treturn (\r\n\r\n<TableBody>\r\n\t{sortedRows.map((row, index) => {\r\n\t\tconst isItemSelected = isSelected(row.id);\r\n\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\t\t\r\n\t\tlet styles = {};\r\n\t\tfor (let columnId in rowStyles) {\r\n\t\t\tlet rowStyle = rowStyles[columnId];\r\n\t\t\t\r\n\t\t\tif (row[columnId] && Object.keys(rowStyle).indexOf(row[columnId]) > -1) {\r\n\t\t\t\tstyles = { ...styles, ...rowStyle[row[columnId]] };\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\r\n\t<TableRow\r\n\t\tkey={'TableRow-' + index}\r\n\t\thover\r\n\t\tonClick={onClick ? (event => onClick(event, row.id)) : undefined}\r\n\t\trole=\"checkbox\"\r\n\t\taria-checked={isItemSelected}\r\n\t\ttabIndex={-1}\r\n\t\tselected={isItemSelected}\r\n\t\t>\r\n\t\t\r\n\t\t{selectable !== false &&\r\n\t\t<TableCell\r\n\t\t\tkey={'TableCell-' + index + '-Checkbox'}\r\n\t\t\tstyle={styles}\r\n\t\t\tpadding=\"checkbox\"\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<Checkbox\r\n\t\t\t\tchecked={isItemSelected}\r\n\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t/>\r\n\t\t\t\r\n\t\t</TableCell>\r\n\t\t}\r\n\t\t\r\n\t\t{columns.map(column => (\r\n\t\t<TableCell\r\n\t\t\tkey={'TableCell-' + index + '-' + column.id}\r\n\t\t\tclasses={{ root: clsx(column.noWrap && classes.noWrap) }}\r\n\t\t\tstyle={styles}\r\n\t\t\tscope=\"row\"\r\n\t\t\tpadding={column.disablePadding ? 'none' : 'default'}\r\n\t\t\t>\r\n\r\n\t\t\t{showTableContent(row[column.id], column.type)}\r\n\t\t</TableCell>\r\n\r\n\t\t))}\r\n\r\n\t</TableRow>\r\n\t\t\r\n\t\t);\r\n\t})}\r\n\t\r\n\t{emptyRows > 0 && (\r\n\t<TableRow style={{ height: 53 * emptyRows }}>\r\n\t\t<TableCell colSpan={6} />\r\n\t</TableRow>\r\n\t)}\r\n\t\r\n</TableBody>\r\n\r\n\t);\r\n}","/*\r\n * Code by MATERIAL-UI\r\n * @see https://material-ui.com/components/tables/#sorting-amp-selecting\r\n *\r\n */\r\nimport React, { useEffect } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\n\r\nimport EnhancedTableToolbar from '../components/EnhancedTableToolbar'\r\nimport EnhancedTableHead from '../components/EnhancedTableHead'\r\nimport EnhancedTableBody from '../components/EnhancedTableBody'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 750,\r\n  }\r\n}));\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy, orderByCase) {\r\n\t\r\n\tlet orderA, orderB;\r\n\tif (orderBy.indexOf('.') === -1) {\r\n\t\torderA = a[orderBy] || '';\r\n\t\torderB = b[orderBy] || '';\r\n\t}\r\n\telse {\r\n\t\tlet tmpA = { ...a };\r\n\t\tlet tmpB = { ...b };\r\n\t\tlet key = orderBy;\r\n\t\tlet index;\r\n\t\t\r\n\t\twhile (key.indexOf('.') > -1) {\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tindex = key.substr(0, key.indexOf('.'));\r\n\t\t\t\tkey = key.substr(key.indexOf('.')+1);\r\n\t\t\t\ttmpA = tmpA[index];\r\n\t\t\t\ttmpB = tmpB[index];\r\n\t\t\t}\r\n\t\t\tcatch(err) {\r\n\t\t\t\tconsole.error(err.message);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\torderA = tmpA[key] || '';\r\n\t\torderB = tmpB[key] || '';\r\n\t}\r\n\t\r\n\tif (orderByCase !== true) {\r\n\t\torderA = typeof orderA === 'object' ? JSON.stringify(orderA) : orderA.toLowerCase();\r\n\t\torderB = typeof orderB === 'object' ? JSON.stringify(orderB) : orderB.toLowerCase();\r\n\t}\r\n\t\r\n\t\r\n  if (orderB < orderA) {\r\n    return -1;\r\n  }\r\n  if (orderB > orderA) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy, orderByCase) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy, orderByCase)\r\n    : (a, b) => -descendingComparator(a, b, orderBy, orderByCase);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  \r\n  const { title, headCells, size, CustomTableBody, rows, toolbar, selectable, pagination, defaultOrder, defaultOrderBy, orderByCase, defaultSelected, defaultPage, defaultRowsPerPage, toolbarRightActionButton } = props;\r\n  \r\n  const [order, setOrder] = React.useState(defaultOrder || 'asc');\r\n  const [orderBy, setOrderBy] = React.useState(defaultOrderBy || headCells[0].orderBy || headCells[0].id);\r\n  const [selected, setSelected] = React.useState(defaultSelected || []);\r\n  const [page, setPage] = React.useState(defaultPage || 0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(pagination ? (defaultRowsPerPage || 5) : rows.length);\r\n\r\nuseEffect(() => setRowsPerPage(pagination ? (defaultRowsPerPage || 5) : rows.length), [rows.length, pagination, defaultRowsPerPage]);\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const selectRow = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const TableBody = CustomTableBody || EnhancedTableBody;\r\n  return (\r\n\t<React.Fragment>\r\n\t\t{toolbar !== false &&\r\n        <EnhancedTableToolbar\r\n\t\t  title={title}\r\n          rowCount={rows.length}\r\n\t\t  numSelected={selected.length || 0}\r\n\t\t  rightActionButton={toolbarRightActionButton}\r\n\t\t  />}\r\n\t\t\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n\t\t\tsize={size}\r\n\t\t\tstickyHeader={true}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n\t\t\t  {...props}\r\n            />\r\n\t\t\t\r\n\t\t\t<TableBody\r\n\t\t\t\tcolumns={headCells}\r\n\t\t\t\tsortedRows={stableSort(rows, getComparator(order, orderBy, orderByCase)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)}\r\n\t\t\t\temptyRows={rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)}\r\n\t\t\t\tonClick={selectable !== false && selectRow}\r\n\t\t\t\tselected={selected}\r\n\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t\r\n          </Table>\r\n        </TableContainer>\r\n\t\t{pagination && <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />}\r\n\t</React.Fragment>\r\n\t\r\n  );\r\n}"],"sourceRoot":""}