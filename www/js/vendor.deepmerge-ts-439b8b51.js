function s(e){return typeof e!="object"||e===null?0:Array.isArray(e)?2:F(e)?1:e instanceof Set?3:e instanceof Map?4:5}function y(e){const r=new Set;for(const n of e)for(const t of[...Object.keys(n),...Object.getOwnPropertySymbols(n)])r.add(t);return r}function b(e,r){return typeof e=="object"&&Object.prototype.propertyIsEnumerable.call(e,r)}function m(e){return{*[Symbol.iterator](){for(const r of e)for(const n of r)yield n}}}const d=new Set(["[object Object]","[object Module]"]);function F(e){if(!d.has(Object.prototype.toString.call(e)))return!1;const{constructor:r}=e;if(r===void 0)return!0;const n=r.prototype;return!(n===null||typeof n!="object"||!d.has(Object.prototype.toString.call(n))||!n.hasOwnProperty("isPrototypeOf"))}const g={mergeMaps:_,mergeSets:k,mergeArrays:A,mergeRecords:R,mergeOthers:l},f={defaultMerge:Symbol("deepmerge-ts: default merge"),skip:Symbol("deepmerge-ts: skip")};function O(e,r){return r}function P(...e){return S({})(...e)}function S(e,r){const n=h(e,t);function t(...o){return p(o,n,r)}return t}function h(e,r){var n,t;return{defaultMergeFunctions:g,mergeFunctions:{...g,...Object.fromEntries(Object.entries(e).filter(([o,c])=>Object.prototype.hasOwnProperty.call(g,o)).map(([o,c])=>c===!1?[o,l]:[o,c]))},metaDataUpdater:(n=e.metaDataUpdater)!==null&&n!==void 0?n:O,deepmerge:r,useImplicitDefaultMerging:(t=e.enableImplicitDefaultMerging)!==null&&t!==void 0?t:!1,actions:f}}function p(e,r,n){if(e.length===0)return;if(e.length===1)return i(e,r,n);const t=s(e[0]);if(t!==0&&t!==5){for(let o=1;o<e.length;o++)if(s(e[o])!==t)return i(e,r,n)}switch(t){case 1:return j(e,r,n);case 2:return D(e,r,n);case 3:return w(e,r,n);case 4:return I(e,r,n);default:return i(e,r,n)}}function j(e,r,n){const t=r.mergeFunctions.mergeRecords(e,r,n);return t===f.defaultMerge||r.useImplicitDefaultMerging&&t===void 0&&r.mergeFunctions.mergeRecords!==r.defaultMergeFunctions.mergeRecords?r.defaultMergeFunctions.mergeRecords(e,r,n):t}function D(e,r,n){const t=r.mergeFunctions.mergeArrays(e,r,n);return t===f.defaultMerge||r.useImplicitDefaultMerging&&t===void 0&&r.mergeFunctions.mergeArrays!==r.defaultMergeFunctions.mergeArrays?r.defaultMergeFunctions.mergeArrays(e):t}function w(e,r,n){const t=r.mergeFunctions.mergeSets(e,r,n);return t===f.defaultMerge||r.useImplicitDefaultMerging&&t===void 0&&r.mergeFunctions.mergeSets!==r.defaultMergeFunctions.mergeSets?r.defaultMergeFunctions.mergeSets(e):t}function I(e,r,n){const t=r.mergeFunctions.mergeMaps(e,r,n);return t===f.defaultMerge||r.useImplicitDefaultMerging&&t===void 0&&r.mergeFunctions.mergeMaps!==r.defaultMergeFunctions.mergeMaps?r.defaultMergeFunctions.mergeMaps(e):t}function i(e,r,n){const t=r.mergeFunctions.mergeOthers(e,r,n);return t===f.defaultMerge||r.useImplicitDefaultMerging&&t===void 0&&r.mergeFunctions.mergeOthers!==r.defaultMergeFunctions.mergeOthers?r.defaultMergeFunctions.mergeOthers(e):t}function R(e,r,n){const t={};for(const o of y(e)){const c=[];for(const a of e)b(a,o)&&c.push(a[o]);if(c.length===0)continue;const M=r.metaDataUpdater(n,{key:o,parents:e}),u=p(c,r,M);u!==f.skip&&(o==="__proto__"?Object.defineProperty(t,o,{value:u,configurable:!0,enumerable:!0,writable:!0}):t[o]=u)}return t}function A(e){return e.flat()}function k(e){return new Set(m(e))}function _(e){return new Map(m(e))}function l(e){return e[e.length-1]}export{P as d};
